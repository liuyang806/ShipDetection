node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 200
          }
        }
        string_val: ".\\tfrecords\\voc_2007_train_000.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_001.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_002.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_003.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_004.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_005.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_006.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_007.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_008.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_009.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_010.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_011.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_012.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_013.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_014.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_015.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_016.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_017.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_018.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_019.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_020.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_021.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_022.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_023.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_024.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_025.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_026.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_027.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_028.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_029.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_030.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_031.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_032.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_033.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_034.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_035.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_036.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_037.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_038.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_039.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_040.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_041.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_042.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_043.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_044.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_045.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_046.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_047.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_048.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_049.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_050.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_051.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_052.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_053.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_054.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_055.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_056.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_057.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_058.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_059.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_060.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_061.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_062.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_063.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_064.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_065.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_066.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_067.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_068.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_069.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_070.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_071.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_072.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_073.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_074.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_075.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_076.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_077.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_078.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_079.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_080.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_081.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_082.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_083.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_084.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_085.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_086.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_087.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_088.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_089.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_090.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_091.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_092.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_093.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_094.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_095.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_096.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_097.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_098.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_099.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_100.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_101.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_102.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_103.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_104.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_105.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_106.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_107.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_108.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_109.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_110.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_111.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_112.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_113.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_114.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_115.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_116.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_117.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_118.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_119.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_120.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_121.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_122.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_123.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_124.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_125.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_126.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_127.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_128.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_129.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_130.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_131.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_132.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_133.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_134.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_135.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_136.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_137.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_138.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_139.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_140.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_141.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_142.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_143.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_144.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_145.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_146.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_147.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_148.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_149.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_150.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_151.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_152.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_153.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_154.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_155.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_156.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_157.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_158.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_159.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_160.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_161.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_162.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_163.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_164.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_165.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_166.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_167.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_168.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_169.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_170.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_171.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_172.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_173.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_174.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_175.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_176.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_177.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_178.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_179.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_180.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_181.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_182.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_183.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_184.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_185.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_186.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_187.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_188.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_189.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_190.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_191.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_192.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_193.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_194.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_195.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_196.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_197.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_198.tfrecord"
        string_val: ".\\tfrecords\\voc_2007_train_199.tfrecord"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/Size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 200
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/Greater/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/Greater"
  op: "Greater"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames/Size"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames/Greater/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/Assert/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/Assert/Assert/data_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/Assert/Assert"
  op: "Assert"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames/Greater"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames/Assert/Assert/data_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/Identity"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames/Const"
  input: "^pascalvoc_2007_data_provider/parallel_read/filenames/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/RandomShuffle"
  op: "RandomShuffle"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames"
  op: "FIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/filenames_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames/RandomShuffle"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/filenames_Close"
  op: "QueueCloseV2"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/filenames_Close_1"
  op: "QueueCloseV2"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/filenames_Size"
  op: "QueueSizeV2"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/ToFloat"
  op: "Cast"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames/filenames_Size"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/mul"
  op: "Mul"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames/ToFloat"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/fraction_of_32_full/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "pascalvoc_2007_data_provider/parallel_read/filenames/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/filenames/fraction_of_32_full"
  op: "ScalarSummary"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames/fraction_of_32_full/tags"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/common_queue"
  op: "RandomShuffleQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 160
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 80
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/common_queue_Size"
  op: "QueueSizeV2"
  input: "pascalvoc_2007_data_provider/parallel_read/common_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/ToFloat"
  op: "Cast"
  input: "pascalvoc_2007_data_provider/parallel_read/common_queue_Size"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0062500001
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/mul"
  op: "Mul"
  input: "pascalvoc_2007_data_provider/parallel_read/ToFloat"
  input: "pascalvoc_2007_data_provider/parallel_read/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/fraction_of_160_full/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "pascalvoc_2007_data_provider/parallel_read/fraction_of_160_full"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/fraction_of_160_full"
  op: "ScalarSummary"
  input: "pascalvoc_2007_data_provider/parallel_read/fraction_of_160_full/tags"
  input: "pascalvoc_2007_data_provider/parallel_read/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/TFRecordReaderV2"
  op: "TFRecordReaderV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/TFRecordReaderV2_1"
  op: "TFRecordReaderV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/TFRecordReaderV2_2"
  op: "TFRecordReaderV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/TFRecordReaderV2_3"
  op: "TFRecordReaderV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/ReaderReadV2"
  op: "ReaderReadV2"
  input: "pascalvoc_2007_data_provider/parallel_read/TFRecordReaderV2"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/common_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "pascalvoc_2007_data_provider/parallel_read/common_queue"
  input: "pascalvoc_2007_data_provider/parallel_read/ReaderReadV2"
  input: "pascalvoc_2007_data_provider/parallel_read/ReaderReadV2:1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/ReaderReadV2_1"
  op: "ReaderReadV2"
  input: "pascalvoc_2007_data_provider/parallel_read/TFRecordReaderV2_1"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/common_queue_enqueue_1"
  op: "QueueEnqueueV2"
  input: "pascalvoc_2007_data_provider/parallel_read/common_queue"
  input: "pascalvoc_2007_data_provider/parallel_read/ReaderReadV2_1"
  input: "pascalvoc_2007_data_provider/parallel_read/ReaderReadV2_1:1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/ReaderReadV2_2"
  op: "ReaderReadV2"
  input: "pascalvoc_2007_data_provider/parallel_read/TFRecordReaderV2_2"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/common_queue_enqueue_2"
  op: "QueueEnqueueV2"
  input: "pascalvoc_2007_data_provider/parallel_read/common_queue"
  input: "pascalvoc_2007_data_provider/parallel_read/ReaderReadV2_2"
  input: "pascalvoc_2007_data_provider/parallel_read/ReaderReadV2_2:1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/ReaderReadV2_3"
  op: "ReaderReadV2"
  input: "pascalvoc_2007_data_provider/parallel_read/TFRecordReaderV2_3"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/common_queue_enqueue_3"
  op: "QueueEnqueueV2"
  input: "pascalvoc_2007_data_provider/parallel_read/common_queue"
  input: "pascalvoc_2007_data_provider/parallel_read/ReaderReadV2_3"
  input: "pascalvoc_2007_data_provider/parallel_read/ReaderReadV2_3:1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/common_queue_Close"
  op: "QueueCloseV2"
  input: "pascalvoc_2007_data_provider/parallel_read/common_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/common_queue_Close_1"
  op: "QueueCloseV2"
  input: "pascalvoc_2007_data_provider/parallel_read/common_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/parallel_read/common_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "pascalvoc_2007_data_provider/parallel_read/common_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ParseSingleExample/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ParseSingleExample/key_image/encoded"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ParseSingleExample/Reshape/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ParseSingleExample/Reshape"
  op: "Reshape"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/key_image/encoded"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ParseSingleExample/key_image/format"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "jpeg"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ParseSingleExample/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ParseSingleExample/Reshape_1"
  op: "Reshape"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/key_image/format"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ParseSingleExample/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ParseSingleExample/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ParseSingleExample/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample"
  op: "ParseSingleExample"
  input: "pascalvoc_2007_data_provider/parallel_read/common_queue_Dequeue:1"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/Const"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/Reshape"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/Reshape_1"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/Const_1"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/Const_2"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/Const_3"
  device: "/device:CPU:0"
  attr {
    key: "Tdense"
    value {
      list {
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dense_keys"
    value {
      list {
        s: "image/channels"
        s: "image/encoded"
        s: "image/format"
        s: "image/height"
        s: "image/shape"
        s: "image/width"
      }
    }
  }
  attr {
    key: "dense_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "num_sparse"
    value {
      i: 7
    }
  }
  attr {
    key: "sparse_keys"
    value {
      list {
        s: "image/object/bbox/Difficult"
        s: "image/object/bbox/label"
        s: "image/object/bbox/truncated"
        s: "image/object/bbox/xmax"
        s: "image/object/bbox/xmin"
        s: "image/object/bbox/ymax"
        s: "image/object/bbox/ymin"
      }
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Reshape/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Reshape"
  op: "Reshape"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:21"
  input: "pascalvoc_2007_data_provider/Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Reshape_1"
  op: "Reshape"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:22"
  input: "pascalvoc_2007_data_provider/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Reshape_2/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Reshape_2"
  op: "Reshape"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:23"
  input: "pascalvoc_2007_data_provider/Reshape_2/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Reshape_3/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Reshape_3"
  op: "Reshape"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:24"
  input: "pascalvoc_2007_data_provider/Reshape_3/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Reshape_4/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Reshape_4"
  op: "Reshape"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:25"
  input: "pascalvoc_2007_data_provider/Reshape_4/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Reshape_5/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Reshape_5"
  op: "Reshape"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:26"
  input: "pascalvoc_2007_data_provider/Reshape_5/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/SparseToDense/default_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/SparseToDense"
  op: "SparseToDense"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:1"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:15"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:8"
  input: "pascalvoc_2007_data_provider/SparseToDense/default_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Equal/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "raw"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Equal"
  op: "Equal"
  input: "pascalvoc_2007_data_provider/Reshape_2"
  input: "pascalvoc_2007_data_provider/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Equal_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RAW"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/Equal_1"
  op: "Equal"
  input: "pascalvoc_2007_data_provider/Reshape_2"
  input: "pascalvoc_2007_data_provider/Equal_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/LogicalOr"
  op: "LogicalOr"
  input: "pascalvoc_2007_data_provider/Equal"
  input: "pascalvoc_2007_data_provider/Equal_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/preds_c"
  op: "Pack"
  input: "pascalvoc_2007_data_provider/LogicalOr"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/Cast"
  op: "Cast"
  input: "pascalvoc_2007_data_provider/case/preds_c"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/num_true_conds"
  op: "Sum"
  input: "pascalvoc_2007_data_provider/case/Cast"
  input: "pascalvoc_2007_data_provider/case/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/n_true_conds"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/LessEqual"
  op: "LessEqual"
  input: "pascalvoc_2007_data_provider/case/num_true_conds"
  input: "pascalvoc_2007_data_provider/case/n_true_conds"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/Assert/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Input error: exclusive=True: more than 1 conditions (pascalvoc_2007_data_provider/LogicalOr:0) evaluated as True:"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/LessEqual"
  input: "pascalvoc_2007_data_provider/case/LessEqual"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/LessEqual"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/switch_t"
  device: "/device:CPU:0"
}
node {
  name: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/switch_t"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/NoOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/case/Assert/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Input error: exclusive=True: more than 1 conditions (pascalvoc_2007_data_provider/LogicalOr:0) evaluated as True:"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/Assert/Switch"
  input: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/Assert/data_0"
  input: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/Assert/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 1
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/LessEqual"
  input: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/case/LessEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/preds_c"
  input: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/case/preds_c"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/switch_f"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Assert"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/case/Assert/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/control_dependency_1"
  input: "pascalvoc_2007_data_provider/case/Assert/AssertGuard/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/LogicalOr"
  input: "pascalvoc_2007_data_provider/LogicalOr"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/switch_t"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/switch_f"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/pred_id"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/LogicalOr"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/DecodeRaw"
  op: "DecodeRaw"
  input: "pascalvoc_2007_data_provider/case/cond/DecodeRaw/Switch:1"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/DecodeRaw/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/Reshape_1"
  input: "pascalvoc_2007_data_provider/case/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Substr/pos"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Substr/len"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Substr"
  op: "Substr"
  input: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Substr/Switch"
  input: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Substr/pos"
  input: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Substr/len"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "unit"
    value {
      s: "BYTE"
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Substr/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/Reshape_1"
  input: "pascalvoc_2007_data_provider/case/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Equal/y"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\377\330\377"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Equal"
  op: "Equal"
  input: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Substr"
  input: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Equal"
  input: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/switch_t"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/switch_f"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/pred_id"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/DecodeJpeg"
  op: "DecodeJpeg"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/DecodeJpeg/Switch:1"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/DecodeJpeg/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Substr/Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/Substr/pos"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/Substr/len"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/Substr"
  op: "Substr"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/Substr/Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/Substr/pos"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/Substr/len"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "unit"
    value {
      s: "BYTE"
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/Substr/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/cond/is_jpeg/Substr/Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Substr/pos"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Substr/len"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Substr"
  op: "Substr"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/Substr/Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Substr/pos"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Substr/len"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "unit"
    value {
      s: "BYTE"
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Equal/y"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\377\330\377"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Equal"
  op: "Equal"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Substr"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Equal"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_t"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_f"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/pred_id"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels/x"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels/y"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels"
  op: "NotEqual"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels/x"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Assert/Const"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 1, 3) when decoding JPEG images"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Assert/Assert/data_0"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 1, 3) when decoding JPEG images"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Assert/Assert"
  op: "Assert"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Assert/Assert/data_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/DecodeJpeg"
  op: "DecodeJpeg"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/DecodeJpeg/Switch:1"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/DecodeJpeg/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/Substr/Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Identity"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/DecodeJpeg"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/pos"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/len"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr"
  op: "Substr"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/pos"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/len"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "unit"
    value {
      s: "BYTE"
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/Substr/Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Equal/y"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\211PN"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Equal"
  op: "Equal"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Equal"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/switch_t"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/switch_f"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/pred_id"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/DecodePng"
  op: "DecodePng"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/DecodePng/Switch:1"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/DecodePng/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Identity"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/DecodePng"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/y"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "GIF"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif"
  op: "Equal"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/Switch_1"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/Substr"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/Substr"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/Switch_1"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/Substr"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/pred_id"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels/x"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels/y"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels"
  op: "NotEqual"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels/x"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1/x"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1/y"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1"
  op: "NotEqual"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1/x"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/LogicalAnd"
  op: "LogicalAnd"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert/Const"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 3) when decoding GIF images"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert/Assert/data_0"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 3) when decoding GIF images"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert/Assert"
  op: "Assert"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/LogicalAnd"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert/Assert/data_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif"
  op: "DecodeGif"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif/Switch_1:1"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif/Switch_1"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif/Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Identity"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/pos"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/len"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr"
  op: "Substr"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/pos"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/len"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "unit"
    value {
      s: "BYTE"
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/Switch"
  op: "Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif/Switch"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pascalvoc_2007_data_provider/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/is_bmp/y"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "BM"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/is_bmp"
  op: "Equal"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/is_bmp/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_1/Const"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Unable to decode bytes as JPEG, PNG, GIF, or BMP"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_1/Assert/data_0"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Unable to decode bytes as JPEG, PNG, GIF, or BMP"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_1/Assert"
  op: "Assert"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/is_bmp"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_1/Assert/data_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels/x"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels/y"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels"
  op: "NotEqual"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels/x"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_2/Const"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 3) when decoding BMP images"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_2/Assert/data_0"
  op: "Const"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 3) when decoding BMP images"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_2/Assert"
  op: "Assert"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_2/Assert/data_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeBmp"
  op: "DecodeBmp"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/Switch"
  input: "^pascalvoc_2007_data_provider/case/Assert/AssertGuard/Merge"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_1/Assert"
  input: "^pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_2/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "channels"
    value {
      i: 0
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Identity_1"
  op: "Identity"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeBmp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Merge"
  op: "Merge"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Identity_1"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Merge"
  op: "Merge"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Merge"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Merge"
  op: "Merge"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Merge"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/Merge"
  op: "Merge"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Merge"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/DecodeJpeg"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/case/cond/Merge"
  op: "Merge"
  input: "pascalvoc_2007_data_provider/case/cond/cond_jpeg/Merge"
  input: "pascalvoc_2007_data_provider/case/cond/DecodeRaw"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/SparseToDense_1/default_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/SparseToDense_1"
  op: "SparseToDense"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:14"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:7"
  input: "pascalvoc_2007_data_provider/SparseToDense_1/default_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/SparseToDense_2/default_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/SparseToDense_2"
  op: "SparseToDense"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:2"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:16"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:9"
  input: "pascalvoc_2007_data_provider/SparseToDense_2/default_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ExpandDims"
  op: "ExpandDims"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:13"
  input: "pascalvoc_2007_data_provider/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ExpandDims_1/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ExpandDims_1"
  op: "ExpandDims"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:11"
  input: "pascalvoc_2007_data_provider/ExpandDims_1/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ExpandDims_2/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ExpandDims_2"
  op: "ExpandDims"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:12"
  input: "pascalvoc_2007_data_provider/ExpandDims_2/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ExpandDims_3/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/ExpandDims_3"
  op: "ExpandDims"
  input: "pascalvoc_2007_data_provider/ParseSingleExample/ParseSingleExample:10"
  input: "pascalvoc_2007_data_provider/ExpandDims_3/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/concat"
  op: "ConcatV2"
  input: "pascalvoc_2007_data_provider/ExpandDims"
  input: "pascalvoc_2007_data_provider/ExpandDims_1"
  input: "pascalvoc_2007_data_provider/ExpandDims_2"
  input: "pascalvoc_2007_data_provider/ExpandDims_3"
  input: "pascalvoc_2007_data_provider/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/transpose/perm"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "pascalvoc_2007_data_provider/transpose"
  op: "Transpose"
  input: "pascalvoc_2007_data_provider/concat"
  input: "pascalvoc_2007_data_provider/transpose/perm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/convert_image/Cast"
  op: "Cast"
  input: "pascalvoc_2007_data_provider/case/cond/Merge"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/convert_image/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0039215689
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/convert_image"
  op: "Mul"
  input: "ssd_preprocessing_train/convert_image/Cast"
  input: "ssd_preprocessing_train/convert_image/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims"
  op: "ExpandDims"
  input: "ssd_preprocessing_train/convert_image"
  input: "ssd_preprocessing_train/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_1/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_1"
  op: "ExpandDims"
  input: "pascalvoc_2007_data_provider/transpose"
  input: "ssd_preprocessing_train/ExpandDims_1/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/DrawBoundingBoxes"
  op: "DrawBoundingBoxes"
  input: "ssd_preprocessing_train/ExpandDims"
  input: "ssd_preprocessing_train/ExpandDims_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/image_with_bboxes/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_preprocessing_train/image_with_bboxes"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/image_with_bboxes"
  op: "ImageSummary"
  input: "ssd_preprocessing_train/image_with_bboxes/tag"
  input: "ssd_preprocessing_train/DrawBoundingBoxes"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/Shape"
  op: "Shape"
  input: "ssd_preprocessing_train/convert_image"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/ExpandDims"
  op: "ExpandDims"
  input: "pascalvoc_2007_data_provider/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2/min_object_covered"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2"
  op: "SampleDistortedBoundingBoxV2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/Shape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/ExpandDims"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2/min_object_covered"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "area_range"
    value {
      list {
        f: 0.1
        f: 1.0
      }
    }
  }
  attr {
    key: "aspect_ratio_range"
    value {
      list {
        f: 0.60000002
        f: 1.67
      }
    }
  }
  attr {
    key: "max_attempts"
    value {
      i: 200
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "use_image_if_no_bounding_boxes"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2:2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/Slice"
  op: "Slice"
  input: "ssd_preprocessing_train/convert_image"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2:1"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/stack"
  op: "Pack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub"
  op: "Sub"
  input: "pascalvoc_2007_data_provider/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/stack"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_1"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_2"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_3"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_10/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_10/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_10/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_10"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_10/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_10/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_10/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_11/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_11/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_11/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_11"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_11/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_11/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_11/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_4"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_10"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/stack_1"
  op: "Pack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_3"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/truediv"
  op: "RealDiv"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/stack_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\200?\000\000\200?"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose/perm"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose"
  op: "Transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/truediv"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose/perm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose_1/perm"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose_1"
  op: "Transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/Const"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose_1/perm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_1"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_1/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_1/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Maximum"
  op: "Maximum"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_2"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_2/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_2/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_3/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_3/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_3/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_3"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_3/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_3/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Maximum_1"
  op: "Maximum"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_4/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_4/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_4/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_4"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_4/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_4/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_4/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_5/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_5/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_5/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_5"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_5/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_5/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_5/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Minimum"
  op: "Minimum"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_4"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_6/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_6/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_6/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_6"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_6/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_6/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_6/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_7/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_7/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_7/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_7"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_7/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_7/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_7/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Minimum_1"
  op: "Minimum"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_6"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Minimum"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Maximum_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Maximum_2"
  op: "Maximum"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Maximum_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/sub_1"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Minimum_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Maximum_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Maximum_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Maximum_3"
  op: "Maximum"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/sub_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Maximum_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Maximum_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Maximum_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_8/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_8/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_8/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_8"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_8/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_8/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_8/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_9/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_9/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_9/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_9"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_9/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_9/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_9/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/sub_2"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_8"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_10/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_10/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_10/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_10"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_10/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_10/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_10/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_11/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_11/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_11/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_11"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_11/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_11/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_11/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/sub_3"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_10"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/strided_slice_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/mul_1"
  op: "Mul"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/sub_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/sub_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Greater/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Greater"
  op: "Greater"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/mul_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Greater/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/truediv"
  op: "RealDiv"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/mul"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/zeros_like"
  op: "ZerosLike"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/intersection"
  op: "Select"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/Greater"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/truediv"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/Greater/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/Greater"
  op: "Greater"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/bboxes_intersection/intersection"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/Greater/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Shape"
  op: "Shape"
  input: "pascalvoc_2007_data_provider/SparseToDense"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Shape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Prod"
  op: "Prod"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Shape_1"
  op: "Shape"
  input: "pascalvoc_2007_data_provider/SparseToDense"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Shape_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_1/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_1/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Shape_2"
  op: "Shape"
  input: "pascalvoc_2007_data_provider/SparseToDense"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Shape_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_2/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_2/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/concat/values_1"
  op: "Pack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/concat"
  op: "ConcatV2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/concat/values_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/strided_slice_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Reshape"
  op: "Reshape"
  input: "pascalvoc_2007_data_provider/SparseToDense"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/Greater"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Where"
  op: "Where"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Reshape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/Squeeze"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Shape"
  op: "Shape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/truediv"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Shape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Prod"
  op: "Prod"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Shape_1"
  op: "Shape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/truediv"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_1"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Shape_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_1/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_1/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Shape_2"
  op: "Shape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/truediv"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_2"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Shape_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_2/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_2/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/concat/values_1"
  op: "Pack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/concat"
  op: "ConcatV2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/concat/values_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/strided_slice_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Reshape"
  op: "Reshape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/truediv"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Reshape_1"
  op: "Reshape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/Greater"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Where"
  op: "Where"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Squeeze"
  op: "Squeeze"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/GatherV2"
  op: "GatherV2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Reshape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/Squeeze"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/Shape"
  op: "Shape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/Slice"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/unstack"
  op: "Unpack"
  input: "ssd_preprocessing_train/resize_image/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/ExpandDims"
  op: "ExpandDims"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/Slice"
  input: "ssd_preprocessing_train/resize_image/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/resize/size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\001\000\000,\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/resize/ResizeBilinear"
  op: "ResizeBilinear"
  input: "ssd_preprocessing_train/resize_image/ExpandDims"
  input: "ssd_preprocessing_train/resize_image/resize/size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: ",\001\000\000,\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/Reshape"
  op: "Reshape"
  input: "ssd_preprocessing_train/resize_image/resize/ResizeBilinear"
  input: "ssd_preprocessing_train/resize_image/stack"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_2/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_2"
  op: "ExpandDims"
  input: "ssd_preprocessing_train/resize_image/Reshape"
  input: "ssd_preprocessing_train/ExpandDims_2/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_3/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_3"
  op: "ExpandDims"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/GatherV2"
  input: "ssd_preprocessing_train/ExpandDims_3/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/DrawBoundingBoxes_1"
  op: "DrawBoundingBoxes"
  input: "ssd_preprocessing_train/ExpandDims_2"
  input: "ssd_preprocessing_train/ExpandDims_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/image_shape_distorted/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_preprocessing_train/image_shape_distorted"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/image_shape_distorted"
  op: "ImageSummary"
  input: "ssd_preprocessing_train/image_shape_distorted/tag"
  input: "ssd_preprocessing_train/DrawBoundingBoxes_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/random_uniform/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/random_uniform/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/random_uniform/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/random_flip_left_right/random_uniform/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/random_uniform/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/random_flip_left_right/random_uniform/max"
  input: "ssd_preprocessing_train/random_flip_left_right/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/random_uniform/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/random_flip_left_right/random_uniform/RandomUniform"
  input: "ssd_preprocessing_train/random_flip_left_right/random_uniform/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/random_uniform"
  op: "Add"
  input: "ssd_preprocessing_train/random_flip_left_right/random_uniform/mul"
  input: "ssd_preprocessing_train/random_flip_left_right/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/Less/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/Less"
  op: "Less"
  input: "ssd_preprocessing_train/random_flip_left_right/random_uniform"
  input: "ssd_preprocessing_train/random_flip_left_right/Less/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/random_flip_left_right/Less"
  input: "ssd_preprocessing_train/random_flip_left_right/Less"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond/switch_t"
  op: "Identity"
  input: "ssd_preprocessing_train/random_flip_left_right/cond/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond/switch_f"
  op: "Identity"
  input: "ssd_preprocessing_train/random_flip_left_right/cond/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond/pred_id"
  op: "Identity"
  input: "ssd_preprocessing_train/random_flip_left_right/Less"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond/ReverseV2/axis"
  op: "Const"
  input: "^ssd_preprocessing_train/random_flip_left_right/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond/ReverseV2"
  op: "ReverseV2"
  input: "ssd_preprocessing_train/random_flip_left_right/cond/ReverseV2/Switch:1"
  input: "ssd_preprocessing_train/random_flip_left_right/cond/ReverseV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond/ReverseV2/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/resize_image/Reshape"
  input: "ssd_preprocessing_train/random_flip_left_right/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_preprocessing_train/resize_image/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond/Switch_1"
  op: "Switch"
  input: "ssd_preprocessing_train/resize_image/Reshape"
  input: "ssd_preprocessing_train/random_flip_left_right/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_preprocessing_train/resize_image/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond/Merge"
  op: "Merge"
  input: "ssd_preprocessing_train/random_flip_left_right/cond/Switch_1"
  input: "ssd_preprocessing_train/random_flip_left_right/cond/ReverseV2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/random_flip_left_right/Less"
  input: "ssd_preprocessing_train/random_flip_left_right/Less"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/switch_t"
  op: "Identity"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/switch_f"
  op: "Identity"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/pred_id"
  op: "Identity"
  input: "ssd_preprocessing_train/random_flip_left_right/Less"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice/stack"
  op: "Const"
  input: "^ssd_preprocessing_train/random_flip_left_right/cond_1/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice/stack_1"
  op: "Const"
  input: "^ssd_preprocessing_train/random_flip_left_right/cond_1/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice/stack_2"
  op: "Const"
  input: "^ssd_preprocessing_train/random_flip_left_right/cond_1/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice/Switch:1"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice/stack"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice/stack_1"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/GatherV2"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/GatherV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_1/stack"
  op: "Const"
  input: "^ssd_preprocessing_train/random_flip_left_right/cond_1/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_1/stack_1"
  op: "Const"
  input: "^ssd_preprocessing_train/random_flip_left_right/cond_1/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_1/stack_2"
  op: "Const"
  input: "^ssd_preprocessing_train/random_flip_left_right/cond_1/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_1"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice/Switch:1"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_1/stack"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_1/stack_1"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/sub/x"
  op: "Const"
  input: "^ssd_preprocessing_train/random_flip_left_right/cond_1/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/sub/x"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_2/stack"
  op: "Const"
  input: "^ssd_preprocessing_train/random_flip_left_right/cond_1/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_2/stack_1"
  op: "Const"
  input: "^ssd_preprocessing_train/random_flip_left_right/cond_1/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_2/stack_2"
  op: "Const"
  input: "^ssd_preprocessing_train/random_flip_left_right/cond_1/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_2"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice/Switch:1"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_2/stack"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_2/stack_1"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_3/stack"
  op: "Const"
  input: "^ssd_preprocessing_train/random_flip_left_right/cond_1/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_3/stack_1"
  op: "Const"
  input: "^ssd_preprocessing_train/random_flip_left_right/cond_1/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_3/stack_2"
  op: "Const"
  input: "^ssd_preprocessing_train/random_flip_left_right/cond_1/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_3"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice/Switch:1"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_3/stack"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_3/stack_1"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/sub_1/x"
  op: "Const"
  input: "^ssd_preprocessing_train/random_flip_left_right/cond_1/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/sub_1"
  op: "Sub"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/sub_1/x"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/stack"
  op: "Pack"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/sub"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/strided_slice_2"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/sub_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/Switch_1"
  op: "Switch"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/GatherV2"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask_1/GatherV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_flip_left_right/cond_1/Merge"
  op: "Merge"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/Switch_1"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_uniform/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_uniform/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_uniform/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_uniform"
  op: "RandomUniformInt"
  input: "ssd_preprocessing_train/random_uniform/shape"
  input: "ssd_preprocessing_train/random_uniform/min"
  input: "ssd_preprocessing_train/random_uniform/max"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal"
  op: "Equal"
  input: "ssd_preprocessing_train/random_uniform"
  input: "ssd_preprocessing_train/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/random_flip_left_right/cond/Merge"
  input: "ssd_preprocessing_train/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1254902
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1254902
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color/random_uniform/max"
  input: "ssd_preprocessing_train/distort_color/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform/RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color/random_uniform/mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_brightness/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_brightness"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color/adjust_brightness/Identity"
  input: "ssd_preprocessing_train/distort_color/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_brightness/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color/adjust_brightness"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_1/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_1/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_1/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1/max"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_1/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1/RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_1"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1/mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_saturation/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color/adjust_brightness/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_saturation/AdjustSaturation"
  op: "AdjustSaturation"
  input: "ssd_preprocessing_train/distort_color/adjust_saturation/Identity"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_saturation/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color/adjust_saturation/AdjustSaturation"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_2/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_2/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_2/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_2/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_2/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2/max"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_2/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2/RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_2"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2/mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_hue/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color/adjust_saturation/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_hue/AdjustHue"
  op: "AdjustHue"
  input: "ssd_preprocessing_train/distort_color/adjust_hue/Identity"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_hue/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color/adjust_hue/AdjustHue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_3/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_3/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_3/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_3/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_3/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3/max"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_3/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3/RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_3"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3/mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_contrast/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color/adjust_hue/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_contrast"
  op: "AdjustContrastv2"
  input: "ssd_preprocessing_train/distort_color/adjust_contrast/Identity"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_contrast/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color/adjust_contrast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/clip_by_value/Minimum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/clip_by_value/Minimum"
  op: "Minimum"
  input: "ssd_preprocessing_train/distort_color/adjust_contrast/Identity_1"
  input: "ssd_preprocessing_train/distort_color/clip_by_value/Minimum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/clip_by_value/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/clip_by_value"
  op: "Maximum"
  input: "ssd_preprocessing_train/distort_color/clip_by_value/Minimum"
  input: "ssd_preprocessing_train/distort_color/clip_by_value/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal_1"
  op: "Equal"
  input: "ssd_preprocessing_train/random_uniform"
  input: "ssd_preprocessing_train/Equal_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Switch_1"
  op: "Switch"
  input: "ssd_preprocessing_train/random_flip_left_right/cond/Merge"
  input: "ssd_preprocessing_train/Equal_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform/max"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform/mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_saturation/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_saturation/AdjustSaturation"
  op: "AdjustSaturation"
  input: "ssd_preprocessing_train/distort_color_1/adjust_saturation/Identity"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_saturation/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_1/adjust_saturation/AdjustSaturation"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_1/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1254902
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_1/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1254902
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_1/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1/max"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_1/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_1"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1/mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_brightness/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_1/adjust_saturation/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_brightness"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_1/adjust_brightness/Identity"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_brightness/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_1/adjust_brightness"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_2/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_2/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_2/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_2/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_2/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2/max"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_2/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_2"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2/mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_contrast/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_1/adjust_brightness/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_contrast"
  op: "AdjustContrastv2"
  input: "ssd_preprocessing_train/distort_color_1/adjust_contrast/Identity"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_contrast/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_1/adjust_contrast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_3/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_3/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_3/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_3/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_3/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3/max"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_3/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_3"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3/mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_hue/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_1/adjust_contrast/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_hue/AdjustHue"
  op: "AdjustHue"
  input: "ssd_preprocessing_train/distort_color_1/adjust_hue/Identity"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_hue/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_1/adjust_hue/AdjustHue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/clip_by_value/Minimum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "ssd_preprocessing_train/distort_color_1/adjust_hue/Identity_1"
  input: "ssd_preprocessing_train/distort_color_1/clip_by_value/Minimum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/clip_by_value/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/clip_by_value"
  op: "Maximum"
  input: "ssd_preprocessing_train/distort_color_1/clip_by_value/Minimum"
  input: "ssd_preprocessing_train/distort_color_1/clip_by_value/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal_2"
  op: "Equal"
  input: "ssd_preprocessing_train/random_uniform"
  input: "ssd_preprocessing_train/Equal_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Switch_2"
  op: "Switch"
  input: "ssd_preprocessing_train/random_flip_left_right/cond/Merge"
  input: "ssd_preprocessing_train/Equal_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform/max"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform/mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_contrast/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_contrast"
  op: "AdjustContrastv2"
  input: "ssd_preprocessing_train/distort_color_2/adjust_contrast/Identity"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_contrast/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_2/adjust_contrast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_1/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_1/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_1/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1/max"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_1/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_1"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1/mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_hue/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_2/adjust_contrast/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_hue/AdjustHue"
  op: "AdjustHue"
  input: "ssd_preprocessing_train/distort_color_2/adjust_hue/Identity"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_hue/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_2/adjust_hue/AdjustHue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_2/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_2/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1254902
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_2/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1254902
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_2/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_2/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2/max"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_2/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_2"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2/mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_brightness/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_2/adjust_hue/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_brightness"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_2/adjust_brightness/Identity"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_brightness/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_2/adjust_brightness"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_3/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_3/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_3/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_3/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_3/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3/max"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_3/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_3"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3/mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_saturation/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_2/adjust_brightness/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_saturation/AdjustSaturation"
  op: "AdjustSaturation"
  input: "ssd_preprocessing_train/distort_color_2/adjust_saturation/Identity"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_saturation/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_2/adjust_saturation/AdjustSaturation"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/clip_by_value/Minimum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/clip_by_value/Minimum"
  op: "Minimum"
  input: "ssd_preprocessing_train/distort_color_2/adjust_saturation/Identity_1"
  input: "ssd_preprocessing_train/distort_color_2/clip_by_value/Minimum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/clip_by_value/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/clip_by_value"
  op: "Maximum"
  input: "ssd_preprocessing_train/distort_color_2/clip_by_value/Minimum"
  input: "ssd_preprocessing_train/distort_color_2/clip_by_value/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal_3"
  op: "Equal"
  input: "ssd_preprocessing_train/random_uniform"
  input: "ssd_preprocessing_train/Equal_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Switch_3"
  op: "Switch"
  input: "ssd_preprocessing_train/random_flip_left_right/cond/Merge"
  input: "ssd_preprocessing_train/Equal_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform/max"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform/mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_hue/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/Switch_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_hue/AdjustHue"
  op: "AdjustHue"
  input: "ssd_preprocessing_train/distort_color_3/adjust_hue/Identity"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_hue/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_3/adjust_hue/AdjustHue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_1/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_1/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_1/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1/max"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_1/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_1"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1/mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_saturation/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_3/adjust_hue/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_saturation/AdjustSaturation"
  op: "AdjustSaturation"
  input: "ssd_preprocessing_train/distort_color_3/adjust_saturation/Identity"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_saturation/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_3/adjust_saturation/AdjustSaturation"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_2/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_2/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_2/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_2/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_2/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2/max"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_2/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_2"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2/mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_contrast/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_3/adjust_saturation/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_contrast"
  op: "AdjustContrastv2"
  input: "ssd_preprocessing_train/distort_color_3/adjust_contrast/Identity"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_contrast/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_3/adjust_contrast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_3/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_3/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1254902
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_3/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1254902
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_3/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_3/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3/max"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_3/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_3"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3/mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_brightness/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_3/adjust_contrast/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_brightness"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_3/adjust_brightness/Identity"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_brightness/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_3/adjust_brightness"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/clip_by_value/Minimum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/clip_by_value/Minimum"
  op: "Minimum"
  input: "ssd_preprocessing_train/distort_color_3/adjust_brightness/Identity_1"
  input: "ssd_preprocessing_train/distort_color_3/clip_by_value/Minimum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/clip_by_value/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/clip_by_value"
  op: "Maximum"
  input: "ssd_preprocessing_train/distort_color_3/clip_by_value/Minimum"
  input: "ssd_preprocessing_train/distort_color_3/clip_by_value/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Merge"
  op: "Merge"
  input: "ssd_preprocessing_train/distort_color/clip_by_value"
  input: "ssd_preprocessing_train/distort_color_1/clip_by_value"
  input: "ssd_preprocessing_train/distort_color_2/clip_by_value"
  input: "ssd_preprocessing_train/distort_color_3/clip_by_value"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_4/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_4"
  op: "ExpandDims"
  input: "ssd_preprocessing_train/Merge"
  input: "ssd_preprocessing_train/ExpandDims_4/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_5/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_5"
  op: "ExpandDims"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/Merge"
  input: "ssd_preprocessing_train/ExpandDims_5/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/DrawBoundingBoxes_2"
  op: "DrawBoundingBoxes"
  input: "ssd_preprocessing_train/ExpandDims_4"
  input: "ssd_preprocessing_train/ExpandDims_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/image_color_distorted/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_preprocessing_train/image_color_distorted"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/image_color_distorted"
  op: "ImageSummary"
  input: "ssd_preprocessing_train/image_color_distorted/tag"
  input: "ssd_preprocessing_train/DrawBoundingBoxes_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "ssd_preprocessing_train/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/Merge"
  input: "ssd_preprocessing_train/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\366B\000\000\352B\000\000\320B"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/mul"
  input: "ssd_preprocessing_train/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/transpose/perm"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/transpose"
  op: "Transpose"
  input: "ssd_preprocessing_train/sub"
  input: "ssd_preprocessing_train/transpose/perm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "&\000\000\000&\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/zeros"
  op: "Fill"
  input: "bboxes_encode_block_0/zeros/shape_as_tensor"
  input: "bboxes_encode_block_0/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_0/zeros_1/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "&\000\000\000&\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/zeros_1"
  op: "Fill"
  input: "bboxes_encode_block_0/zeros_1/shape_as_tensor"
  input: "bboxes_encode_block_0/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_0/zeros_2/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "&\000\000\000&\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/zeros_2/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/zeros_2"
  op: "Fill"
  input: "bboxes_encode_block_0/zeros_2/shape_as_tensor"
  input: "bboxes_encode_block_0/zeros_2/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_0/zeros_3/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "&\000\000\000&\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/zeros_3/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/zeros_3"
  op: "Fill"
  input: "bboxes_encode_block_0/zeros_3/shape_as_tensor"
  input: "bboxes_encode_block_0/zeros_3/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_0/ones/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "&\000\000\000&\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/ones/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/ones"
  op: "Fill"
  input: "bboxes_encode_block_0/ones/shape_as_tensor"
  input: "bboxes_encode_block_0/ones/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_0/ones_1/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "&\000\000\000&\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/ones_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/ones_1"
  op: "Fill"
  input: "bboxes_encode_block_0/ones_1/shape_as_tensor"
  input: "bboxes_encode_block_0/ones_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Enter"
  op: "Enter"
  input: "bboxes_encode_block_0/while/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_0/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Enter_1"
  op: "Enter"
  input: "bboxes_encode_block_0/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_0/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Enter_2"
  op: "Enter"
  input: "bboxes_encode_block_0/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_0/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Enter_3"
  op: "Enter"
  input: "bboxes_encode_block_0/zeros_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_0/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Enter_4"
  op: "Enter"
  input: "bboxes_encode_block_0/zeros_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_0/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Enter_5"
  op: "Enter"
  input: "bboxes_encode_block_0/ones"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_0/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Enter_6"
  op: "Enter"
  input: "bboxes_encode_block_0/ones_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_0/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Merge"
  op: "Merge"
  input: "bboxes_encode_block_0/while/Enter"
  input: "bboxes_encode_block_0/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Merge_1"
  op: "Merge"
  input: "bboxes_encode_block_0/while/Enter_1"
  input: "bboxes_encode_block_0/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Merge_2"
  op: "Merge"
  input: "bboxes_encode_block_0/while/Enter_2"
  input: "bboxes_encode_block_0/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Merge_3"
  op: "Merge"
  input: "bboxes_encode_block_0/while/Enter_3"
  input: "bboxes_encode_block_0/while/NextIteration_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Merge_4"
  op: "Merge"
  input: "bboxes_encode_block_0/while/Enter_4"
  input: "bboxes_encode_block_0/while/NextIteration_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Merge_5"
  op: "Merge"
  input: "bboxes_encode_block_0/while/Enter_5"
  input: "bboxes_encode_block_0/while/NextIteration_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Merge_6"
  op: "Merge"
  input: "bboxes_encode_block_0/while/Enter_6"
  input: "bboxes_encode_block_0/while/NextIteration_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Shape"
  op: "Shape"
  input: "bboxes_encode_block_0/while/Shape/Enter"
  input: "^bboxes_encode_block_0/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Shape/Enter"
  op: "Enter"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/GatherV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_0/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Less"
  op: "Less"
  input: "bboxes_encode_block_0/while/Merge"
  input: "bboxes_encode_block_0/while/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice/stack"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice"
  op: "StridedSlice"
  input: "bboxes_encode_block_0/while/Less"
  input: "bboxes_encode_block_0/while/strided_slice/stack"
  input: "bboxes_encode_block_0/while/strided_slice/stack_1"
  input: "bboxes_encode_block_0/while/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/LoopCond"
  op: "LoopCond"
  input: "bboxes_encode_block_0/while/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Switch"
  op: "Switch"
  input: "bboxes_encode_block_0/while/Merge"
  input: "bboxes_encode_block_0/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_0/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Switch_1"
  op: "Switch"
  input: "bboxes_encode_block_0/while/Merge_1"
  input: "bboxes_encode_block_0/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_0/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Switch_2"
  op: "Switch"
  input: "bboxes_encode_block_0/while/Merge_2"
  input: "bboxes_encode_block_0/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_0/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Switch_3"
  op: "Switch"
  input: "bboxes_encode_block_0/while/Merge_3"
  input: "bboxes_encode_block_0/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_0/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Switch_4"
  op: "Switch"
  input: "bboxes_encode_block_0/while/Merge_4"
  input: "bboxes_encode_block_0/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_0/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Switch_5"
  op: "Switch"
  input: "bboxes_encode_block_0/while/Merge_5"
  input: "bboxes_encode_block_0/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_0/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Switch_6"
  op: "Switch"
  input: "bboxes_encode_block_0/while/Merge_6"
  input: "bboxes_encode_block_0/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_0/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Identity"
  op: "Identity"
  input: "bboxes_encode_block_0/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Identity_1"
  op: "Identity"
  input: "bboxes_encode_block_0/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Identity_2"
  op: "Identity"
  input: "bboxes_encode_block_0/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Identity_3"
  op: "Identity"
  input: "bboxes_encode_block_0/while/Switch_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Identity_4"
  op: "Identity"
  input: "bboxes_encode_block_0/while/Switch_4:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Identity_5"
  op: "Identity"
  input: "bboxes_encode_block_0/while/Switch_5:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Identity_6"
  op: "Identity"
  input: "bboxes_encode_block_0/while/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/add/y"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/add"
  op: "Add"
  input: "bboxes_encode_block_0/while/Identity"
  input: "bboxes_encode_block_0/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_1/stack"
  op: "Pack"
  input: "bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_1/stack_1"
  op: "Pack"
  input: "bboxes_encode_block_0/while/add"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_1/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_1"
  op: "StridedSlice"
  input: "bboxes_encode_block_0/while/Shape/Enter"
  input: "bboxes_encode_block_0/while/strided_slice_1/stack"
  input: "bboxes_encode_block_0/while/strided_slice_1/stack_1"
  input: "bboxes_encode_block_0/while/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/add_1/y"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/add_1"
  op: "Add"
  input: "bboxes_encode_block_0/while/Identity"
  input: "bboxes_encode_block_0/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_2/stack"
  op: "Pack"
  input: "bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_2/stack_1"
  op: "Pack"
  input: "bboxes_encode_block_0/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_2/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_2"
  op: "StridedSlice"
  input: "bboxes_encode_block_0/while/strided_slice_2/Enter"
  input: "bboxes_encode_block_0/while/strided_slice_2/stack"
  input: "bboxes_encode_block_0/while/strided_slice_2/stack_1"
  input: "bboxes_encode_block_0/while/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_2/Enter"
  op: "Enter"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_0/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_3/stack"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_3/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_3/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_3"
  op: "StridedSlice"
  input: "bboxes_encode_block_0/while/strided_slice_2"
  input: "bboxes_encode_block_0/while/strided_slice_3/stack"
  input: "bboxes_encode_block_0/while/strided_slice_3/stack_1"
  input: "bboxes_encode_block_0/while/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Maximum/x"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        tensor_content: "K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275K~\261\274\206>\033\275\254\007;\274\332 \024\275\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\010\327\243;\374\0218\274n\340y<L\233\033\274\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\351\264\001=$\326|<$\262+=j\246\214<\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=\357\356n=\217o,=\025v\214=;\2153=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=z\024\256=\312\324\214=\030\023\303=\240c\220=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=~\261\344=\316q\303=\033\260\371=\244\000\307=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=A\247\r>\322\016\372=\217&\030>\250\235\375=\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>\303\365(>\353U\030>\021u3>V\035\032>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>EDD>m\2443>\223\303N>\330k5>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>\306\222_>\356\362N>\024\022j>Y\272P>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010l>H\341z>pAj>K\260\202>\333\010lo\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>&\277\230>:o\220>\315\376\235>\357R\221>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>gf\246>{\026\236>\016\246\253>0\372\236>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\247\r\264>\273\275\253>NM\271>p\241\254>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>\350\264\301>\374d\271>\217\364\306>\261H\272>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>)\\\317>=\014\307>\320\233\324>\362\357\307>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>j\003\335>~\263\324>\021C\342>3\227\325>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>t>\343>\253\252\352>\277Z\342>R\352\357>tj\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>\226\374\002?A\251\375>j\234\005?\366\214\376>6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?6\320\t?@\250\005?\np\014?\033\032\006?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?\327\243\020?\341{\014?\253C\023?\274\355\014?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?ww\027?\201O\023?K\027\032?\\\301\023?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\027K\036?!#\032?\353\352 ?\374\224\032?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?\270\036%?\302\366 ?\214\276\'?\235h!?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?X\362+?b\312\'?,\222.?=<(?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\371\3052?\003\236.?\315e5?\336\017/?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?\231\2319?\243q5?m9<?~\3435?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rC?\037\267<?:m@?DE<?\016\rz\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?z\024N?\204\354I?N\264P?_^J?zb?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\\\217b?fg^?0/e?A\331^?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\374bi?\006;e?\320\002l?\341\254e?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?\2356p?\247\016l?q\326r?\202\200l?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?=\nw?G\342r?\021\252y?\"Ts?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Maximum"
  op: "Maximum"
  input: "bboxes_encode_block_0/while/Maximum/x"
  input: "bboxes_encode_block_0/while/strided_slice_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_4/stack"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_4/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_4/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_4"
  op: "StridedSlice"
  input: "bboxes_encode_block_0/while/strided_slice_2"
  input: "bboxes_encode_block_0/while/strided_slice_4/stack"
  input: "bboxes_encode_block_0/while/strided_slice_4/stack_1"
  input: "bboxes_encode_block_0/while/strided_slice_4/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Maximum_1/x"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        tensor_content: "K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?K~\261\274\206>\033\275\332 \024\275\254\007;\274\010\327\243;\374\0218\274L\233\033\274n\340y<\351\264\001=$\326|<j\246\214<$\262+=\357\356n=\217o,=;\2153=\025v\214=z\024\256=\312\324\214=\240c\220=\030\023\303=~\261\344=\316q\303=\244\000\307=\033\260\371=A\247\r>\322\016\372=\250\235\375=\217&\030>\303\365(>\353U\030>V\035\032>\021u3>EDD>m\2443>\330k5>\223\303N>\306\222_>\356\362N>Y\272P>\024\022j>H\341z>pAj>\333\010l>K\260\202>\345\027\213>\371\307\202>\256\253\203>\214W\220>&\277\230>:o\220>\357R\221>\315\376\235>gf\246>{\026\236>0\372\236>\016\246\253>\247\r\264>\273\275\253>p\241\254>NM\271>\350\264\301>\374d\271>\261H\272>\217\364\306>)\\\317>=\014\307>\362\357\307>\320\233\324>j\003\335>~\263\324>3\227\325>\021C\342>\253\252\352>\277Z\342>t>\343>R\352\357>\353Q\370>\377\001\360>\264\345\360>\222\221\375>\226\374\002?A\251\375>\366\214\376>j\234\005?6\320\t?@\250\005?\033\032\006?\np\014?\327\243\020?\341{\014?\274\355\014?\253C\023?ww\027?\201O\023?\\\301\023?K\027\032?\027K\036?!#\032?\374\224\032?\353\352 ?\270\036%?\302\366 ?\235h!?\214\276\'?X\362+?b\312\'?=<(?,\222.?\371\3052?\003\236.?\336\017/?\315e5?\231\2319?\243q5?~\3435?m9<?:m@?DE<?\037\267<?\016\rC?\332@G?\344\030C?\277\212C?\256\340I?z\024N?\204\354I?_^J?N\264P?\033\350T?%\300P?\0002Q?\357\207W?\273\273[?\305\223W?\240\005X?\217[^?\\\217b?fg^?A\331^?0/e?\374bi?\006;e?\341\254e?\320\002l?\2356p?\247\016l?\202\200l?q\326r?=\nw?G\342r?\"Ts?\021\252y?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Maximum_1"
  op: "Maximum"
  input: "bboxes_encode_block_0/while/Maximum_1/x"
  input: "bboxes_encode_block_0/while/strided_slice_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_5/stack"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_5/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_5/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_5"
  op: "StridedSlice"
  input: "bboxes_encode_block_0/while/strided_slice_2"
  input: "bboxes_encode_block_0/while/strided_slice_5/stack"
  input: "bboxes_encode_block_0/while/strided_slice_5/stack_1"
  input: "bboxes_encode_block_0/while/strided_slice_5/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Minimum/x"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        tensor_content: ",\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=,\371E=F<\204=\362\373\033=p\255\200=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\232\231\231=J\331\272=\374\232\204=tJ\267=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\2366\320=Nv\361=\0008\273=x\347\355=\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>\320i\003>\250\t\024>\003\325\361==B\022>R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->R\270\036>*X/>\0039\024>\277\220->\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>\323\006:>\253\246J>\205\207/>@\337H>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>UUU>-\365e>\007\326J>\302-d>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>\327\243p>\330\241\200>\211$f>D|\177>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>-\371\205>\031I\216>\205\271\200>ce\215>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`\216>\244\014\233>m\240\223>Y\360\233>\306`g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>0\226\274>\034\346\304>\211V\267>g\002\304>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>q=\312>]\215\322>\312\375\304>\250\251\321>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\n\245\322>\350P\337>\261\344\327>\2354\340>\nj\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>33\363>\037\203\373>\214\363\355>j\237\372>:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?:m\000?0\225\004?\315\232\373>U#\004?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?\333@\007?\321h\013?\007\241\004?\366\366\n?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?{\024\016?q<\022?\247t\013?\226\312\021?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\034\350\024?\022\020\031?HH\022?7\236\030?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?\274\273\033?\262\343\037?\350\033\031?\327q\037?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?]\217\"?S\267&?\211\357\037?xE&?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\375b)?\363\212-?)\303&?\030\031-?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?\23560?\223^4?\311\226-?\270\3543?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?>\n7?42;?jj4?Y\300:?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\336\335=?\324\005B?\n>;?\371\223A?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232gH?\177\261D?u\331H?\253\021B?\232g`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?`,Y?VT]?\214\214V?{\342\\?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\000\000`?\366\'d?,`]?\033\266c?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?\241\323f?\227\373j?\3153d?\274\211j?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?A\247m?7\317q?m\007k?\\]q?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\342zt?\330\242x?\016\333q?\3750x?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256x?\235\004\177?\202N{?xv\177?\256\256xz\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?\341z\204?\334\216\206?\367*\203?\357U\206?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Minimum"
  op: "Minimum"
  input: "bboxes_encode_block_0/while/Minimum/x"
  input: "bboxes_encode_block_0/while/strided_slice_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_6/stack"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_6/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_6/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_6"
  op: "StridedSlice"
  input: "bboxes_encode_block_0/while/strided_slice_2"
  input: "bboxes_encode_block_0/while/strided_slice_6/stack"
  input: "bboxes_encode_block_0/while/strided_slice_6/stack_1"
  input: "bboxes_encode_block_0/while/strided_slice_6/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Minimum_1/x"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        tensor_content: ",\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?,\371E=F<\204=p\255\200=\362\373\033=\232\231\231=J\331\272=tJ\267=\374\232\204=\2366\320=Nv\361=x\347\355=\0008\273=\320i\003>\250\t\024>=B\022>\003\325\361=R\270\036>*X/>\277\220->\0039\024>\323\006:>\253\246J>@\337H>\205\207/>UUU>-\365e>\302-d>\007\326J>\327\243p>\330\241\200>D|\177>\211$f>-\371\205>\031I\216>ce\215>\205\271\200>m\240\223>Y\360\233>\244\014\233>\306`\216>\256G\241>\232\227\251>\345\263\250>\007\010\234>\357\356\256>\333>\267>&[\266>H\257\251>0\226\274>\034\346\304>g\002\304>\211V\267>q=\312>]\215\322>\250\251\321>\312\375\304>\261\344\327>\2354\340>\350P\337>\n\245\322>\362\213\345>\336\333\355>)\370\354>KL\340>33\363>\037\203\373>j\237\372>\214\363\355>:m\000?0\225\004?U#\004?\315\232\373>\333@\007?\321h\013?\366\366\n?\007\241\004?{\024\016?q<\022?\226\312\021?\247t\013?\034\350\024?\022\020\031?7\236\030?HH\022?\274\273\033?\262\343\037?\327q\037?\350\033\031?]\217\"?S\267&?xE&?\211\357\037?\375b)?\363\212-?\030\031-?)\303&?\23560?\223^4?\270\3543?\311\226-?>\n7?42;?Y\300:?jj4?\336\335=?\324\005B?\371\223A?\n>;?\177\261D?u\331H?\232gH?\253\021B?\037\205K?\025\255O?:;O?K\345H?\300XR?\266\200V?\333\016V?\354\270O?`,Y?VT]?{\342\\?\214\214V?\000\000`?\366\'d?\033\266c?,`]?\241\323f?\227\373j?\274\211j?\3153d?A\247m?7\317q?\\]q?m\007k?\342zt?\330\242x?\3750x?\016\333q?\202N{?xv\177?\235\004\177?\256\256x?\021\021\201?\014%\203?\037\354\202?O\202\177?\341z\204?\334\216\206?\357U\206?\367*\203?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Minimum_1"
  op: "Minimum"
  input: "bboxes_encode_block_0/while/Minimum_1/x"
  input: "bboxes_encode_block_0/while/strided_slice_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub"
  op: "Sub"
  input: "bboxes_encode_block_0/while/Minimum"
  input: "bboxes_encode_block_0/while/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Maximum_2/y"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Maximum_2"
  op: "Maximum"
  input: "bboxes_encode_block_0/while/sub"
  input: "bboxes_encode_block_0/while/Maximum_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub_1"
  op: "Sub"
  input: "bboxes_encode_block_0/while/Minimum_1"
  input: "bboxes_encode_block_0/while/Maximum_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Maximum_3/y"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Maximum_3"
  op: "Maximum"
  input: "bboxes_encode_block_0/while/sub_1"
  input: "bboxes_encode_block_0/while/Maximum_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/mul"
  op: "Mul"
  input: "bboxes_encode_block_0/while/Maximum_2"
  input: "bboxes_encode_block_0/while/Maximum_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub_2/x"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        tensor_content: ".\220\240;2\010,<.\220\240;.\220\240;/\220\240;3\010,<.\220\240;-\220\240;/\220\240;3\010,<.\220\240;-\220\240;-\220\240;1\010,<-\220\240;-\220\240;/\220\240;3\010,<.\220\240;-\220\240;-\220\240;1\010,<-\220\240;.\220\240;-\220\240;1\010,<-\220\240;0\220\240;-\220\240;3\010,<-\220\240;0\220\240;/\220\240;3\010,<-\220\240;-\220\240;-\220\240;1\010,<.\220\240;0\220\240;-\220\240;1\010,<.\220\240;0\220\240;-\220\240;1\010,<0\220\240;0\220\240;-\220\240;1\010,<0\220\240;0\220\240;-\220\240;1\010,<0\220\240;0\220\240;-\220\240;1\010,<0\220\240;0\220\240;-\220\240;1\010,<0\220\240;0\220\240;-\220\240;1\010,<0\220\240;0\220\240;-\220\240;1\010,<-\220\240;0\220\240;1\220\240;4\010,<0\220\240;0\220\240;1\220\240;4\010,<0\220\240;0\220\240;6\220\240;4\010,<0\220\240;0\220\240;6\220\240;8\010,<0\220\240;0\220\240;6\220\240;8\010,<0\220\240;0\220\240;6\220\240;8\010,<0\220\240;0\220\240;6\220\240;8\010,<0\220\240;0\220\240;6\220\240;8\010,<0\220\240;0\220\240;6\220\240;8\010,<0\220\240;0\220\240;6\220\240;8\010,<0\220\240;0\220\240;6\220\240;8\010,<0\220\240;0\220\240;6\220\240;8\010,<0\220\240;0\220\240;6\220\240;8\010,<0\220\240;0\220\240;6\220\240;8\010,<0\220\240;0\220\240;6\220\240;8\010,<0\220\240;0\220\240;6\220\240;8\010,<0\220\240;0\220\240;6\220\240;8\010,<0\220\240;0\220\240;6\220\240;8\010,<0\220\240;0\220\240;-\220\240;1\010,<0\220\240;0\220\240;-\220\240;1\010,<0\220\240;#\220\240;/\220\240;3\010,<-\220\240;.\220\240;0\220\240;4\010,<.\220\240;.\220\240;0\220\240;4\010,<.\220\240;.\220\240;.\220\240;2\010,<,\220\240;.\220\240;0\220\240;4\010,<.\220\240;.\220\240;.\220\240;2\010,<,\220\240;/\220\240;.\220\240;2\010,<,\220\240;1\220\240;.\220\240;4\010,<,\220\240;1\220\240;0\220\240;4\010,<,\220\240;.\220\240;.\220\240;2\010,<.\220\240;1\220\240;.\220\240;2\010,<.\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,<,\220\240;1\220\240;2\220\240;5\010,</\220\240;1\220\240;2\220\240;5\010,</\220\240;1\220\240;7\220\240;5\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;$\220\240;/\220\240;3\010,<-\220\240;.\220\240;0\220\240;4\010,<.\220\240;.\220\240;0\220\240;4\010,<.\220\240;.\220\240;.\220\240;2\010,<,\220\240;.\220\240;0\220\240;4\010,<.\220\240;.\220\240;.\220\240;2\010,<,\220\240;/\220\240;.\220\240;2\010,<,\220\240;1\220\240;.\220\240;4\010,<,\220\240;1\220\240;0\220\240;4\010,<,\220\240;.\220\240;.\220\240;2\010,<.\220\240;1\220\240;.\220\240;2\010,<.\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,<,\220\240;1\220\240;2\220\240;5\010,</\220\240;1\220\240;2\220\240;5\010,</\220\240;1\220\240;7\220\240;5\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;$\220\240;-\220\240;1\010,<-\220\240;-\220\240;.\220\240;2\010,<.\220\240;,\220\240;.\220\240;2\010,<.\220\240;,\220\240;,\220\240;0\010,<,\220\240;,\220\240;.\220\240;2\010,<.\220\240;,\220\240;,\220\240;0\010,<,\220\240;.\220\240;,\220\240;0\010,<,\220\240;/\220\240;,\220\240;2\010,<,\220\240;/\220\240;.\220\240;2\010,<,\220\240;,\220\240;,\220\240;0\010,<.\220\240;/\220\240;,\220\240;0\010,<.\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;,\220\240;0\010,<,\220\240;/\220\240;0\220\240;4\010,</\220\240;/\220\240;0\220\240;4\010,</\220\240;/\220\240;5\220\240;4\010,</\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;,\220\240;0\010,</\220\240;\"\220\240;/\220\240;3\010,<-\220\240;.\220\240;0\220\240;4\010,<.\220\240;.\220\240;0\220\240;4\010,<.\220\240;.\220\240;.\220\240;2\010,<,\220\240;.\220\240;0\220\240;4\010,<.\220\240;.\220\240;.\220\240;2\010,<,\220\240;/\220\240;.\220\240;2\010,<,\220\240;1\220\240;.\220\240;4\010,<,\220\240;1\220\240;0\220\240;4\010,<,\220\240;.\220\240;.\220\240;2\010,<.\220\240;1\220\240;.\220\240;2\010,<.\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,<,\220\240;1\220\240;2\220\240;5\010,</\220\240;1\220\240;2\220\240;5\010,</\220\240;1\220\240;7\220\240;5\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;7\220\240;9\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;$\220\240;-\220\240;1\010,<.\220\240;-\220\240;.\220\240;2\010,</\220\240;,\220\240;.\220\240;2\010,</\220\240;,\220\240;,\220\240;0\010,<.\220\240;,\220\240;.\220\240;2\010,</\220\240;,\220\240;,\220\240;0\010,<.\220\240;.\220\240;,\220\240;0\010,<.\220\240;/\220\240;,\220\240;2\010,<.\220\240;/\220\240;.\220\240;2\010,<.\220\240;,\220\240;,\220\240;0\010,</\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;,\220\240;0\010,<1\220\240;/\220\240;,\220\240;0\010,<1\220\240;/\220\240;,\220\240;0\010,<1\220\240;/\220\240;,\220\240;0\010,<1\220\240;/\220\240;,\220\240;0\010,<1\220\240;/\220\240;,\220\240;0\010,<1\220\240;/\220\240;,\220\240;0\010,<.\220\240;/\220\240;0\220\240;4\010,<1\220\240;/\220\240;0\220\240;4\010,<1\220\240;/\220\240;5\220\240;4\010,<1\220\240;/\220\240;5\220\240;7\010,<1\220\240;/\220\240;5\220\240;7\010,<1\220\240;/\220\240;5\220\240;7\010,<1\220\240;/\220\240;5\220\240;7\010,<1\220\240;/\220\240;5\220\240;7\010,<1\220\240;/\220\240;5\220\240;7\010,<1\220\240;/\220\240;5\220\240;7\010,<1\220\240;/\220\240;5\220\240;7\010,<1\220\240;/\220\240;5\220\240;7\010,<1\220\240;/\220\240;5\220\240;7\010,<1\220\240;/\220\240;5\220\240;7\010,<1\220\240;/\220\240;5\220\240;7\010,<1\220\240;/\220\240;5\220\240;7\010,<1\220\240;/\220\240;5\220\240;7\010,<1\220\240;/\220\240;5\220\240;7\010,<1\220\240;/\220\240;,\220\240;0\010,<1\220\240;/\220\240;,\220\240;0\010,<1\220\240;\"\220\240;-\220\240;1\010,<0\220\240;-\220\240;.\220\240;2\010,<1\220\240;,\220\240;.\220\240;2\010,<1\220\240;,\220\240;,\220\240;0\010,</\220\240;,\220\240;.\220\240;2\010,<1\220\240;,\220\240;,\220\240;0\010,</\220\240;.\220\240;,\220\240;0\010,</\220\240;/\220\240;,\220\240;2\010,</\220\240;/\220\240;.\220\240;2\010,</\220\240;,\220\240;,\220\240;0\010,<1\220\240;/\220\240;,\220\240;0\010,<1\220\240;/\220\240;,\220\240;0\010,<2\220\240;/\220\240;,\220\240;0\010,<2\220\240;/\220\240;,\220\240;0\010,<2\220\240;/\220\240;,\220\240;0\010,<2\220\240;/\220\240;,\220\240;0\010,<2\220\240;/\220\240;,\220\240;0\010,<2\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;0\220\240;4\010,<2\220\240;/\220\240;0\220\240;4\010,<2\220\240;/\220\240;5\220\240;4\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;,\220\240;0\010,<2\220\240;/\220\240;,\220\240;0\010,<2\220\240;\"\220\240;-\220\240;3\010,<0\220\240;-\220\240;.\220\240;4\010,<1\220\240;,\220\240;.\220\240;4\010,<1\220\240;,\220\240;,\220\240;2\010,</\220\240;,\220\240;.\220\240;4\010,<1\220\240;,\220\240;,\220\240;2\010,</\220\240;.\220\240;,\220\240;2\010,</\220\240;/\220\240;,\220\240;4\010,</\220\240;/\220\240;.\220\240;4\010,</\220\240;,\220\240;,\220\240;2\010,<1\220\240;/\220\240;,\220\240;2\010,<1\220\240;/\220\240;,\220\240;2\010,<2\220\240;/\220\240;,\220\240;2\010,<2\220\240;/\220\240;,\220\240;2\010,<2\220\240;/\220\240;,\220\240;2\010,<2\220\240;/\220\240;,\220\240;2\010,<2\220\240;/\220\240;,\220\240;2\010,<2\220\240;/\220\240;,\220\240;2\010,</\220\240;/\220\240;0\220\240;5\010,<2\220\240;/\220\240;0\220\240;5\010,<2\220\240;/\220\240;5\220\240;5\010,<2\220\240;/\220\240;5\220\240;9\010,<2\220\240;/\220\240;5\220\240;9\010,<2\220\240;/\220\240;5\220\240;9\010,<2\220\240;/\220\240;5\220\240;9\010,<2\220\240;/\220\240;5\220\240;9\010,<2\220\240;/\220\240;5\220\240;9\010,<2\220\240;/\220\240;5\220\240;9\010,<2\220\240;/\220\240;5\220\240;9\010,<2\220\240;/\220\240;5\220\240;9\010,<2\220\240;/\220\240;5\220\240;9\010,<2\220\240;/\220\240;5\220\240;9\010,<2\220\240;/\220\240;5\220\240;9\010,<2\220\240;/\220\240;5\220\240;9\010,<2\220\240;/\220\240;5\220\240;9\010,<2\220\240;/\220\240;5\220\240;9\010,<2\220\240;/\220\240;,\220\240;2\010,<2\220\240;/\220\240;,\220\240;2\010,<2\220\240;\"\220\240;/\220\240;3\010,<-\220\240;-\220\240;0\220\240;4\010,<.\220\240;,\220\240;0\220\240;4\010,<.\220\240;,\220\240;.\220\240;2\010,<,\220\240;,\220\240;0\220\240;4\010,<.\220\240;,\220\240;.\220\240;2\010,<,\220\240;.\220\240;.\220\240;2\010,<,\220\240;/\220\240;.\220\240;4\010,<,\220\240;/\220\240;0\220\240;4\010,<,\220\240;,\220\240;.\220\240;2\010,<.\220\240;/\220\240;.\220\240;2\010,<.\220\240;/\220\240;.\220\240;2\010,</\220\240;/\220\240;.\220\240;2\010,</\220\240;/\220\240;.\220\240;2\010,</\220\240;/\220\240;.\220\240;2\010,</\220\240;/\220\240;.\220\240;2\010,</\220\240;/\220\240;.\220\240;2\010,</\220\240;/\220\240;.\220\240;2\010,<,\220\240;/\220\240;2\220\240;5\010,</\220\240;/\220\240;2\220\240;5\010,</\220\240;/\220\240;7\220\240;5\010,</\220\240;/\220\240;7\220\240;9\010,</\220\240;/\220\240;7\220\240;9\010,</\220\240;/\220\240;7\220\240;9\010,</\220\240;/\220\240;7\220\240;9\010,</\220\240;/\220\240;7\220\240;9\010,</\220\240;/\220\240;7\220\240;9\010,</\220\240;/\220\240;7\220\240;9\010,</\220\240;/\220\240;7\220\240;9\010,</\220\240;/\220\240;7\220\240;9\010,</\220\240;/\220\240;7\220\240;9\010,</\220\240;/\220\240;7\220\240;9\010,</\220\240;/\220\240;7\220\240;9\010,</\220\240;/\220\240;7\220\240;9\010,</\220\240;/\220\240;7\220\240;9\010,</\220\240;/\220\240;7\220\240;9\010,</\220\240;/\220\240;.\220\240;2\010,</\220\240;/\220\240;.\220\240;2\010,</\220\240;\"\220\240;-\220\240;1\010,<0\220\240;.\220\240;.\220\240;2\010,<1\220\240;.\220\240;.\220\240;2\010,<1\220\240;.\220\240;,\220\240;0\010,</\220\240;.\220\240;.\220\240;2\010,<1\220\240;.\220\240;,\220\240;0\010,</\220\240;/\220\240;,\220\240;0\010,</\220\240;1\220\240;,\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;.\220\240;,\220\240;0\010,<1\220\240;1\220\240;,\220\240;0\010,<1\220\240;1\220\240;,\220\240;0\010,<2\220\240;1\220\240;,\220\240;0\010,<2\220\240;1\220\240;,\220\240;0\010,<2\220\240;1\220\240;,\220\240;0\010,<2\220\240;1\220\240;,\220\240;0\010,<2\220\240;1\220\240;,\220\240;0\010,<2\220\240;1\220\240;,\220\240;0\010,</\220\240;1\220\240;0\220\240;4\010,<2\220\240;1\220\240;0\220\240;4\010,<2\220\240;1\220\240;5\220\240;4\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;,\220\240;0\010,<2\220\240;1\220\240;,\220\240;0\010,<2\220\240;$\220\240;-\220\240;1\010,<0\220\240;.\220\240;.\220\240;2\010,<1\220\240;.\220\240;.\220\240;2\010,<1\220\240;.\220\240;,\220\240;0\010,</\220\240;.\220\240;.\220\240;2\010,<1\220\240;.\220\240;,\220\240;0\010,</\220\240;/\220\240;,\220\240;0\010,</\220\240;1\220\240;,\220\240;2\010,</\220\240;1\220\240;.\220\240;2\010,</\220\240;.\220\240;,\220\240;0\010,<1\220\240;1\220\240;,\220\240;0\010,<1\220\240;1\220\240;,\220\240;0\010,<2\220\240;1\220\240;,\220\240;0\010,<2\220\240;1\220\240;,\220\240;0\010,<2\220\240;1\220\240;,\220\240;0\010,<2\220\240;1\220\240;,\220\240;0\010,<2\220\240;1\220\240;,\220\240;0\010,<2\220\240;1\220\240;,\220\240;0\010,</\220\240;1\220\240;0\220\240;4\010,<2\220\240;1\220\240;0\220\240;4\010,<2\220\240;1\220\240;5\220\240;4\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;5\220\240;7\010,<2\220\240;1\220\240;,\220\240;0\010,<2\220\240;1\220\240;,\220\240;0\010,<2\220\240;$\220\240;-\220\240;1\010,<0\220\240;0\220\240;.\220\240;2\010,<1\220\240;/\220\240;.\220\240;2\010,<1\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;.\220\240;2\010,<1\220\240;/\220\240;,\220\240;0\010,</\220\240;1\220\240;,\220\240;0\010,</\220\240;2\220\240;,\220\240;2\010,</\220\240;2\220\240;.\220\240;2\010,</\220\240;/\220\240;,\220\240;0\010,<1\220\240;2\220\240;,\220\240;0\010,<1\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,</\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;5\220\240;4\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;&\220\240;-\220\240;1\010,<0\220\240;0\220\240;.\220\240;2\010,<1\220\240;/\220\240;.\220\240;2\010,<1\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;.\220\240;2\010,<1\220\240;/\220\240;,\220\240;0\010,</\220\240;1\220\240;,\220\240;0\010,</\220\240;2\220\240;,\220\240;2\010,</\220\240;2\220\240;.\220\240;2\010,</\220\240;/\220\240;,\220\240;0\010,<1\220\240;2\220\240;,\220\240;0\010,<1\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,</\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;5\220\240;4\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;&\220\240;-\220\240;1\010,<0\220\240;0\220\240;.\220\240;2\010,<1\220\240;/\220\240;.\220\240;2\010,<1\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;.\220\240;2\010,<1\220\240;/\220\240;,\220\240;0\010,</\220\240;1\220\240;,\220\240;0\010,</\220\240;2\220\240;,\220\240;2\010,</\220\240;2\220\240;.\220\240;2\010,</\220\240;/\220\240;,\220\240;0\010,<1\220\240;2\220\240;,\220\240;0\010,<1\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,</\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;5\220\240;4\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;&\220\240;-\220\240;1\010,<0\220\240;0\220\240;.\220\240;2\010,<1\220\240;/\220\240;.\220\240;2\010,<1\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;.\220\240;2\010,<1\220\240;/\220\240;,\220\240;0\010,</\220\240;1\220\240;,\220\240;0\010,</\220\240;2\220\240;,\220\240;2\010,</\220\240;2\220\240;.\220\240;2\010,</\220\240;/\220\240;,\220\240;0\010,<1\220\240;2\220\240;,\220\240;0\010,<1\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,</\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;5\220\240;4\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;&\220\240;-\220\240;1\010,<0\220\240;0\220\240;.\220\240;2\010,<1\220\240;/\220\240;.\220\240;2\010,<1\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;.\220\240;2\010,<1\220\240;/\220\240;,\220\240;0\010,</\220\240;1\220\240;,\220\240;0\010,</\220\240;2\220\240;,\220\240;2\010,</\220\240;2\220\240;.\220\240;2\010,</\220\240;/\220\240;,\220\240;0\010,<1\220\240;2\220\240;,\220\240;0\010,<1\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,</\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;5\220\240;4\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;&\220\240;-\220\240;1\010,<0\220\240;0\220\240;.\220\240;2\010,<1\220\240;/\220\240;.\220\240;2\010,<1\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;.\220\240;2\010,<1\220\240;/\220\240;,\220\240;0\010,</\220\240;1\220\240;,\220\240;0\010,</\220\240;2\220\240;,\220\240;2\010,</\220\240;2\220\240;.\220\240;2\010,</\220\240;/\220\240;,\220\240;0\010,<1\220\240;2\220\240;,\220\240;0\010,<1\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,</\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;5\220\240;4\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;&\220\240;-\220\240;1\010,<0\220\240;-\220\240;.\220\240;2\010,<1\220\240;,\220\240;.\220\240;2\010,<1\220\240;,\220\240;,\220\240;0\010,</\220\240;,\220\240;.\220\240;2\010,<1\220\240;,\220\240;,\220\240;0\010,</\220\240;.\220\240;,\220\240;0\010,</\220\240;/\220\240;,\220\240;2\010,</\220\240;/\220\240;.\220\240;2\010,</\220\240;,\220\240;,\220\240;0\010,<1\220\240;/\220\240;,\220\240;0\010,<1\220\240;/\220\240;,\220\240;0\010,<2\220\240;/\220\240;,\220\240;0\010,<2\220\240;/\220\240;,\220\240;0\010,<2\220\240;/\220\240;,\220\240;0\010,<2\220\240;/\220\240;,\220\240;0\010,<2\220\240;/\220\240;,\220\240;0\010,<2\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;0\220\240;4\010,<2\220\240;/\220\240;0\220\240;4\010,<2\220\240;/\220\240;5\220\240;4\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;5\220\240;7\010,<2\220\240;/\220\240;,\220\240;0\010,<2\220\240;/\220\240;,\220\240;0\010,<2\220\240;\"\220\240;1\220\240;4\010,<0\220\240;0\220\240;2\220\240;5\010,<1\220\240;/\220\240;2\220\240;5\010,<1\220\240;/\220\240;0\220\240;4\010,</\220\240;/\220\240;2\220\240;5\010,<1\220\240;/\220\240;0\220\240;4\010,</\220\240;1\220\240;0\220\240;4\010,</\220\240;2\220\240;0\220\240;5\010,</\220\240;2\220\240;2\220\240;5\010,</\220\240;/\220\240;0\220\240;4\010,<1\220\240;2\220\240;0\220\240;4\010,<1\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,</\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;9\220\240;7\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;&\220\240;1\220\240;4\010,<0\220\240;0\220\240;2\220\240;5\010,<1\220\240;/\220\240;2\220\240;5\010,<1\220\240;/\220\240;0\220\240;4\010,</\220\240;/\220\240;2\220\240;5\010,<1\220\240;/\220\240;0\220\240;4\010,</\220\240;1\220\240;0\220\240;4\010,</\220\240;2\220\240;0\220\240;5\010,</\220\240;2\220\240;2\220\240;5\010,</\220\240;/\220\240;0\220\240;4\010,<1\220\240;2\220\240;0\220\240;4\010,<1\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,</\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;9\220\240;7\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;&\220\240;6\220\240;4\010,<0\220\240;0\220\240;7\220\240;5\010,<1\220\240;/\220\240;7\220\240;5\010,<1\220\240;/\220\240;5\220\240;4\010,</\220\240;/\220\240;7\220\240;5\010,<1\220\240;/\220\240;5\220\240;4\010,</\220\240;1\220\240;5\220\240;4\010,</\220\240;2\220\240;5\220\240;5\010,</\220\240;2\220\240;7\220\240;5\010,</\220\240;/\220\240;5\220\240;4\010,<1\220\240;2\220\240;5\220\240;4\010,<1\220\240;2\220\240;5\220\240;4\010,<2\220\240;2\220\240;5\220\240;4\010,<2\220\240;2\220\240;5\220\240;4\010,<2\220\240;2\220\240;5\220\240;4\010,<2\220\240;2\220\240;5\220\240;4\010,<2\220\240;2\220\240;5\220\240;4\010,<2\220\240;2\220\240;5\220\240;4\010,</\220\240;2\220\240;9\220\240;7\010,<2\220\240;2\220\240;9\220\240;7\010,<2\220\240;2\220\240;>\220\240;7\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;5\220\240;4\010,<2\220\240;2\220\240;5\220\240;4\010,<2\220\240;&\220\240;6\220\240;8\010,<0\220\240;0\220\240;7\220\240;9\010,<1\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;1\220\240;5\220\240;7\010,</\220\240;2\220\240;5\220\240;9\010,</\220\240;2\220\240;7\220\240;9\010,</\220\240;/\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,</\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;&\220\240;6\220\240;8\010,<0\220\240;0\220\240;7\220\240;9\010,<1\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;1\220\240;5\220\240;7\010,</\220\240;2\220\240;5\220\240;9\010,</\220\240;2\220\240;7\220\240;9\010,</\220\240;/\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,</\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;&\220\240;6\220\240;8\010,<0\220\240;0\220\240;7\220\240;9\010,<1\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;1\220\240;5\220\240;7\010,</\220\240;2\220\240;5\220\240;9\010,</\220\240;2\220\240;7\220\240;9\010,</\220\240;/\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,</\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;&\220\240;6\220\240;8\010,<0\220\240;0\220\240;7\220\240;9\010,<1\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;1\220\240;5\220\240;7\010,</\220\240;2\220\240;5\220\240;9\010,</\220\240;2\220\240;7\220\240;9\010,</\220\240;/\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,</\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;&\220\240;6\220\240;8\010,<0\220\240;0\220\240;7\220\240;9\010,<1\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;1\220\240;5\220\240;7\010,</\220\240;2\220\240;5\220\240;9\010,</\220\240;2\220\240;7\220\240;9\010,</\220\240;/\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,</\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;&\220\240;6\220\240;8\010,<0\220\240;0\220\240;7\220\240;9\010,<1\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;1\220\240;5\220\240;7\010,</\220\240;2\220\240;5\220\240;9\010,</\220\240;2\220\240;7\220\240;9\010,</\220\240;/\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,</\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;&\220\240;6\220\240;8\010,<0\220\240;0\220\240;7\220\240;9\010,<1\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;1\220\240;5\220\240;7\010,</\220\240;2\220\240;5\220\240;9\010,</\220\240;2\220\240;7\220\240;9\010,</\220\240;/\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,</\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;&\220\240;6\220\240;8\010,<0\220\240;0\220\240;7\220\240;9\010,<1\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;1\220\240;5\220\240;7\010,</\220\240;2\220\240;5\220\240;9\010,</\220\240;2\220\240;7\220\240;9\010,</\220\240;/\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,</\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;&\220\240;6\220\240;8\010,<0\220\240;0\220\240;7\220\240;9\010,<1\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;1\220\240;5\220\240;7\010,</\220\240;2\220\240;5\220\240;9\010,</\220\240;2\220\240;7\220\240;9\010,</\220\240;/\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,</\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;&\220\240;6\220\240;8\010,<0\220\240;0\220\240;7\220\240;9\010,<1\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;1\220\240;5\220\240;7\010,</\220\240;2\220\240;5\220\240;9\010,</\220\240;2\220\240;7\220\240;9\010,</\220\240;/\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,</\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;&\220\240;6\220\240;8\010,<0\220\240;0\220\240;7\220\240;9\010,<1\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;1\220\240;5\220\240;7\010,</\220\240;2\220\240;5\220\240;9\010,</\220\240;2\220\240;7\220\240;9\010,</\220\240;/\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,</\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;&\220\240;6\220\240;8\010,<0\220\240;0\220\240;7\220\240;9\010,<1\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;1\220\240;5\220\240;7\010,</\220\240;2\220\240;5\220\240;9\010,</\220\240;2\220\240;7\220\240;9\010,</\220\240;/\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,</\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;&\220\240;6\220\240;8\010,<0\220\240;0\220\240;7\220\240;9\010,<1\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;1\220\240;5\220\240;7\010,</\220\240;2\220\240;5\220\240;9\010,</\220\240;2\220\240;7\220\240;9\010,</\220\240;/\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,</\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;&\220\240;6\220\240;8\010,<0\220\240;0\220\240;7\220\240;9\010,<1\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;1\220\240;5\220\240;7\010,</\220\240;2\220\240;5\220\240;9\010,</\220\240;2\220\240;7\220\240;9\010,</\220\240;/\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,</\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;&\220\240;6\220\240;8\010,<0\220\240;0\220\240;7\220\240;9\010,<1\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;/\220\240;7\220\240;9\010,<1\220\240;/\220\240;5\220\240;7\010,</\220\240;1\220\240;5\220\240;7\010,</\220\240;2\220\240;5\220\240;9\010,</\220\240;2\220\240;7\220\240;9\010,</\220\240;/\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<1\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,</\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;9\220\240;:\010,<2\220\240;2\220\240;>\220\240;:\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;>\220\240;=\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;&\220\240;-\220\240;1\010,<0\220\240;0\220\240;.\220\240;2\010,<1\220\240;/\220\240;.\220\240;2\010,<1\220\240;/\220\240;,\220\240;0\010,</\220\240;/\220\240;.\220\240;2\010,<1\220\240;/\220\240;,\220\240;0\010,</\220\240;1\220\240;,\220\240;0\010,</\220\240;2\220\240;,\220\240;2\010,</\220\240;2\220\240;.\220\240;2\010,</\220\240;/\220\240;,\220\240;0\010,<1\220\240;2\220\240;,\220\240;0\010,<1\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,</\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;0\220\240;4\010,<2\220\240;2\220\240;5\220\240;4\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;5\220\240;7\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;2\220\240;,\220\240;0\010,<2\220\240;&\220\240;-\220\240;1\010,<#\220\240;0\220\240;.\220\240;2\010,<$\220\240;/\220\240;.\220\240;2\010,<$\220\240;/\220\240;,\220\240;0\010,<\"\220\240;/\220\240;.\220\240;2\010,<$\220\240;/\220\240;,\220\240;0\010,<\"\220\240;1\220\240;,\220\240;0\010,<\"\220\240;2\220\240;,\220\240;2\010,<\"\220\240;2\220\240;.\220\240;2\010,<\"\220\240;/\220\240;,\220\240;0\010,<$\220\240;2\220\240;,\220\240;0\010,<$\220\240;2\220\240;,\220\240;0\010,<&\220\240;2\220\240;,\220\240;0\010,<&\220\240;2\220\240;,\220\240;0\010,<&\220\240;2\220\240;,\220\240;0\010,<&\220\240;2\220\240;,\220\240;0\010,<&\220\240;2\220\240;,\220\240;0\010,<&\220\240;2\220\240;,\220\240;0\010,<\"\220\240;2\220\240;0\220\240;4\010,<&\220\240;2\220\240;0\220\240;4\010,<&\220\240;2\220\240;5\220\240;4\010,<&\220\240;2\220\240;5\220\240;7\010,<&\220\240;2\220\240;5\220\240;7\010,<&\220\240;2\220\240;5\220\240;7\010,<&\220\240;2\220\240;5\220\240;7\010,<&\220\240;2\220\240;5\220\240;7\010,<&\220\240;2\220\240;5\220\240;7\010,<&\220\240;2\220\240;5\220\240;7\010,<&\220\240;2\220\240;5\220\240;7\010,<&\220\240;2\220\240;5\220\240;7\010,<&\220\240;2\220\240;5\220\240;7\010,<&\220\240;2\220\240;5\220\240;7\010,<&\220\240;2\220\240;5\220\240;7\010,<&\220\240;2\220\240;5\220\240;7\010,<&\220\240;2\220\240;5\220\240;7\010,<&\220\240;2\220\240;5\220\240;7\010,<&\220\240;2\220\240;,\220\240;0\010,<&\220\240;2\220\240;,\220\240;0\010,<&\220\240;&\220\240;"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub_2"
  op: "Sub"
  input: "bboxes_encode_block_0/while/sub_2/x"
  input: "bboxes_encode_block_0/while/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_7/stack"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_7/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_7/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_7"
  op: "StridedSlice"
  input: "bboxes_encode_block_0/while/strided_slice_2"
  input: "bboxes_encode_block_0/while/strided_slice_7/stack"
  input: "bboxes_encode_block_0/while/strided_slice_7/stack_1"
  input: "bboxes_encode_block_0/while/strided_slice_7/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_8/stack"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_8/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_8/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_8"
  op: "StridedSlice"
  input: "bboxes_encode_block_0/while/strided_slice_2"
  input: "bboxes_encode_block_0/while/strided_slice_8/stack"
  input: "bboxes_encode_block_0/while/strided_slice_8/stack_1"
  input: "bboxes_encode_block_0/while/strided_slice_8/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub_3"
  op: "Sub"
  input: "bboxes_encode_block_0/while/strided_slice_7"
  input: "bboxes_encode_block_0/while/strided_slice_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_9/stack"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_9/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_9/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_9"
  op: "StridedSlice"
  input: "bboxes_encode_block_0/while/strided_slice_2"
  input: "bboxes_encode_block_0/while/strided_slice_9/stack"
  input: "bboxes_encode_block_0/while/strided_slice_9/stack_1"
  input: "bboxes_encode_block_0/while/strided_slice_9/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_10/stack"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_10/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_10/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_10"
  op: "StridedSlice"
  input: "bboxes_encode_block_0/while/strided_slice_2"
  input: "bboxes_encode_block_0/while/strided_slice_10/stack"
  input: "bboxes_encode_block_0/while/strided_slice_10/stack_1"
  input: "bboxes_encode_block_0/while/strided_slice_10/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub_4"
  op: "Sub"
  input: "bboxes_encode_block_0/while/strided_slice_9"
  input: "bboxes_encode_block_0/while/strided_slice_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/mul_1"
  op: "Mul"
  input: "bboxes_encode_block_0/while/sub_3"
  input: "bboxes_encode_block_0/while/sub_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/add_2"
  op: "Add"
  input: "bboxes_encode_block_0/while/sub_2"
  input: "bboxes_encode_block_0/while/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/div"
  op: "RealDiv"
  input: "bboxes_encode_block_0/while/mul"
  input: "bboxes_encode_block_0/while/add_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Greater"
  op: "Greater"
  input: "bboxes_encode_block_0/while/div"
  input: "bboxes_encode_block_0/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Greater_1/y"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Greater_1"
  op: "Greater"
  input: "bboxes_encode_block_0/while/Identity_2"
  input: "bboxes_encode_block_0/while/Greater_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/LogicalAnd"
  op: "LogicalAnd"
  input: "bboxes_encode_block_0/while/Greater"
  input: "bboxes_encode_block_0/while/Greater_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Less_1/y"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Less_1"
  op: "Less"
  input: "bboxes_encode_block_0/while/strided_slice_1"
  input: "bboxes_encode_block_0/while/Less_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/LogicalAnd_1"
  op: "LogicalAnd"
  input: "bboxes_encode_block_0/while/LogicalAnd"
  input: "bboxes_encode_block_0/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Cast"
  op: "Cast"
  input: "bboxes_encode_block_0/while/LogicalAnd_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Cast_1"
  op: "Cast"
  input: "bboxes_encode_block_0/while/LogicalAnd_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/mul_2"
  op: "Mul"
  input: "bboxes_encode_block_0/while/Cast"
  input: "bboxes_encode_block_0/while/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub_5/x"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub_5"
  op: "Sub"
  input: "bboxes_encode_block_0/while/sub_5/x"
  input: "bboxes_encode_block_0/while/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/mul_3"
  op: "Mul"
  input: "bboxes_encode_block_0/while/sub_5"
  input: "bboxes_encode_block_0/while/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/add_3"
  op: "Add"
  input: "bboxes_encode_block_0/while/mul_2"
  input: "bboxes_encode_block_0/while/mul_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Select"
  op: "Select"
  input: "bboxes_encode_block_0/while/LogicalAnd_1"
  input: "bboxes_encode_block_0/while/div"
  input: "bboxes_encode_block_0/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_11/stack"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_11/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_11/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_11"
  op: "StridedSlice"
  input: "bboxes_encode_block_0/while/strided_slice_2"
  input: "bboxes_encode_block_0/while/strided_slice_11/stack"
  input: "bboxes_encode_block_0/while/strided_slice_11/stack_1"
  input: "bboxes_encode_block_0/while/strided_slice_11/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/mul_4"
  op: "Mul"
  input: "bboxes_encode_block_0/while/Cast_1"
  input: "bboxes_encode_block_0/while/strided_slice_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub_6/x"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub_6"
  op: "Sub"
  input: "bboxes_encode_block_0/while/sub_6/x"
  input: "bboxes_encode_block_0/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/mul_5"
  op: "Mul"
  input: "bboxes_encode_block_0/while/sub_6"
  input: "bboxes_encode_block_0/while/Identity_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/add_4"
  op: "Add"
  input: "bboxes_encode_block_0/while/mul_4"
  input: "bboxes_encode_block_0/while/mul_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_12/stack"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_12/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_12/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_12"
  op: "StridedSlice"
  input: "bboxes_encode_block_0/while/strided_slice_2"
  input: "bboxes_encode_block_0/while/strided_slice_12/stack"
  input: "bboxes_encode_block_0/while/strided_slice_12/stack_1"
  input: "bboxes_encode_block_0/while/strided_slice_12/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/mul_6"
  op: "Mul"
  input: "bboxes_encode_block_0/while/Cast_1"
  input: "bboxes_encode_block_0/while/strided_slice_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub_7/x"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub_7"
  op: "Sub"
  input: "bboxes_encode_block_0/while/sub_7/x"
  input: "bboxes_encode_block_0/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/mul_7"
  op: "Mul"
  input: "bboxes_encode_block_0/while/sub_7"
  input: "bboxes_encode_block_0/while/Identity_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/add_5"
  op: "Add"
  input: "bboxes_encode_block_0/while/mul_6"
  input: "bboxes_encode_block_0/while/mul_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_13/stack"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_13/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_13/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_13"
  op: "StridedSlice"
  input: "bboxes_encode_block_0/while/strided_slice_2"
  input: "bboxes_encode_block_0/while/strided_slice_13/stack"
  input: "bboxes_encode_block_0/while/strided_slice_13/stack_1"
  input: "bboxes_encode_block_0/while/strided_slice_13/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/mul_8"
  op: "Mul"
  input: "bboxes_encode_block_0/while/Cast_1"
  input: "bboxes_encode_block_0/while/strided_slice_13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub_8/x"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub_8"
  op: "Sub"
  input: "bboxes_encode_block_0/while/sub_8/x"
  input: "bboxes_encode_block_0/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/mul_9"
  op: "Mul"
  input: "bboxes_encode_block_0/while/sub_8"
  input: "bboxes_encode_block_0/while/Identity_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/add_6"
  op: "Add"
  input: "bboxes_encode_block_0/while/mul_8"
  input: "bboxes_encode_block_0/while/mul_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_14/stack"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_14/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_14/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/strided_slice_14"
  op: "StridedSlice"
  input: "bboxes_encode_block_0/while/strided_slice_2"
  input: "bboxes_encode_block_0/while/strided_slice_14/stack"
  input: "bboxes_encode_block_0/while/strided_slice_14/stack_1"
  input: "bboxes_encode_block_0/while/strided_slice_14/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/mul_10"
  op: "Mul"
  input: "bboxes_encode_block_0/while/Cast_1"
  input: "bboxes_encode_block_0/while/strided_slice_14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub_9/x"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/sub_9"
  op: "Sub"
  input: "bboxes_encode_block_0/while/sub_9/x"
  input: "bboxes_encode_block_0/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/mul_11"
  op: "Mul"
  input: "bboxes_encode_block_0/while/sub_9"
  input: "bboxes_encode_block_0/while/Identity_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/add_7"
  op: "Add"
  input: "bboxes_encode_block_0/while/mul_10"
  input: "bboxes_encode_block_0/while/mul_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/add_8/y"
  op: "Const"
  input: "^bboxes_encode_block_0/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/add_8"
  op: "Add"
  input: "bboxes_encode_block_0/while/Identity"
  input: "bboxes_encode_block_0/while/add_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/NextIteration"
  op: "NextIteration"
  input: "bboxes_encode_block_0/while/add_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/NextIteration_1"
  op: "NextIteration"
  input: "bboxes_encode_block_0/while/add_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/NextIteration_2"
  op: "NextIteration"
  input: "bboxes_encode_block_0/while/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/NextIteration_3"
  op: "NextIteration"
  input: "bboxes_encode_block_0/while/add_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/NextIteration_4"
  op: "NextIteration"
  input: "bboxes_encode_block_0/while/add_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/NextIteration_5"
  op: "NextIteration"
  input: "bboxes_encode_block_0/while/add_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/NextIteration_6"
  op: "NextIteration"
  input: "bboxes_encode_block_0/while/add_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Exit"
  op: "Exit"
  input: "bboxes_encode_block_0/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Exit_1"
  op: "Exit"
  input: "bboxes_encode_block_0/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Exit_2"
  op: "Exit"
  input: "bboxes_encode_block_0/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Exit_3"
  op: "Exit"
  input: "bboxes_encode_block_0/while/Switch_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Exit_4"
  op: "Exit"
  input: "bboxes_encode_block_0/while/Switch_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Exit_5"
  op: "Exit"
  input: "bboxes_encode_block_0/while/Switch_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/while/Exit_6"
  op: "Exit"
  input: "bboxes_encode_block_0/while/Switch_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/add"
  op: "Add"
  input: "bboxes_encode_block_0/while/Exit_5"
  input: "bboxes_encode_block_0/while/Exit_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv"
  op: "RealDiv"
  input: "bboxes_encode_block_0/add"
  input: "bboxes_encode_block_0/truediv/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/add_1"
  op: "Add"
  input: "bboxes_encode_block_0/while/Exit_6"
  input: "bboxes_encode_block_0/while/Exit_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_1"
  op: "RealDiv"
  input: "bboxes_encode_block_0/add_1"
  input: "bboxes_encode_block_0/truediv_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/sub"
  op: "Sub"
  input: "bboxes_encode_block_0/while/Exit_5"
  input: "bboxes_encode_block_0/while/Exit_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/sub_1"
  op: "Sub"
  input: "bboxes_encode_block_0/while/Exit_6"
  input: "bboxes_encode_block_0/while/Exit_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/sub_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\016tZ<\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n\327#=\n~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>K~1>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>\315\314L>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033h>O\033hj\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>j\003\235>jm\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>m\240\323>mm ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?:m ?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?\332@\'?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{\024.?{bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\375bI?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?\2356P?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?=\nW?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?\336\335]?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?~\261d?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\037\205k?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?\277Xr?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?`,y?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/sub_2"
  op: "Sub"
  input: "bboxes_encode_block_0/truediv"
  input: "bboxes_encode_block_0/sub_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: ")\\\217=\211\333\321=\335\275J=\335\275\312="
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_2"
  op: "RealDiv"
  input: "bboxes_encode_block_0/sub_2"
  input: "bboxes_encode_block_0/truediv_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_3"
  op: "RealDiv"
  input: "bboxes_encode_block_0/truediv_2"
  input: "bboxes_encode_block_0/truediv_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/sub_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?\016tZ<\n\327#=\211\210\210=\214%\277=\217\302\365=\311/\026>K~1>\315\314L>O\033h>\350\264\201>)\\\217>j\003\235>\253\252\252>\354Q\270>,\371\305>m\240\323>\256G\341>\357\356\356>0\226\374>\270\036\005?Y\362\013?\371\305\022?\232\231\031?:m ?\332@\'?{\024.?\033\3504?\274\273;?\\\217B?\375bI?\2356P?=\nW?\336\335]?~\261d?\037\205k?\277Xr?`,y?\000\000\200?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/sub_3"
  op: "Sub"
  input: "bboxes_encode_block_0/truediv_1"
  input: "bboxes_encode_block_0/sub_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_4/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: ")\\\217=\211\333\321=\335\275\312=\335\275J="
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_4"
  op: "RealDiv"
  input: "bboxes_encode_block_0/sub_3"
  input: "bboxes_encode_block_0/truediv_4/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_5/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_5"
  op: "RealDiv"
  input: "bboxes_encode_block_0/truediv_4"
  input: "bboxes_encode_block_0/truediv_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_6/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: ")\\\217=\211\333\321=\335\275J=\335\275\312="
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_6"
  op: "RealDiv"
  input: "bboxes_encode_block_0/sub"
  input: "bboxes_encode_block_0/truediv_6/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/Log"
  op: "Log"
  input: "bboxes_encode_block_0/truediv_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_7/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_7"
  op: "RealDiv"
  input: "bboxes_encode_block_0/Log"
  input: "bboxes_encode_block_0/truediv_7/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_8/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: ")\\\217=\211\333\321=\335\275\312=\335\275J="
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_8"
  op: "RealDiv"
  input: "bboxes_encode_block_0/sub_1"
  input: "bboxes_encode_block_0/truediv_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/Log_1"
  op: "Log"
  input: "bboxes_encode_block_0/truediv_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_9/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/truediv_9"
  op: "RealDiv"
  input: "bboxes_encode_block_0/Log_1"
  input: "bboxes_encode_block_0/truediv_9/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_0/stack"
  op: "Pack"
  input: "bboxes_encode_block_0/truediv_5"
  input: "bboxes_encode_block_0/truediv_3"
  input: "bboxes_encode_block_0/truediv_9"
  input: "bboxes_encode_block_0/truediv_7"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "bboxes_encode_block_1/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\023\000\000\000\023\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/zeros"
  op: "Fill"
  input: "bboxes_encode_block_1/zeros/shape_as_tensor"
  input: "bboxes_encode_block_1/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_1/zeros_1/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\023\000\000\000\023\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/zeros_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/zeros_1"
  op: "Fill"
  input: "bboxes_encode_block_1/zeros_1/shape_as_tensor"
  input: "bboxes_encode_block_1/zeros_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_1/zeros_2/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\023\000\000\000\023\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/zeros_2/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/zeros_2"
  op: "Fill"
  input: "bboxes_encode_block_1/zeros_2/shape_as_tensor"
  input: "bboxes_encode_block_1/zeros_2/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_1/zeros_3/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\023\000\000\000\023\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/zeros_3/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/zeros_3"
  op: "Fill"
  input: "bboxes_encode_block_1/zeros_3/shape_as_tensor"
  input: "bboxes_encode_block_1/zeros_3/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_1/ones/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\023\000\000\000\023\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/ones/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/ones"
  op: "Fill"
  input: "bboxes_encode_block_1/ones/shape_as_tensor"
  input: "bboxes_encode_block_1/ones/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_1/ones_1/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\023\000\000\000\023\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/ones_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/ones_1"
  op: "Fill"
  input: "bboxes_encode_block_1/ones_1/shape_as_tensor"
  input: "bboxes_encode_block_1/ones_1/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Enter"
  op: "Enter"
  input: "bboxes_encode_block_1/while/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Enter_1"
  op: "Enter"
  input: "bboxes_encode_block_1/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Enter_2"
  op: "Enter"
  input: "bboxes_encode_block_1/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Enter_3"
  op: "Enter"
  input: "bboxes_encode_block_1/zeros_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Enter_4"
  op: "Enter"
  input: "bboxes_encode_block_1/zeros_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Enter_5"
  op: "Enter"
  input: "bboxes_encode_block_1/ones"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Enter_6"
  op: "Enter"
  input: "bboxes_encode_block_1/ones_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Merge"
  op: "Merge"
  input: "bboxes_encode_block_1/while/Enter"
  input: "bboxes_encode_block_1/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Merge_1"
  op: "Merge"
  input: "bboxes_encode_block_1/while/Enter_1"
  input: "bboxes_encode_block_1/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Merge_2"
  op: "Merge"
  input: "bboxes_encode_block_1/while/Enter_2"
  input: "bboxes_encode_block_1/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Merge_3"
  op: "Merge"
  input: "bboxes_encode_block_1/while/Enter_3"
  input: "bboxes_encode_block_1/while/NextIteration_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Merge_4"
  op: "Merge"
  input: "bboxes_encode_block_1/while/Enter_4"
  input: "bboxes_encode_block_1/while/NextIteration_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Merge_5"
  op: "Merge"
  input: "bboxes_encode_block_1/while/Enter_5"
  input: "bboxes_encode_block_1/while/NextIteration_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Merge_6"
  op: "Merge"
  input: "bboxes_encode_block_1/while/Enter_6"
  input: "bboxes_encode_block_1/while/NextIteration_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Shape"
  op: "Shape"
  input: "bboxes_encode_block_1/while/Shape/Enter"
  input: "^bboxes_encode_block_1/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Shape/Enter"
  op: "Enter"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/GatherV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Less"
  op: "Less"
  input: "bboxes_encode_block_1/while/Merge"
  input: "bboxes_encode_block_1/while/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice/stack"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice"
  op: "StridedSlice"
  input: "bboxes_encode_block_1/while/Less"
  input: "bboxes_encode_block_1/while/strided_slice/stack"
  input: "bboxes_encode_block_1/while/strided_slice/stack_1"
  input: "bboxes_encode_block_1/while/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/LoopCond"
  op: "LoopCond"
  input: "bboxes_encode_block_1/while/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Switch"
  op: "Switch"
  input: "bboxes_encode_block_1/while/Merge"
  input: "bboxes_encode_block_1/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_1/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Switch_1"
  op: "Switch"
  input: "bboxes_encode_block_1/while/Merge_1"
  input: "bboxes_encode_block_1/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_1/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Switch_2"
  op: "Switch"
  input: "bboxes_encode_block_1/while/Merge_2"
  input: "bboxes_encode_block_1/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_1/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Switch_3"
  op: "Switch"
  input: "bboxes_encode_block_1/while/Merge_3"
  input: "bboxes_encode_block_1/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_1/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Switch_4"
  op: "Switch"
  input: "bboxes_encode_block_1/while/Merge_4"
  input: "bboxes_encode_block_1/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_1/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Switch_5"
  op: "Switch"
  input: "bboxes_encode_block_1/while/Merge_5"
  input: "bboxes_encode_block_1/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_1/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Switch_6"
  op: "Switch"
  input: "bboxes_encode_block_1/while/Merge_6"
  input: "bboxes_encode_block_1/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_1/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Identity"
  op: "Identity"
  input: "bboxes_encode_block_1/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Identity_1"
  op: "Identity"
  input: "bboxes_encode_block_1/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Identity_2"
  op: "Identity"
  input: "bboxes_encode_block_1/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Identity_3"
  op: "Identity"
  input: "bboxes_encode_block_1/while/Switch_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Identity_4"
  op: "Identity"
  input: "bboxes_encode_block_1/while/Switch_4:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Identity_5"
  op: "Identity"
  input: "bboxes_encode_block_1/while/Switch_5:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Identity_6"
  op: "Identity"
  input: "bboxes_encode_block_1/while/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/add/y"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/add"
  op: "Add"
  input: "bboxes_encode_block_1/while/Identity"
  input: "bboxes_encode_block_1/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_1/stack"
  op: "Pack"
  input: "bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_1/stack_1"
  op: "Pack"
  input: "bboxes_encode_block_1/while/add"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_1/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_1"
  op: "StridedSlice"
  input: "bboxes_encode_block_1/while/Shape/Enter"
  input: "bboxes_encode_block_1/while/strided_slice_1/stack"
  input: "bboxes_encode_block_1/while/strided_slice_1/stack_1"
  input: "bboxes_encode_block_1/while/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/add_1/y"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/add_1"
  op: "Add"
  input: "bboxes_encode_block_1/while/Identity"
  input: "bboxes_encode_block_1/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_2/stack"
  op: "Pack"
  input: "bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_2/stack_1"
  op: "Pack"
  input: "bboxes_encode_block_1/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_2/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_2"
  op: "StridedSlice"
  input: "bboxes_encode_block_1/while/strided_slice_2/Enter"
  input: "bboxes_encode_block_1/while/strided_slice_2/stack"
  input: "bboxes_encode_block_1/while/strided_slice_2/stack_1"
  input: "bboxes_encode_block_1/while/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_2/Enter"
  op: "Enter"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_3/stack"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_3/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_3/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_3"
  op: "StridedSlice"
  input: "bboxes_encode_block_1/while/strided_slice_2"
  input: "bboxes_encode_block_1/while/strided_slice_3/stack"
  input: "bboxes_encode_block_1/while/strided_slice_3/stack_1"
  input: "bboxes_encode_block_1/while/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Maximum/x"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        tensor_content: "-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275-\371E\275X6\255\275:\376\327\274 \234\242\275JE\210\274\376m\323\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\000\327\243;H\361\377\274\340\351\334<h\210\325\274hQ\026=\360gL\275\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;\360\356n=\330\366\264<\200t\244=\270_\337<\274b\270=\000\302`;~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=~\261\344=\274w\232=C\327\010>\364\021\245=a\316\022>,\200h=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\302\365(>\341\330\003>Ft?>\375%\t>dkI>\034z\341=\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\305\222_>\344u:>I\021v>\000\303?>4\004\200>\021Z\'>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>\344\027\213>\350\022q>&W\226>\004`v>\266R\233>\025\367]>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>ff\246>\366\327\223>\250\245\261>\204~\226>8\241\266>\014J\212>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>\350\264\301>x&\257>*\364\314>\006\315\261>\272\357\321>\216\230\245>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>j\003\335>\371t\312>\254B\350>\207\033\315>:>\355>\020\347\300>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>\354Q\370>{\303\345>\227\310\001?\tj\350>^F\004?\2225\334>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>7\320\t?\376\210\000?\330o\017?F\334\001?\237\355\021?\024\204\367>xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t?xw\027?@0\016?\031\027\035?\206\203\017?\340\224\037?Ki\t~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?\371\3052?\300~)?\232e8?\010\322*?a\343:?\314\267$?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?:m@?\002&7?\333\014F?Hy8?\242\212H?\r_2?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?{\024N?B\315D?\034\264S?\212 F?\3431V?N\006@?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\274\273[?\204tR?][a?\312\307S?$\331c?\217\255M?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?\375bi?\304\033`?\236\002o?\014oa?e\200q?\320T[?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Maximum"
  op: "Maximum"
  input: "bboxes_encode_block_1/while/Maximum/x"
  input: "bboxes_encode_block_1/while/strided_slice_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_4/stack"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_4/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_4/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_4"
  op: "StridedSlice"
  input: "bboxes_encode_block_1/while/strided_slice_2"
  input: "bboxes_encode_block_1/while/strided_slice_4/stack"
  input: "bboxes_encode_block_1/while/strided_slice_4/stack_1"
  input: "bboxes_encode_block_1/while/strided_slice_4/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Maximum_1/x"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        tensor_content: "-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?-\371E\275X6\255\275 \234\242\275:\376\327\274\376m\323\275JE\210\274\000\327\243;H\361\377\274h\210\325\274\340\351\334<\360gL\275hQ\026=\360\356n=\330\366\264<\270_\337<\200t\244=\000\302`;\274b\270=~\261\344=\274w\232=\364\021\245=C\327\010>,\200h=a\316\022>\302\365(>\341\330\003>\375%\t>Ft?>\034z\341=dkI>\305\222_>\344u:>\000\303?>I\021v>\021Z\'>4\004\200>\344\027\213>\350\022q>\004`v>&W\226>\025\367]>\266R\233>ff\246>\366\327\223>\204~\226>\250\245\261>\014J\212>8\241\266>\350\264\301>x&\257>\006\315\261>*\364\314>\216\230\245>\272\357\321>j\003\335>\371t\312>\207\033\315>\254B\350>\020\347\300>:>\355>\354Q\370>{\303\345>\tj\350>\227\310\001?\2225\334>^F\004?7\320\t?\376\210\000?F\334\001?\330o\017?\024\204\367>\237\355\021?xw\027?@0\016?\206\203\017?\031\027\035?Ki\t?\340\224\037?\271\036%?\200\327\033?\310*\035?Z\276*?\214\020\027?!<-?\371\3052?\300~)?\010\322*?\232e8?\314\267$?a\343:?:m@?\002&7?Hy8?\333\014F?\r_2?\242\212H?{\024N?B\315D?\212 F?\034\264S?N\006@?\3431V?\274\273[?\204tR?\312\307S?][a?\217\255M?$\331c?\375bi?\304\033`?\014oa?\236\002o?\320T[?e\200q?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Maximum_1"
  op: "Maximum"
  input: "bboxes_encode_block_1/while/Maximum_1/x"
  input: "bboxes_encode_block_1/while/strided_slice_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_5/stack"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_5/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_5/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_5"
  op: "StridedSlice"
  input: "bboxes_encode_block_1/while/strided_slice_2"
  input: "bboxes_encode_block_1/while/strided_slice_5/stack"
  input: "bboxes_encode_block_1/while/strided_slice_5/stack_1"
  input: "bboxes_encode_block_1/while/strided_slice_5/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Minimum/x"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >\2366\320=08\r>\2269\243=\024\353\007>ZK\217=\003T >R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>R\270\036>3\325C>\3169\010>\027\210>>`\205\374=\006\361V>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>VUU>7rz>\322\326>>\033%u>\264\3374>\005\307\206>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>,\371\205>\235\207\230>\325su>\017\341\225>\267|k>\206\025\242>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>\256G\241>\036\326\263>l\010\226>\220/\261>\335\014\221>\010d\275>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>0\226\274>\240$\317>\356V\261>\022~\314>^[\254>\212\262\330>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>\262\344\327>\"s\352>p\245\314>\224\314\347>\340\251\307>\014\001\364>43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?43\363>\322\340\002?\362\363\347>\213\215\001?b\370\342>\307\247\007?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\333@\007?\023\210\020?:\241\001?\3144\017?\344F\376>\010O\025?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\033\350\024?T/\036?zH\017?\014\334\034?\263\312\014?H\366\"?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\\\217\"?\224\326+?\273\357\034?N\203*?\364q\032?\211\2350?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\23560?\326}9?\374\226*?\216*8?5\031(?\312D>?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\336\335=?\026%G?=>8?\320\321E?v\3005?\013\354K?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?\037\205K?X\314T?~\345E?\020yS?\267gC?L\223Y?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?_,Y?\230sb?\276\214S?P a?\367\016Q?\214:g?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\240\323f?\330\032p?\3773a?\222\307n?8\266^?\315\341t?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\341zt?\032\302}?@\333n?\322n|?y]l?\207D\201?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z?(\030\210?\021\021\201?\255\264\205?\201\202|?\n\013\205?\272\004z
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Minimum"
  op: "Minimum"
  input: "bboxes_encode_block_1/while/Minimum/x"
  input: "bboxes_encode_block_1/while/strided_slice_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_6/stack"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_6/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_6/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_6"
  op: "StridedSlice"
  input: "bboxes_encode_block_1/while/strided_slice_2"
  input: "bboxes_encode_block_1/while/strided_slice_6/stack"
  input: "bboxes_encode_block_1/while/strided_slice_6/stack_1"
  input: "bboxes_encode_block_1/while/strided_slice_6/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Minimum_1/x"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?\2366\320=08\r>\024\353\007>\2269\243=\003T >ZK\217=R\270\036>3\325C>\027\210>>\3169\010>\006\361V>`\205\374=VUU>7rz>\033%u>\322\326>>\005\307\206>\264\3374>,\371\205>\235\207\230>\017\341\225>\325su>\206\025\242>\267|k>\256G\241>\036\326\263>\220/\261>l\010\226>\010d\275>\335\014\221>0\226\274>\240$\317>\022~\314>\356V\261>\212\262\330>^[\254>\262\344\327>\"s\352>\224\314\347>p\245\314>\014\001\364>\340\251\307>43\363>\322\340\002?\213\215\001?\362\363\347>\307\247\007?b\370\342>\333@\007?\023\210\020?\3144\017?:\241\001?\010O\025?\344F\376>\033\350\024?T/\036?\014\334\034?zH\017?H\366\"?\263\312\014?\\\217\"?\224\326+?N\203*?\273\357\034?\211\2350?\364q\032?\23560?\326}9?\216*8?\374\226*?\312D>?5\031(?\336\335=?\026%G?\320\321E?=>8?\013\354K?v\3005?\037\205K?X\314T?\020yS?~\345E?L\223Y?\267gC?_,Y?\230sb?P a?\276\214S?\214:g?\367\016Q?\240\323f?\330\032p?\222\307n?\3773a?\315\341t?8\266^?\341zt?\032\302}?\322n|?@\333n?\207D\201?y]l?\021\021\201?\255\264\205?\n\013\205?\201\202|?(\030\210?\272\004z?\262\344\207?N\210\214?\252\336\213?\341\024\205?\310\353\216?\375\325\203?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Minimum_1"
  op: "Minimum"
  input: "bboxes_encode_block_1/while/Minimum_1/x"
  input: "bboxes_encode_block_1/while/strided_slice_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub"
  op: "Sub"
  input: "bboxes_encode_block_1/while/Minimum"
  input: "bboxes_encode_block_1/while/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Maximum_2/y"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Maximum_2"
  op: "Maximum"
  input: "bboxes_encode_block_1/while/sub"
  input: "bboxes_encode_block_1/while/Maximum_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub_1"
  op: "Sub"
  input: "bboxes_encode_block_1/while/Minimum_1"
  input: "bboxes_encode_block_1/while/Maximum_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Maximum_3/y"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Maximum_3"
  op: "Maximum"
  input: "bboxes_encode_block_1/while/sub_1"
  input: "bboxes_encode_block_1/while/Maximum_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/mul"
  op: "Mul"
  input: "bboxes_encode_block_1/while/Maximum_2"
  input: "bboxes_encode_block_1/while/Maximum_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub_2/x"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        tensor_content~\300J=\354Q\270<\352Q\270<\356Q\270<\356Q\270<\350Q\270<\205\300J=\345Q\270<\352Q\270<\356Q\270<\356Q\270<\350Q\270<\205\300J=\345Q\270<\352Q\270<\356Q\270<\356Q\270<\350Q\270<~\300J=\354Q\270<\352Q\270<\356Q\270<\356Q\270<\350Q\270<\205\300J=\345Q\270<\352Q\270<\356Q\270<\356Q\270<\350Q\270<~~\300J=\352Q\270<\354Q\270<\356Q\270<\356Q\270<\350Q\270<\204\300J=\345Q\270<\354Q\270<\356Q\270<\356Q\270<\350Q\270<}\300J=\354Q\270<\354Q\270<\356Q\270<\356Q\270<\350Q\270<\204\300J=\345Q\270<\354Q\270<\356Q\270<\356Q\270<\350Q\270<\204\300J=\345Q\270<\354Q\270<\356Q\270<\356Q\270<\350Q\270<}\300J=\354Q\270<\354Q\270<\356Q\270<\356Q\270<\350Q\270<\204\300J=\345Q\270<\354Q\270<\356Q\270<\356Q\270<\350Q\270<}~\300J=\352Q\270<\354Q\270<\356Q\270<\356Q\270<\350Q\270<\204\300J=\345Q\270<\354Q\270<\356Q\270<\356Q\270<\350Q\270<}\300J=\354Q\270<\354Q\270<\356Q\270<\356Q\270<\350Q\270<\204\300J=\345Q\270<\354Q\270<\356Q\270<\356Q\270<\350Q\270<\204\300J=\345Q\270<\354Q\270<\356Q\270<\356Q\270<\350Q\270<}\300J=\354Q\270<\354Q\270<\356Q\270<\356Q\270<\350Q\270<\204\300J=\345Q\270<\354Q\270<\356Q\270<\356Q\270<\350Q\270<}~\300J=\352Q\270<\354Q\270<\356Q\270<\361Q\270<\350Q\270<\204\300J=\345Q\270<\354Q\270<\356Q\270<\361Q\270<\350Q\270<}\300J=\354Q\270<\354Q\270<\356Q\270<\361Q\270<\350Q\270<\204\300J=\345Q\270<\354Q\270<\356Q\270<\361Q\270<\350Q\270<\204\300J=\345Q\270<\354Q\270<\356Q\270<\361Q\270<\350Q\270<}\300J=\354Q\270<\354Q\270<\356Q\270<\361Q\270<\350Q\270<\204\300J=\345Q\270<\354Q\270<\356Q\270<\361Q\270<\350Q\270<}
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub_2"
  op: "Sub"
  input: "bboxes_encode_block_1/while/sub_2/x"
  input: "bboxes_encode_block_1/while/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_7/stack"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_7/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_7/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_7"
  op: "StridedSlice"
  input: "bboxes_encode_block_1/while/strided_slice_2"
  input: "bboxes_encode_block_1/while/strided_slice_7/stack"
  input: "bboxes_encode_block_1/while/strided_slice_7/stack_1"
  input: "bboxes_encode_block_1/while/strided_slice_7/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_8/stack"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_8/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_8/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_8"
  op: "StridedSlice"
  input: "bboxes_encode_block_1/while/strided_slice_2"
  input: "bboxes_encode_block_1/while/strided_slice_8/stack"
  input: "bboxes_encode_block_1/while/strided_slice_8/stack_1"
  input: "bboxes_encode_block_1/while/strided_slice_8/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub_3"
  op: "Sub"
  input: "bboxes_encode_block_1/while/strided_slice_7"
  input: "bboxes_encode_block_1/while/strided_slice_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_9/stack"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_9/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_9/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_9"
  op: "StridedSlice"
  input: "bboxes_encode_block_1/while/strided_slice_2"
  input: "bboxes_encode_block_1/while/strided_slice_9/stack"
  input: "bboxes_encode_block_1/while/strided_slice_9/stack_1"
  input: "bboxes_encode_block_1/while/strided_slice_9/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_10/stack"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_10/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_10/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_10"
  op: "StridedSlice"
  input: "bboxes_encode_block_1/while/strided_slice_2"
  input: "bboxes_encode_block_1/while/strided_slice_10/stack"
  input: "bboxes_encode_block_1/while/strided_slice_10/stack_1"
  input: "bboxes_encode_block_1/while/strided_slice_10/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub_4"
  op: "Sub"
  input: "bboxes_encode_block_1/while/strided_slice_9"
  input: "bboxes_encode_block_1/while/strided_slice_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/mul_1"
  op: "Mul"
  input: "bboxes_encode_block_1/while/sub_3"
  input: "bboxes_encode_block_1/while/sub_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/add_2"
  op: "Add"
  input: "bboxes_encode_block_1/while/sub_2"
  input: "bboxes_encode_block_1/while/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/div"
  op: "RealDiv"
  input: "bboxes_encode_block_1/while/mul"
  input: "bboxes_encode_block_1/while/add_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Greater"
  op: "Greater"
  input: "bboxes_encode_block_1/while/div"
  input: "bboxes_encode_block_1/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Greater_1/y"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Greater_1"
  op: "Greater"
  input: "bboxes_encode_block_1/while/Identity_2"
  input: "bboxes_encode_block_1/while/Greater_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/LogicalAnd"
  op: "LogicalAnd"
  input: "bboxes_encode_block_1/while/Greater"
  input: "bboxes_encode_block_1/while/Greater_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Less_1/y"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Less_1"
  op: "Less"
  input: "bboxes_encode_block_1/while/strided_slice_1"
  input: "bboxes_encode_block_1/while/Less_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/LogicalAnd_1"
  op: "LogicalAnd"
  input: "bboxes_encode_block_1/while/LogicalAnd"
  input: "bboxes_encode_block_1/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Cast"
  op: "Cast"
  input: "bboxes_encode_block_1/while/LogicalAnd_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Cast_1"
  op: "Cast"
  input: "bboxes_encode_block_1/while/LogicalAnd_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/mul_2"
  op: "Mul"
  input: "bboxes_encode_block_1/while/Cast"
  input: "bboxes_encode_block_1/while/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub_5/x"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub_5"
  op: "Sub"
  input: "bboxes_encode_block_1/while/sub_5/x"
  input: "bboxes_encode_block_1/while/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/mul_3"
  op: "Mul"
  input: "bboxes_encode_block_1/while/sub_5"
  input: "bboxes_encode_block_1/while/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/add_3"
  op: "Add"
  input: "bboxes_encode_block_1/while/mul_2"
  input: "bboxes_encode_block_1/while/mul_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Select"
  op: "Select"
  input: "bboxes_encode_block_1/while/LogicalAnd_1"
  input: "bboxes_encode_block_1/while/div"
  input: "bboxes_encode_block_1/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_11/stack"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_11/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_11/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_11"
  op: "StridedSlice"
  input: "bboxes_encode_block_1/while/strided_slice_2"
  input: "bboxes_encode_block_1/while/strided_slice_11/stack"
  input: "bboxes_encode_block_1/while/strided_slice_11/stack_1"
  input: "bboxes_encode_block_1/while/strided_slice_11/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/mul_4"
  op: "Mul"
  input: "bboxes_encode_block_1/while/Cast_1"
  input: "bboxes_encode_block_1/while/strided_slice_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub_6/x"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub_6"
  op: "Sub"
  input: "bboxes_encode_block_1/while/sub_6/x"
  input: "bboxes_encode_block_1/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/mul_5"
  op: "Mul"
  input: "bboxes_encode_block_1/while/sub_6"
  input: "bboxes_encode_block_1/while/Identity_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/add_4"
  op: "Add"
  input: "bboxes_encode_block_1/while/mul_4"
  input: "bboxes_encode_block_1/while/mul_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_12/stack"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_12/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_12/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_12"
  op: "StridedSlice"
  input: "bboxes_encode_block_1/while/strided_slice_2"
  input: "bboxes_encode_block_1/while/strided_slice_12/stack"
  input: "bboxes_encode_block_1/while/strided_slice_12/stack_1"
  input: "bboxes_encode_block_1/while/strided_slice_12/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/mul_6"
  op: "Mul"
  input: "bboxes_encode_block_1/while/Cast_1"
  input: "bboxes_encode_block_1/while/strided_slice_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub_7/x"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub_7"
  op: "Sub"
  input: "bboxes_encode_block_1/while/sub_7/x"
  input: "bboxes_encode_block_1/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/mul_7"
  op: "Mul"
  input: "bboxes_encode_block_1/while/sub_7"
  input: "bboxes_encode_block_1/while/Identity_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/add_5"
  op: "Add"
  input: "bboxes_encode_block_1/while/mul_6"
  input: "bboxes_encode_block_1/while/mul_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_13/stack"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_13/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_13/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_13"
  op: "StridedSlice"
  input: "bboxes_encode_block_1/while/strided_slice_2"
  input: "bboxes_encode_block_1/while/strided_slice_13/stack"
  input: "bboxes_encode_block_1/while/strided_slice_13/stack_1"
  input: "bboxes_encode_block_1/while/strided_slice_13/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/mul_8"
  op: "Mul"
  input: "bboxes_encode_block_1/while/Cast_1"
  input: "bboxes_encode_block_1/while/strided_slice_13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub_8/x"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub_8"
  op: "Sub"
  input: "bboxes_encode_block_1/while/sub_8/x"
  input: "bboxes_encode_block_1/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/mul_9"
  op: "Mul"
  input: "bboxes_encode_block_1/while/sub_8"
  input: "bboxes_encode_block_1/while/Identity_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/add_6"
  op: "Add"
  input: "bboxes_encode_block_1/while/mul_8"
  input: "bboxes_encode_block_1/while/mul_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_14/stack"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_14/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_14/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/strided_slice_14"
  op: "StridedSlice"
  input: "bboxes_encode_block_1/while/strided_slice_2"
  input: "bboxes_encode_block_1/while/strided_slice_14/stack"
  input: "bboxes_encode_block_1/while/strided_slice_14/stack_1"
  input: "bboxes_encode_block_1/while/strided_slice_14/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/mul_10"
  op: "Mul"
  input: "bboxes_encode_block_1/while/Cast_1"
  input: "bboxes_encode_block_1/while/strided_slice_14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub_9/x"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/sub_9"
  op: "Sub"
  input: "bboxes_encode_block_1/while/sub_9/x"
  input: "bboxes_encode_block_1/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/mul_11"
  op: "Mul"
  input: "bboxes_encode_block_1/while/sub_9"
  input: "bboxes_encode_block_1/while/Identity_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/add_7"
  op: "Add"
  input: "bboxes_encode_block_1/while/mul_10"
  input: "bboxes_encode_block_1/while/mul_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/add_8/y"
  op: "Const"
  input: "^bboxes_encode_block_1/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/add_8"
  op: "Add"
  input: "bboxes_encode_block_1/while/Identity"
  input: "bboxes_encode_block_1/while/add_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/NextIteration"
  op: "NextIteration"
  input: "bboxes_encode_block_1/while/add_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/NextIteration_1"
  op: "NextIteration"
  input: "bboxes_encode_block_1/while/add_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/NextIteration_2"
  op: "NextIteration"
  input: "bboxes_encode_block_1/while/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/NextIteration_3"
  op: "NextIteration"
  input: "bboxes_encode_block_1/while/add_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/NextIteration_4"
  op: "NextIteration"
  input: "bboxes_encode_block_1/while/add_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/NextIteration_5"
  op: "NextIteration"
  input: "bboxes_encode_block_1/while/add_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/NextIteration_6"
  op: "NextIteration"
  input: "bboxes_encode_block_1/while/add_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Exit"
  op: "Exit"
  input: "bboxes_encode_block_1/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Exit_1"
  op: "Exit"
  input: "bboxes_encode_block_1/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Exit_2"
  op: "Exit"
  input: "bboxes_encode_block_1/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Exit_3"
  op: "Exit"
  input: "bboxes_encode_block_1/while/Switch_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Exit_4"
  op: "Exit"
  input: "bboxes_encode_block_1/while/Switch_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Exit_5"
  op: "Exit"
  input: "bboxes_encode_block_1/while/Switch_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/while/Exit_6"
  op: "Exit"
  input: "bboxes_encode_block_1/while/Switch_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/add"
  op: "Add"
  input: "bboxes_encode_block_1/while/Exit_5"
  input: "bboxes_encode_block_1/while/Exit_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv"
  op: "RealDiv"
  input: "bboxes_encode_block_1/add"
  input: "bboxes_encode_block_1/truediv/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/add_1"
  op: "Add"
  input: "bboxes_encode_block_1/while/Exit_6"
  input: "bboxes_encode_block_1/while/Exit_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_1"
  op: "RealDiv"
  input: "bboxes_encode_block_1/add_1"
  input: "bboxes_encode_block_1/truediv_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/sub"
  op: "Sub"
  input: "bboxes_encode_block_1/while/Exit_5"
  input: "bboxes_encode_block_1/while/Exit_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/sub_1"
  op: "Sub"
  input: "bboxes_encode_block_1/while/Exit_6"
  input: "bboxes_encode_block_1/while/Exit_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/sub_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\016t\332<\016t\332<\016t\332<\016t\332<\016t\332<\016t\332<\016t\332<\016t\332<\016t\332<\016t\332<\016t\332<\016t\332<\016t\332<\016t\332<\016t\332<\016t\332<\016t\332<\016t\332<\016t\332<\n\327\243=\n\327\243=\n\327\243=\n\327\243=\n\327\243=\n\327\243=\n\327\243=\n\327\243=\n\327\243=\n\327\243=\n\327\243=\n\327\243=\n\327\243=\n\327\243=\n\327\243=\n\327\243=\n\327\243=\n\327\243=\n\327\243=\211\210\010>\211\210\010>\211\210\010>\211\210\010>\211\210\010>\211\210\010>\211\210\010>\211\210\010>\211\210\010>\211\210\010>\211\210\010>\211\210\010>\211\210\010>\211\210\010>\211\210\010>\211\210\010>\211\210\010>\211\210\010>\211\210\010>\214%?>\214%?>\214%?>\214%?>\214%?>\214%?>\214%?>\214%?>\214%?>\214%?>\214%?>\214%?>\214%?>\214%?>\214%?>\214%?>\214%?>\214%?>\214%?>\217\302u>\217\302u>\217\302u>\217\302u>\217\302u>\217\302u>\217\302u>\217\302u>\217\302u>\217\302u>\217\302u>\217\302u>\217\302u>\217\302u>\217\302u>\217\302u>\217\302u>\217\302u>\217\302u>\311/\226>\311/\226>\311/\226>\311/\226>\311/\226>\311/\226>\311/\226>\311/\226>\311/\226>\311/\226>\311/\226>\311/\226>\311/\226>\311/\226>\311/\226>\311/\226>\311/\226>\311/\226>\311/\226>K~\261>K~\261>K~\261>K~\261>K~\261>K~\261>K~\261>K~\261>K~\261>K~\261>K~\261>K~\261>K~\261>K~\261>K~\261>K~\261>K~\261>K~\261>K~j\003\035?j\003\035?j\003\035?j\003\035?j\003\035?j\003\035?j\003\035?j\003\035?j\003\035?j\003\035?j\003\035?j\003\035?j\003\035?j\003\035?j\003\035?j\003\035?j\003\035?j\003\035?j\003\035?\253\252*?\253\252*?\253\252*?\253\252*?\253\252*?\253\252*?\253\252*?\253\252*?\253\252*?\253\252*?\253\252*?\253\252*?\253\252*?\253\252*?\253\252*?\253\252*?\253\252*?\253\252*?\253\252*?\354Q8?\354Q8?\354Q8?\354Q8?\354Q8?\354Q8?\354Q8?\354Q8?\354Q8?\354Q8?\354Q8?\354Q8?\354Q8?\354Q8?\354Q8?\354Q8?\354Q8?\354Q8?\354Q8?,\371E?,\371E?,\371E?,\371E?,\371E?,\371E?,\371E?,\371E?,\371E?,\371E?,\371E?,\371E?,\371E?,\371E?,\371E?,\371E?,\371E?,\371E?,\371E?m\240S?m\240S?m\240S?m\240S?m\240S?m\240S?m\240S?m\240S?m\240S?m\240S?m\240S?m\240S?m\240S?m\240S?m\240S?m\240S?m\240S?m\240S?m\240S?\256Ga?\256Ga?\256Ga?\256Ga?\256Ga?\256Ga?\256Ga?\256Ga?\256Ga?\256Ga?\256Ga?\256Ga?\256Ga?\256Ga?\256Ga?\256Ga?\256Ga?\256Ga?\256Ga?\357\356n?\357\356n?\357\356n?\357\356n?\357\356n?\357\356n?\357\356n?\357\356n?\357\356n?\357\356n?\357\356n?\357\356n?\357\356n?\357\356n?\357\356n?\357\356n?\357\356n?\357\356n?\357\356n?0\226|?0\226|?0\226|?0\226|?0\226|?0\226|?0\226|?0\226|?0\226|?0\226|?0\226|?0\226|?0\226|?0\226|?0\226|?0\226|?0\226|?0\226|?0\226|?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/sub_2"
  op: "Sub"
  input: "bboxes_encode_block_1/truediv"
  input: "bboxes_encode_block_1/sub_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\232\231\031>\\\323c>$9\331=$9Y>\254\\\261=\201\005\205>"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_2"
  op: "RealDiv"
  input: "bboxes_encode_block_1/sub_2"
  input: "bboxes_encode_block_1/truediv_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_3"
  op: "RealDiv"
  input: "bboxes_encode_block_1/truediv_2"
  input: "bboxes_encode_block_1/truediv_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/sub_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?\016t\332<\n\327\243=\211\210\010>\214%?>\217\302u>\311/\226>K~\261>\315\314\314>O\033\350>\350\264\001?)\\\017?j\003\035?\253\252*?\354Q8?,\371E?m\240S?\256Ga?\357\356n?0\226|?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/sub_3"
  op: "Sub"
  input: "bboxes_encode_block_1/truediv_1"
  input: "bboxes_encode_block_1/sub_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_4/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\232\231\031>\\\323c>$9Y>$9\331=\201\005\205>\254\\\261="
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_4"
  op: "RealDiv"
  input: "bboxes_encode_block_1/sub_3"
  input: "bboxes_encode_block_1/truediv_4/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_5/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_5"
  op: "RealDiv"
  input: "bboxes_encode_block_1/truediv_4"
  input: "bboxes_encode_block_1/truediv_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_6/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\232\231\031>\\\323c>$9\331=$9Y>\254\\\261=\201\005\205>"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_6"
  op: "RealDiv"
  input: "bboxes_encode_block_1/sub"
  input: "bboxes_encode_block_1/truediv_6/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/Log"
  op: "Log"
  input: "bboxes_encode_block_1/truediv_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_7/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_7"
  op: "RealDiv"
  input: "bboxes_encode_block_1/Log"
  input: "bboxes_encode_block_1/truediv_7/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_8/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\232\231\031>\\\323c>$9Y>$9\331=\201\005\205>\254\\\261="
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_8"
  op: "RealDiv"
  input: "bboxes_encode_block_1/sub_1"
  input: "bboxes_encode_block_1/truediv_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/Log_1"
  op: "Log"
  input: "bboxes_encode_block_1/truediv_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_9/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/truediv_9"
  op: "RealDiv"
  input: "bboxes_encode_block_1/Log_1"
  input: "bboxes_encode_block_1/truediv_9/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_1/stack"
  op: "Pack"
  input: "bboxes_encode_block_1/truediv_5"
  input: "bboxes_encode_block_1/truediv_3"
  input: "bboxes_encode_block_1/truediv_9"
  input: "bboxes_encode_block_1/truediv_7"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "bboxes_encode_block_2/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/zeros_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/zeros_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/zeros_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/ones"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/ones_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Enter"
  op: "Enter"
  input: "bboxes_encode_block_2/while/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Enter_1"
  op: "Enter"
  input: "bboxes_encode_block_2/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Enter_2"
  op: "Enter"
  input: "bboxes_encode_block_2/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Enter_3"
  op: "Enter"
  input: "bboxes_encode_block_2/zeros_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Enter_4"
  op: "Enter"
  input: "bboxes_encode_block_2/zeros_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Enter_5"
  op: "Enter"
  input: "bboxes_encode_block_2/ones"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Enter_6"
  op: "Enter"
  input: "bboxes_encode_block_2/ones_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Merge"
  op: "Merge"
  input: "bboxes_encode_block_2/while/Enter"
  input: "bboxes_encode_block_2/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Merge_1"
  op: "Merge"
  input: "bboxes_encode_block_2/while/Enter_1"
  input: "bboxes_encode_block_2/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Merge_2"
  op: "Merge"
  input: "bboxes_encode_block_2/while/Enter_2"
  input: "bboxes_encode_block_2/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Merge_3"
  op: "Merge"
  input: "bboxes_encode_block_2/while/Enter_3"
  input: "bboxes_encode_block_2/while/NextIteration_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Merge_4"
  op: "Merge"
  input: "bboxes_encode_block_2/while/Enter_4"
  input: "bboxes_encode_block_2/while/NextIteration_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Merge_5"
  op: "Merge"
  input: "bboxes_encode_block_2/while/Enter_5"
  input: "bboxes_encode_block_2/while/NextIteration_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Merge_6"
  op: "Merge"
  input: "bboxes_encode_block_2/while/Enter_6"
  input: "bboxes_encode_block_2/while/NextIteration_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Shape"
  op: "Shape"
  input: "bboxes_encode_block_2/while/Shape/Enter"
  input: "^bboxes_encode_block_2/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Shape/Enter"
  op: "Enter"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/GatherV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Less"
  op: "Less"
  input: "bboxes_encode_block_2/while/Merge"
  input: "bboxes_encode_block_2/while/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice/stack"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice"
  op: "StridedSlice"
  input: "bboxes_encode_block_2/while/Less"
  input: "bboxes_encode_block_2/while/strided_slice/stack"
  input: "bboxes_encode_block_2/while/strided_slice/stack_1"
  input: "bboxes_encode_block_2/while/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/LoopCond"
  op: "LoopCond"
  input: "bboxes_encode_block_2/while/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Switch"
  op: "Switch"
  input: "bboxes_encode_block_2/while/Merge"
  input: "bboxes_encode_block_2/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_2/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Switch_1"
  op: "Switch"
  input: "bboxes_encode_block_2/while/Merge_1"
  input: "bboxes_encode_block_2/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_2/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Switch_2"
  op: "Switch"
  input: "bboxes_encode_block_2/while/Merge_2"
  input: "bboxes_encode_block_2/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_2/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Switch_3"
  op: "Switch"
  input: "bboxes_encode_block_2/while/Merge_3"
  input: "bboxes_encode_block_2/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_2/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Switch_4"
  op: "Switch"
  input: "bboxes_encode_block_2/while/Merge_4"
  input: "bboxes_encode_block_2/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_2/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Switch_5"
  op: "Switch"
  input: "bboxes_encode_block_2/while/Merge_5"
  input: "bboxes_encode_block_2/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_2/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Switch_6"
  op: "Switch"
  input: "bboxes_encode_block_2/while/Merge_6"
  input: "bboxes_encode_block_2/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_2/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Identity"
  op: "Identity"
  input: "bboxes_encode_block_2/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Identity_1"
  op: "Identity"
  input: "bboxes_encode_block_2/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Identity_2"
  op: "Identity"
  input: "bboxes_encode_block_2/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Identity_3"
  op: "Identity"
  input: "bboxes_encode_block_2/while/Switch_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Identity_4"
  op: "Identity"
  input: "bboxes_encode_block_2/while/Switch_4:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Identity_5"
  op: "Identity"
  input: "bboxes_encode_block_2/while/Switch_5:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Identity_6"
  op: "Identity"
  input: "bboxes_encode_block_2/while/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/add/y"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/add"
  op: "Add"
  input: "bboxes_encode_block_2/while/Identity"
  input: "bboxes_encode_block_2/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_1/stack"
  op: "Pack"
  input: "bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_1/stack_1"
  op: "Pack"
  input: "bboxes_encode_block_2/while/add"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_1/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_1"
  op: "StridedSlice"
  input: "bboxes_encode_block_2/while/Shape/Enter"
  input: "bboxes_encode_block_2/while/strided_slice_1/stack"
  input: "bboxes_encode_block_2/while/strided_slice_1/stack_1"
  input: "bboxes_encode_block_2/while/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/add_1/y"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/add_1"
  op: "Add"
  input: "bboxes_encode_block_2/while/Identity"
  input: "bboxes_encode_block_2/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_2/stack"
  op: "Pack"
  input: "bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_2/stack_1"
  op: "Pack"
  input: "bboxes_encode_block_2/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_2/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_2"
  op: "StridedSlice"
  input: "bboxes_encode_block_2/while/strided_slice_2/Enter"
  input: "bboxes_encode_block_2/while/strided_slice_2/stack"
  input: "bboxes_encode_block_2/while/strided_slice_2/stack_1"
  input: "bboxes_encode_block_2/while/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_2/Enter"
  op: "Enter"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_3/stack"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_3/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_3/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_3"
  op: "StridedSlice"
  input: "bboxes_encode_block_2/while/strided_slice_2"
  input: "bboxes_encode_block_2/while/strided_slice_3/stack"
  input: "bboxes_encode_block_2/while/strided_slice_3/stack_1"
  input: "bboxes_encode_block_2/while/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Maximum/x"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\177\261\344\275xn\033\276\007\270\201\275\nU8\276:\276+\275\262\010n\276\177\261\344\275xn\033\276\007\270\201\275\nU8\276:\276+\275\262\010n\276\177\261\344\275xn\033\276\007\270\201\275\nU8\276:\276+\275\262\010n\276\177\261\344\275xn\033\276\007\270\201\275\nU8\276:\276+\275\262\010n\276\177\261\344\275xn\033\276\007\270\201\275\nU8\276:\276+\275\262\010n\276\177\261\344\275xn\033\276\007\270\201\275\nU8\276:\276+\275\262\010n\276\177\261\344\275xn\033\276\007\270\201\275\nU8\276:\276+\275\262\010n\276\177\261\344\275xn\033\276\007\270\201\275\nU8\276:\276+\275\262\010n\276\177\261\344\275xn\033\276\007\270\201\275\nU8\276:\276+\275\262\010n\276\177\261\344\275xn\033\276\007\270\201\275\nU8\276:\276+\275\262\010n\276 \327\243\273\304\3218\275\014x1=\0106\226\275\360\224\204=\254\316\000\276 \327\243\273\304\3218\275\014x1=\0106\226\275\360\224\204=\254\316\000\276 \327\243\273\304\3218\275\014x1=\0106\226\275\360\224\204=\254\316\000\276 \327\243\273\304\3218\275\014x1=\0106\226\275\360\224\204=\254\316\000\276 \327\243\273\304\3218\275\014x1=\0106\226\275\360\224\204=\254\316\000\276 \327\243\273\304\3218\275\014x1=\0106\226\275\360\224\204=\254\316\000\276 \327\243\273\304\3218\275\014x1=\0106\226\275\360\224\204=\254\316\000\276 \327\243\273\304\3218\275\014x1=\0106\226\275\360\224\204=\254\316\000\276 \327\243\273\304\3218\275\014x1=\0106\226\275\360\224\204=\254\316\000\276 \327\243\273\304\3218\275\014x1=\0106\226\275\360\224\204=\254\316\000\276\2366\320=\\\026|=\013\230\031>\020|\010=\200\204/> \245\234\274\2366\320=\\\026|=\013\230\031>\020|\010=\200\204/> \245\234\274\2366\320=\\\026|=\013\230\031>\020|\010=\200\204/> \245\234\274\2366\320=\\\026|=\013\230\031>\020|\010=\200\204/> \245\234\274\2366\320=\\\026|=\013\230\031>\020|\010=\200\204/> \245\234\274\2366\320=\\\026|=\013\230\031>\020|\010=\200\204/> \245\234\274\2366\320=\\\026|=\013\230\031>\020|\010=\200\204/> \245\234\274\2366\320=\\\026|=\013\230\031>\020|\010=\200\204/> \245\234\274\2366\320=\\\026|=\013\230\031>\020|\010=\200\204/> \245\234\274\2366\320=\\\026|=\013\230\031>\020|\010=\200\204/> \245\234\274UUU>\235?,>\010i\203>\nY\017>C_\216>\304J\263=UUU>\235?,>\010i\203>\nY\017>C_\216>\304J\263=UUU>\235?,>\010i\203>\nY\017>C_\216>\304J\263=UUU>\235?,>\010i\203>\nY\017>C_\216>\304J\263=UUU>\235?,>\010i\203>\nY\017>C_\216>\304J\263=UUU>\235?,>\010i\203>\nY\017>C_\216>\304J\263=UUU>\235?,>\010i\203>\nY\017>C_\216>\304J\263=UUU>\235?,>\010i\203>\nY\017>C_\216>\304J\263=UUU>\235?,>\010i\203>\nY\017>C_\216>\304J\263=UUU>\235?,>\010i\203>\nY\017>C_\216>\304J\263=\256G\241>\322\274\214>\014\006\272>\020\223|>F\374\304>h\337F>\256G\241>\322\274\214>\014\006\272>\020\223|>F\374\304>h\337F>\256G\241>\322\274\214>\014\006\272>\020\223|>F\374\304>h\337F>\256G\241>\322\274\214>\014\006\272>\020\223|>F\374\304>h\337F>\256G\241>\322\274\214>\014\006\272>\020\223|>F\374\304>h\337F>\256G\241>\322\274\214>\014\006\272>\020\223|>F\374\304>h\337F>\256G\241>\322\274\214>\014\006\272>\020\223|>F\374\304>h\337F>\256G\241>\322\274\214>\014\006\272>\020\223|>F\374\304>h\337F>\256G\241>\322\274\214>\014\006\272>\020\223|>F\374\304>h\337F>\256G\241>\322\274\214>\014\006\272>\020\223|>F\374\304>ht\240\023?\217\203\353>&\033\031?\273\251\320>\332@\007?\330\366\371>\t\240\023?\217\203\353>&\033\031?\273\251\320>\332@\007?\330\366\371>\t\240\023?\217\203\353>&\033\031?\273\251\320>\332@\007?\330\366\371>\t\240\023?\217\203\353>&\033\031?\273\251\320>\332@\007?\330\366\371>\t\240\023?\217\203\353>&\033\031?\273\251\320>\332@\007?\330\366\371>\t\240\023?\217\203\353>&\033\031?\273\251\320>\332@\007?\330\366\371>\t\240\023?\217\203\353>&\033\031?\273\251\320>\332@\007?\330\366\371>\t\240\023?\217\203\353>&\033\031?\273\251\320>\332@\007?\330\366\371>\t\240\023?\217\203\353>&\033\031?\273\251\320>\332@\007?\330\366\371>\t\240\023?\217\203\353>&\033\031?\273\251\320>\\\217\"?\356I\030?\213\356.?J\020\021?\250i4?`\243\003?\\\217\"?\356I\030?\213\356.?J\020\021?\250i4?`\243\003?\\\217\"?\356I\030?\213\356.?J\020\021?\250i4?`\243\003?\\\217\"?\356I\030?\213\356.?J\020\021?\250i4?`\243\003?\\\217\"?\356I\030?\213\356.?J\020\021?\250i4?`\243\003?\\\217\"?\356I\030?\213\356.?J\020\021?\250i4?`\243\003?\\\217\"?\356I\030?\213\356.?J\020\021?\250i4?`\243\003?\\\217\"?\356I\030?\213\356.?J\020\021?\250i4?`\243\003?\\\217\"?\356I\030?\213\356.?J\020\021?\250i4?`\243\003?\\\217\"?\356I\030?\213\356.?J\020\021?\250i4?`\243\003?\336\335=?p\2303?\r=J?\314^,?*\270O?\342\361\036?\336\335=?p\2303?\r=J?\314^,?*\270O?\342\361\036?\336\335=?p\2303?\r=J?\314^,?*\270O?\342\361\036?\336\335=?p\2303?\r=J?\314^,?*\270O?\342\361\036?\336\335=?p\2303?\r=J?\314^,?*\270O?\342\361\036?\336\335=?p\2303?\r=J?\314^,?*\270O?\342\361\036?\336\335=?p\2303?\r=J?\314^,?*\270O?\342\361\036?\336\335=?p\2303?\r=J?\314^,?*\270O?\342\361\036?\336\335=?p\2303?\r=J?\314^,?*\270O?\342\361\036?\336\335=?p\2303?\r=J?\314^,?*\270O?\342\361\036?_,Y?\361\346N?\216\213e?L\255G?\254\006k?b@:?_,Y?\361\346N?\216\213e?L\255G?\254\006k?b@:?_,Y?\361\346N?\216\213e?L\255G?\254\006k?b@:?_,Y?\361\346N?\216\213e?L\255G?\254\006k?b@:?_,Y?\361\346N?\216\213e?L\255G?\254\006k?b@:?_,Y?\361\346N?\216\213e?L\255G?\254\006k?b@:?_,Y?\361\346N?\216\213e?L\255G?\254\006k?b@:?_,Y?\361\346N?\216\213e?L\255G?\254\006k?b@:?_,Y?\361\346N?\216\213e?L\255G?\254\006k?b@:?_,Y?\361\346N?\216\213e?L\255G?\254\006k?b@:?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Maximum"
  op: "Maximum"
  input: "bboxes_encode_block_2/while/Maximum/x"
  input: "bboxes_encode_block_2/while/strided_slice_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_4/stack"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_4/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_4/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_4"
  op: "StridedSlice"
  input: "bboxes_encode_block_2/while/strided_slice_2"
  input: "bboxes_encode_block_2/while/strided_slice_4/stack"
  input: "bboxes_encode_block_2/while/strided_slice_4/stack_1"
  input: "bboxes_encode_block_2/while/strided_slice_4/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Maximum_1/x"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\177\261\344\275xn\033\276\nU8\276\007\270\201\275\262\010n\276:\276+\275 \327\243\273\304\3218\275\0106\226\275\014x1=\254\316\000\276\360\224\204=\2366\320=\\\026|=\020|\010=\013\230\031> \245\234\274\200\204/>UUU>\235?,>\nY\017>\010i\203>\304J\263=C_\216>\256G\241>\322\274\214>\020\223|>\014\006\272>h\337F>F\374\304>\260\344\327>\324Y\303>\213\346\264>\016\243\360>\267\014\232>I\231\373>\332@\007?\330\366\371>\217\203\353>\t\240\023?\273\251\320>&\033\031?\\\217\"?\356I\030?J\020\021?\213\356.?`\243\003?\250i4?\336\335=?p\2303?\314^,?\r=J?\342\361\036?*\270O?_,Y?\361\346N?L\255G?\216\213e?b@:?\254\006k?\177\261\344\275xn\033\276\nU8\276\007\270\201\275\262\010n\276:\276+\275 \327\243\273\304\3218\275\0106\226\275\014x1=\254\316\000\276\360\224\204=\2366\320=\\\026|=\020|\010=\013\230\031> \245\234\274\200\204/>UUU>\235?,>\nY\017>\010i\203>\304J\263=C_\216>\256G\241>\322\274\214>\020\223|>\014\006\272>h\337F>F\374\304>\260\344\327>\324Y\303>\213\346\264>\016\243\360>\267\014\232>I\231\373>\332@\007?\330\366\371>\217\203\353>\t\240\023?\273\251\320>&\033\031?\\\217\"?\356I\030?J\020\021?\213\356.?`\243\003?\250i4?\336\335=?p\2303?\314^,?\r=J?\342\361\036?*\270O?_,Y?\361\346N?L\255G?\216\213e?b@:?\254\006k?\177\261\344\275xn\033\276\nU8\276\007\270\201\275\262\010n\276:\276+\275 \327\243\273\304\3218\275\0106\226\275\014x1=\254\316\000\276\360\224\204=\2366\320=\\\026|=\020|\010=\013\230\031> \245\234\274\200\204/>UUU>\235?,>\nY\017>\010i\203>\304J\263=C_\216>\256G\241>\322\274\214>\020\223|>\014\006\272>h\337F>F\374\304>\260\344\327>\324Y\303>\213\346\264>\016\243\360>\267\014\232>I\231\373>\332@\007?\330\366\371>\217\203\353>\t\240\023?\273\251\320>&\033\031?\\\217\"?\356I\030?J\020\021?\213\356.?`\243\003?\250i4?\336\335=?p\2303?\314^,?\r=J?\342\361\036?*\270O?_,Y?\361\346N?L\255G?\216\213e?b@:?\254\006k?\177\261\344\275xn\033\276\nU8\276\007\270\201\275\262\010n\276:\276+\275 \327\243\273\304\3218\275\0106\226\275\014x1=\254\316\000\276\360\224\204=\2366\320=\\\026|=\020|\010=\013\230\031> \245\234\274\200\204/>UUU>\235?,>\nY\017>\010i\203>\304J\263=C_\216>\256G\241>\322\274\214>\020\223|>\014\006\272>h\337F>F\374\304>\260\344\327>\324Y\303>\213\346\264>\016\243\360>\267\014\232>I\231\373>\332@\007?\330\366\371>\217\203\353>\t\240\023?\273\251\320>&\033\031?\\\217\"?\356I\030?J\020\021?\213\356.?`\243\003?\250i4?\336\335=?p\2303?\314^,?\r=J?\342\361\036?*\270O?_,Y?\361\346N?L\255G?\216\213e?b@:?\254\006k?\177\261\344\275xn\033\276\nU8\276\007\270\201\275\262\010n\276:\276+\275 \327\243\273\304\3218\275\0106\226\275\014x1=\254\316\000\276\360\224\204=\2366\320=\\\026|=\020|\010=\013\230\031> \245\234\274\200\204/>UUU>\235?,>\nY\017>\010i\203>\304J\263=C_\216>\256G\241>\322\274\214>\020\223|>\014\006\272>h\337F>F\374\304>\260\344\327>\324Y\303>\213\346\264>\016\243\360>\267\014\232>I\231\373>\332@\007?\330\366\371>\217\203\353>\t\240\023?\273\251\320>&\033\031?\\\217\"?\356I\030?J\020\021?\213\356.?`\243\003?\250i4?\336\335=?p\2303?\314^,?\r=J?\342\361\036?*\270O?_,Y?\361\346N?L\255G?\216\213e?b@:?\254\006k?\177\261\344\275xn\033\276\nU8\276\007\270\201\275\262\010n\276:\276+\275 \327\243\273\304\3218\275\0106\226\275\014x1=\254\316\000\276\360\224\204=\2366\320=\\\026|=\020|\010=\013\230\031> \245\234\274\200\204/>UUU>\235?,>\nY\017>\010i\203>\304J\263=C_\216>\256G\241>\322\274\214>\020\223|>\014\006\272>h\337F>F\374\304>\260\344\327>\324Y\303>\213\346\264>\016\243\360>\267\014\232>I\231\373>\332@\007?\330\366\371>\217\203\353>\t\240\023?\273\251\320>&\033\031?\\\217\"?\356I\030?J\020\021?\213\356.?`\243\003?\250i4?\336\335=?p\2303?\314^,?\r=J?\342\361\036?*\270O?_,Y?\361\346N?L\255G?\216\213e?b@:?\254\006k?\177\261\344\275xn\033\276\nU8\276\007\270\201\275\262\010n\276:\276+\275 \327\243\273\304\3218\275\0106\226\275\014x1=\254\316\000\276\360\224\204=\2366\320=\\\026|=\020|\010=\013\230\031> \245\234\274\200\204/>UUU>\235?,>\nY\017>\010i\203>\304J\263=C_\216>\256G\241>\322\274\214>\020\223|>\014\006\272>h\337F>F\374\304>\260\344\327>\324Y\303>\213\346\264>\016\243\360>\267\014\232>I\231\373>\332@\007?\330\366\371>\217\203\353>\t\240\023?\273\251\320>&\033\031?\\\217\"?\356I\030?J\020\021?\213\356.?`\243\003?\250i4?\336\335=?p\2303?\314^,?\r=J?\342\361\036?*\270O?_,Y?\361\346N?L\255G?\216\213e?b@:?\254\006k?\177\261\344\275xn\033\276\nU8\276\007\270\201\275\262\010n\276:\276+\275 \327\243\273\304\3218\275\0106\226\275\014x1=\254\316\000\276\360\224\204=\2366\320=\\\026|=\020|\010=\013\230\031> \245\234\274\200\204/>UUU>\235?,>\nY\017>\010i\203>\304J\263=C_\216>\256G\241>\322\274\214>\020\223|>\014\006\272>h\337F>F\374\304>\260\344\327>\324Y\303>\213\346\264>\016\243\360>\267\014\232>I\231\373>\332@\007?\330\366\371>\217\203\353>\t\240\023?\273\251\320>&\033\031?\\\217\"?\356I\030?J\020\021?\213\356.?`\243\003?\250i4?\336\335=?p\2303?\314^,?\r=J?\342\361\036?*\270O?_,Y?\361\346N?L\255G?\216\213e?b@:?\254\006k?\177\261\344\275xn\033\276\nU8\276\007\270\201\275\262\010n\276:\276+\275 \327\243\273\304\3218\275\0106\226\275\014x1=\254\316\000\276\360\224\204=\2366\320=\\\026|=\020|\010=\013\230\031> \245\234\274\200\204/>UUU>\235?,>\nY\017>\010i\203>\304J\263=C_\216>\256G\241>\322\274\214>\020\223|>\014\006\272>h\337F>F\374\304>\260\344\327>\324Y\303>\213\346\264>\016\243\360>\267\014\232>I\231\373>\332@\007?\330\366\371>\217\203\353>\t\240\023?\273\251\320>&\033\031?\\\217\"?\356I\030?J\020\021?\213\356.?`\243\003?\250i4?\336\335=?p\2303?\314^,?\r=J?\342\361\036?*\270O?_,Y?\361\346N?L\255G?\216\213e?b@:?\254\006k?\177\261\344\275xn\033\276\nU8\276\007\270\201\275\262\010n\276:\276+\275 \327\243\273\304\3218\275\0106\226\275\014x1=\254\316\000\276\360\224\204=\2366\320=\\\026|=\020|\010=\013\230\031> \245\234\274\200\204/>UUU>\235?,>\nY\017>\010i\203>\304J\263=C_\216>\256G\241>\322\274\214>\020\223|>\014\006\272>h\337F>F\374\304>\260\344\327>\324Y\303>\213\346\264>\016\243\360>\267\014\232>I\231\373>\332@\007?\330\366\371>\217\203\353>\t\240\023?\273\251\320>&\033\031?\\\217\"?\356I\030?J\020\021?\213\356.?`\243\003?\250i4?\336\335=?p\2303?\314^,?\r=J?\342\361\036?*\270O?_,Y?\361\346N?L\255G?\216\213e?b@:?\254\006k?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Maximum_1"
  op: "Maximum"
  input: "bboxes_encode_block_2/while/Maximum_1/x"
  input: "bboxes_encode_block_2/while/strided_slice_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_5/stack"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_5/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_5/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_5"
  op: "StridedSlice"
  input: "bboxes_encode_block_2/while/strided_slice_2"
  input: "bboxes_encode_block_2/while/strided_slice_5/stack"
  input: "bboxes_encode_block_2/while/strided_slice_5/stack_1"
  input: "bboxes_encode_block_2/while/strided_slice_5/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Minimum/x"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\306\222_>?T\204>\n\026.>\211\307\222>\226)\030>]\241\255>\306\222_>?T\204>\n\026.>\211\307\222>\226)\030>]\241\255>\306\222_>?T\204>\n\026.>\211\307\222>\226)\030>]\241\255>\306\222_>?T\204>\n\026.>\211\307\222>\226)\030>]\241\255>\306\222_>?T\204>\n\026.>\211\307\222>\226)\030>]\241\255>\306\222_>?T\204>\n\026.>\211\307\222>\226)\030>]\241\255>\306\222_>?T\204>\n\026.>\211\307\222>\226)\030>]\241\255>\306\222_>?T\204>\n\026.>\211\307\222>\226)\030>]\241\255>\306\222_>?T\204>\n\026.>\211\307\222>\226)\030>]\241\255>\306\222_>?T\204>\n\026.>\211\307\222>\226)\030>]\241\255>ff\246>B\361\272>\010\250\215>\214d\311>\316\261\202>`>\344>ff\246>B\361\272>\010\250\215>\214d\311>\316\261\202>`>\344>ff\246>B\361\272>\010\250\215>\214d\311>\316\261\202>`>\344>ff\246>B\361\272>\010\250\215>\214d\311>\316\261\202>`>\344>ff\246>B\361\272>\010\250\215>\214d\311>\316\261\202>`>\344>ff\246>B\361\272>\010\250\215>\214d\311>\316\261\202>`>\344>ff\246>B\361\272>\010\250\215>\214d\311>\316\261\202>`>\344>ff\246>B\361\272>\010\250\215>\214d\311>\316\261\202>`>\344>ff\246>B\361\272>\010\250\215>\214d\311>\316\261\202>`>\344>ff\246>B\361\272>\010\250\215>\214d\311>\316\261\202>`>\344>j\003\335>F\216\361>\014E\304>\310\000\000?\322N\271>\262m\r?j\003\335>F\216\361>\014E\304>\310\000\000?\322N\271>\262m\r?j\003\335>F\216\361>\014E\304>\310\000\000?\322N\271>\262m\r?j\003\335>F\216\361>\014E\304>\310\000\000?\322N\271>\262m\r?j\003\335>F\216\361>\014E\304>\310\000\000?\322N\271>\262m\r?j\003\335>F\216\361>\014E\304>\310\000\000?\322N\271>\262m\r?j\003\335>F\216\361>\014E\304>\310\000\000?\322N\271>\262m\r?j\003\335>F\216\361>\014E\304>\310\000\000?\322N\271>\262m\r?j\003\335>F\216\361>\014E\304>\310\000\000?\322N\271>\262m\r?j\003\335>F\216\361>\014E\304>\310\000\000?\322N\271>\262m\r?7\320\t?\245\025\024?\020\342\372>JO\033?\325\353\357>4\274(?7\320\t?\245\025\024?\020\342\372>JO\033?\325\353\357>4\274(?7\320\t?\245\025\024?\020\342\372>JO\033?\325\353\357>4\274(?7\320\t?\245\025\024?\020\342\372>JO\033?\325\353\357>4\274(?7\320\t?\245\025\024?\020\342\372>JO\033?\325\353\357>4\274(?7\320\t?\245\025\024?\020\342\372>JO\033?\325\353\357>4\274(?7\320\t?\245\025\024?\020\342\372>JO\033?\325\353\357>4\274(?7\320\t?\245\025\024?\020\342\372>JO\033?\325\353\357>4\274(?7\320\t?\245\025\024?\020\342\372>JO\033?\325\353\357>4\274(?7\320\t?\245\025\024?\020\342\372>JO\033?\325\353\357>4\274(?\270\036%?&d/?\211\277\030?\313\2356?lD\023?\265\nD?\270\036%?&d/?\211\277\030?\313\2356?lD\023?\265\nD?\270\036%?&d/?\211\277\030?\313\2356?lD\023?\265\nD?\270\036%?&d/?\211\277\030?\313\2356?lD\023?\265\nD?\270\036%?&d/?\211\277\030?\313\2356?lD\023?\265\nD?\270\036%?&d/?\211\277\030?\313\2356?lD\023?\265\nD?\270\036%?&d/?\211\277\030?\313\2356?lD\023?\265\nD?\270\036%?&d/?\211\277\030?\313\2356?lD\023?\265\nD?\270\036%?&d/?\211\277\030?\313\2356?lD\023?\265\nD?\270\036%?&d/?\211\277\030?\313\2356?lD\023?\265\nD?:m@?\250\262J?\013\0164?L\354Q?\356\222.?6Y_?:m@?\250\262J?\013\0164?L\354Q?\356\222.?6Y_?:m@?\250\262J?\013\0164?L\354Q?\356\222.?6Y_?:m@?\250\262J?\013\0164?L\354Q?\356\222.?6Y_?:m@?\250\262J?\013\0164?L\354Q?\356\222.?6Y_?:m@?\250\262J?\013\0164?L\354Q?\356\222.?6Y_?:m@?\250\262J?\013\0164?L\354Q?\356\222.?6Y_?:m@?\250\262J?\013\0164?L\354Q?\356\222.?6Y_?:m@?\250\262J?\013\0164?L\354Q?\356\222.?6Y_?:m@?\250\262J?\013\0164?L\354Q?\356\222.?6Y_?\274\273[?*\001f?\215\\O?\316:m?p\341I?\270\247z?\274\273[?*\001f?\215\\O?\316:m?p\341I?\270\247z?\274\273[?*\001f?\215\\O?\316:m?p\341I?\270\247z?\274\273[?*\001f?\215\\O?\316:m?p\341I?\270\247z?\274\273[?*\001f?\215\\O?\316:m?p\341I?\270\247z?\274\273[?*\001f?\215\\O?\316:m?p\341I?\270\247z?\274\273[?*\001f?\215\\O?\316:m?p\341I?\270\247z?\274\273[?*\001f?\215\\O?\316:m?p\341I?\270\247z?\274\273[?*\001f?\215\\O?\316:m?p\341I?\270\247z?\274\273[?*\001f?\215\\O?\316:m?p\341I?\270\247z?>\nw?\326\247\200?\017\253j?\250D\204?\362/e?\035\373\212?>\nw?\326\247\200?\017\253j?\250D\204?\362/e?\035\373\212?>\nw?\326\247\200?\017\253j?\250D\204?\362/e?\035\373\212?>\nw?\326\247\200?\017\253j?\250D\204?\362/e?\035\373\212?>\nw?\326\247\200?\017\253j?\250D\204?\362/e?\035\373\212?>\nw?\326\247\200?\017\253j?\250D\204?\362/e?\035\373\212?>\nw?\326\247\200?\017\253j?\250D\204?\362/e?\035\373\212?>\nw?\326\247\200?\017\253j?\250D\204?\362/e?\035\373\212?>\nw?\326\247\200?\017\253j?\250D\204?\362/e?\035\373\212?>\nw?\326\247\200?\017\253j?\250D\204?\362/e?\035\373\212?`,\211?\027O\216?\310\374\202?\351\353\221?:?\200?^\242\230?`,\211?\027O\216?\310\374\202?\351\353\221?:?\200?^\242\230?`,\211?\027O\216?\310\374\202?\351\353\221?:?\200?^\242\230?`,\211?\027O\216?\310\374\202?\351\353\221?:?\200?^\242\230?`,\211?\027O\216?\310\374\202?\351\353\221?:?\200?^\242\230?`,\211?\027O\216?\310\374\202?\351\353\221?:?\200?^\242\230?`,\211?\027O\216?\310\374\202?\351\353\221?:?\200?^\242\230?`,\211?\027O\216?\310\374\202?\351\353\221?:?\200?^\242\230?`,\211?\027O\216?\310\374\202?\351\353\221?:?\200?^\242\230?`,\211?\027O\216?\310\374\202?\351\353\221?:?\200?^\242\230?\240\323\226?W\366\233?\t\244\220?*\223\237?z\346\215?\237I\246?\240\323\226?W\366\233?\t\244\220?*\223\237?z\346\215?\237I\246?\240\323\226?W\366\233?\t\244\220?*\223\237?z\346\215?\237I\246?\240\323\226?W\366\233?\t\244\220?*\223\237?z\346\215?\237I\246?\240\323\226?W\366\233?\t\244\220?*\223\237?z\346\215?\237I\246?\240\323\226?W\366\233?\t\244\220?*\223\237?z\346\215?\237I\246?\240\323\226?W\366\233?\t\244\220?*\223\237?z\346\215?\237I\246?\240\323\226?W\366\233?\t\244\220?*\223\237?z\346\215?\237I\246?\240\323\226?W\366\233?\t\244\220?*\223\237?z\346\215?\237I\246?\240\323\226?W\366\233?\t\244\220?*\223\237?z\346\215?\237I\246?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Minimum"
  op: "Minimum"
  input: "bboxes_encode_block_2/while/Minimum/x"
  input: "bboxes_encode_block_2/while/strided_slice_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_6/stack"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_6/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_6/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_6"
  op: "StridedSlice"
  input: "bboxes_encode_block_2/while/strided_slice_2"
  input: "bboxes_encode_block_2/while/strided_slice_6/stack"
  input: "bboxes_encode_block_2/while/strided_slice_6/stack_1"
  input: "bboxes_encode_block_2/while/strided_slice_6/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Minimum_1/x"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\306\222_>?T\204>\211\307\222>\n\026.>]\241\255>\226)\030>ff\246>B\361\272>\214d\311>\010\250\215>`>\344>\316\261\202>j\003\335>F\216\361>\310\000\000?\014E\304>\262m\r?\322N\271>7\320\t?\245\025\024?JO\033?\020\342\372>4\274(?\325\353\357>\270\036%?&d/?\313\2356?\211\277\030?\265\nD?lD\023?:m@?\250\262J?L\354Q?\013\0164?6Y_?\356\222.?\274\273[?*\001f?\316:m?\215\\O?\270\247z?p\341I?>\nw?\326\247\200?\250D\204?\017\253j?\035\373\212?\362/e?`,\211?\027O\216?\351\353\221?\310\374\202?^\242\230?:?\200?\240\323\226?W\366\233?*\223\237?\t\244\220?\237I\246?z\346\215?\306\222_>?T\204>\211\307\222>\n\026.>]\241\255>\226)\030>ff\246>B\361\272>\214d\311>\010\250\215>`>\344>\316\261\202>j\003\335>F\216\361>\310\000\000?\014E\304>\262m\r?\322N\271>7\320\t?\245\025\024?JO\033?\020\342\372>4\274(?\325\353\357>\270\036%?&d/?\313\2356?\211\277\030?\265\nD?lD\023?:m@?\250\262J?L\354Q?\013\0164?6Y_?\356\222.?\274\273[?*\001f?\316:m?\215\\O?\270\247z?p\341I?>\nw?\326\247\200?\250D\204?\017\253j?\035\373\212?\362/e?`,\211?\027O\216?\351\353\221?\310\374\202?^\242\230?:?\200?\240\323\226?W\366\233?*\223\237?\t\244\220?\237I\246?z\346\215?\306\222_>?T\204>\211\307\222>\n\026.>]\241\255>\226)\030>ff\246>B\361\272>\214d\311>\010\250\215>`>\344>\316\261\202>j\003\335>F\216\361>\310\000\000?\014E\304>\262m\r?\322N\271>7\320\t?\245\025\024?JO\033?\020\342\372>4\274(?\325\353\357>\270\036%?&d/?\313\2356?\211\277\030?\265\nD?lD\023?:m@?\250\262J?L\354Q?\013\0164?6Y_?\356\222.?\274\273[?*\001f?\316:m?\215\\O?\270\247z?p\341I?>\nw?\326\247\200?\250D\204?\017\253j?\035\373\212?\362/e?`,\211?\027O\216?\351\353\221?\310\374\202?^\242\230?:?\200?\240\323\226?W\366\233?*\223\237?\t\244\220?\237I\246?z\346\215?\306\222_>?T\204>\211\307\222>\n\026.>]\241\255>\226)\030>ff\246>B\361\272>\214d\311>\010\250\215>`>\344>\316\261\202>j\003\335>F\216\361>\310\000\000?\014E\304>\262m\r?\322N\271>7\320\t?\245\025\024?JO\033?\020\342\372>4\274(?\325\353\357>\270\036%?&d/?\313\2356?\211\277\030?\265\nD?lD\023?:m@?\250\262J?L\354Q?\013\0164?6Y_?\356\222.?\274\273[?*\001f?\316:m?\215\\O?\270\247z?p\341I?>\nw?\326\247\200?\250D\204?\017\253j?\035\373\212?\362/e?`,\211?\027O\216?\351\353\221?\310\374\202?^\242\230?:?\200?\240\323\226?W\366\233?*\223\237?\t\244\220?\237I\246?z\346\215?\306\222_>?T\204>\211\307\222>\n\026.>]\241\255>\226)\030>ff\246>B\361\272>\214d\311>\010\250\215>`>\344>\316\261\202>j\003\335>F\216\361>\310\000\000?\014E\304>\262m\r?\322N\271>7\320\t?\245\025\024?JO\033?\020\342\372>4\274(?\325\353\357>\270\036%?&d/?\313\2356?\211\277\030?\265\nD?lD\023?:m@?\250\262J?L\354Q?\013\0164?6Y_?\356\222.?\274\273[?*\001f?\316:m?\215\\O?\270\247z?p\341I?>\nw?\326\247\200?\250D\204?\017\253j?\035\373\212?\362/e?`,\211?\027O\216?\351\353\221?\310\374\202?^\242\230?:?\200?\240\323\226?W\366\233?*\223\237?\t\244\220?\237I\246?z\346\215?\306\222_>?T\204>\211\307\222>\n\026.>]\241\255>\226)\030>ff\246>B\361\272>\214d\311>\010\250\215>`>\344>\316\261\202>j\003\335>F\216\361>\310\000\000?\014E\304>\262m\r?\322N\271>7\320\t?\245\025\024?JO\033?\020\342\372>4\274(?\325\353\357>\270\036%?&d/?\313\2356?\211\277\030?\265\nD?lD\023?:m@?\250\262J?L\354Q?\013\0164?6Y_?\356\222.?\274\273[?*\001f?\316:m?\215\\O?\270\247z?p\341I?>\nw?\326\247\200?\250D\204?\017\253j?\035\373\212?\362/e?`,\211?\027O\216?\351\353\221?\310\374\202?^\242\230?:?\200?\240\323\226?W\366\233?*\223\237?\t\244\220?\237I\246?z\346\215?\306\222_>?T\204>\211\307\222>\n\026.>]\241\255>\226)\030>ff\246>B\361\272>\214d\311>\010\250\215>`>\344>\316\261\202>j\003\335>F\216\361>\310\000\000?\014E\304>\262m\r?\322N\271>7\320\t?\245\025\024?JO\033?\020\342\372>4\274(?\325\353\357>\270\036%?&d/?\313\2356?\211\277\030?\265\nD?lD\023?:m@?\250\262J?L\354Q?\013\0164?6Y_?\356\222.?\274\273[?*\001f?\316:m?\215\\O?\270\247z?p\341I?>\nw?\326\247\200?\250D\204?\017\253j?\035\373\212?\362/e?`,\211?\027O\216?\351\353\221?\310\374\202?^\242\230?:?\200?\240\323\226?W\366\233?*\223\237?\t\244\220?\237I\246?z\346\215?\306\222_>?T\204>\211\307\222>\n\026.>]\241\255>\226)\030>ff\246>B\361\272>\214d\311>\010\250\215>`>\344>\316\261\202>j\003\335>F\216\361>\310\000\000?\014E\304>\262m\r?\322N\271>7\320\t?\245\025\024?JO\033?\020\342\372>4\274(?\325\353\357>\270\036%?&d/?\313\2356?\211\277\030?\265\nD?lD\023?:m@?\250\262J?L\354Q?\013\0164?6Y_?\356\222.?\274\273[?*\001f?\316:m?\215\\O?\270\247z?p\341I?>\nw?\326\247\200?\250D\204?\017\253j?\035\373\212?\362/e?`,\211?\027O\216?\351\353\221?\310\374\202?^\242\230?:?\200?\240\323\226?W\366\233?*\223\237?\t\244\220?\237I\246?z\346\215?\306\222_>?T\204>\211\307\222>\n\026.>]\241\255>\226)\030>ff\246>B\361\272>\214d\311>\010\250\215>`>\344>\316\261\202>j\003\335>F\216\361>\310\000\000?\014E\304>\262m\r?\322N\271>7\320\t?\245\025\024?JO\033?\020\342\372>4\274(?\325\353\357>\270\036%?&d/?\313\2356?\211\277\030?\265\nD?lD\023?:m@?\250\262J?L\354Q?\013\0164?6Y_?\356\222.?\274\273[?*\001f?\316:m?\215\\O?\270\247z?p\341I?>\nw?\326\247\200?\250D\204?\017\253j?\035\373\212?\362/e?`,\211?\027O\216?\351\353\221?\310\374\202?^\242\230?:?\200?\240\323\226?W\366\233?*\223\237?\t\244\220?\237I\246?z\346\215?\306\222_>?T\204>\211\307\222>\n\026.>]\241\255>\226)\030>ff\246>B\361\272>\214d\311>\010\250\215>`>\344>\316\261\202>j\003\335>F\216\361>\310\000\000?\014E\304>\262m\r?\322N\271>7\320\t?\245\025\024?JO\033?\020\342\372>4\274(?\325\353\357>\270\036%?&d/?\313\2356?\211\277\030?\265\nD?lD\023?:m@?\250\262J?L\354Q?\013\0164?6Y_?\356\222.?\274\273[?*\001f?\316:m?\215\\O?\270\247z?p\341I?>\nw?\326\247\200?\250D\204?\017\253j?\035\373\212?\362/e?`,\211?\027O\216?\351\353\221?\310\374\202?^\242\230?:?\200?\240\323\226?W\366\233?*\223\237?\t\244\220?\237I\246?z\346\215?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Minimum_1"
  op: "Minimum"
  input: "bboxes_encode_block_2/while/Minimum_1/x"
  input: "bboxes_encode_block_2/while/strided_slice_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub"
  op: "Sub"
  input: "bboxes_encode_block_2/while/Minimum"
  input: "bboxes_encode_block_2/while/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Maximum_2/y"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Maximum_2"
  op: "Maximum"
  input: "bboxes_encode_block_2/while/sub"
  input: "bboxes_encode_block_2/while/Maximum_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub_1"
  op: "Sub"
  input: "bboxes_encode_block_2/while/Minimum_1"
  input: "bboxes_encode_block_2/while/Maximum_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Maximum_3/y"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Maximum_3"
  op: "Maximum"
  input: "bboxes_encode_block_2/while/sub_1"
  input: "bboxes_encode_block_2/while/Maximum_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/mul"
  op: "Mul"
  input: "bboxes_encode_block_2/while/Maximum_2"
  input: "bboxes_encode_block_2/while/Maximum_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub_2/x"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub_2"
  op: "Sub"
  input: "bboxes_encode_block_2/while/sub_2/x"
  input: "bboxes_encode_block_2/while/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_7/stack"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_7/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_7/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_7"
  op: "StridedSlice"
  input: "bboxes_encode_block_2/while/strided_slice_2"
  input: "bboxes_encode_block_2/while/strided_slice_7/stack"
  input: "bboxes_encode_block_2/while/strided_slice_7/stack_1"
  input: "bboxes_encode_block_2/while/strided_slice_7/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_8/stack"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_8/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_8/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_8"
  op: "StridedSlice"
  input: "bboxes_encode_block_2/while/strided_slice_2"
  input: "bboxes_encode_block_2/while/strided_slice_8/stack"
  input: "bboxes_encode_block_2/while/strided_slice_8/stack_1"
  input: "bboxes_encode_block_2/while/strided_slice_8/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub_3"
  op: "Sub"
  input: "bboxes_encode_block_2/while/strided_slice_7"
  input: "bboxes_encode_block_2/while/strided_slice_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_9/stack"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_9/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_9/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_9"
  op: "StridedSlice"
  input: "bboxes_encode_block_2/while/strided_slice_2"
  input: "bboxes_encode_block_2/while/strided_slice_9/stack"
  input: "bboxes_encode_block_2/while/strided_slice_9/stack_1"
  input: "bboxes_encode_block_2/while/strided_slice_9/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_10/stack"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_10/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_10/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_10"
  op: "StridedSlice"
  input: "bboxes_encode_block_2/while/strided_slice_2"
  input: "bboxes_encode_block_2/while/strided_slice_10/stack"
  input: "bboxes_encode_block_2/while/strided_slice_10/stack_1"
  input: "bboxes_encode_block_2/while/strided_slice_10/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub_4"
  op: "Sub"
  input: "bboxes_encode_block_2/while/strided_slice_9"
  input: "bboxes_encode_block_2/while/strided_slice_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/mul_1"
  op: "Mul"
  input: "bboxes_encode_block_2/while/sub_3"
  input: "bboxes_encode_block_2/while/sub_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/add_2"
  op: "Add"
  input: "bboxes_encode_block_2/while/sub_2"
  input: "bboxes_encode_block_2/while/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/div"
  op: "RealDiv"
  input: "bboxes_encode_block_2/while/mul"
  input: "bboxes_encode_block_2/while/add_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Greater"
  op: "Greater"
  input: "bboxes_encode_block_2/while/div"
  input: "bboxes_encode_block_2/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Greater_1/y"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Greater_1"
  op: "Greater"
  input: "bboxes_encode_block_2/while/Identity_2"
  input: "bboxes_encode_block_2/while/Greater_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/LogicalAnd"
  op: "LogicalAnd"
  input: "bboxes_encode_block_2/while/Greater"
  input: "bboxes_encode_block_2/while/Greater_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Less_1/y"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Less_1"
  op: "Less"
  input: "bboxes_encode_block_2/while/strided_slice_1"
  input: "bboxes_encode_block_2/while/Less_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/LogicalAnd_1"
  op: "LogicalAnd"
  input: "bboxes_encode_block_2/while/LogicalAnd"
  input: "bboxes_encode_block_2/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Cast"
  op: "Cast"
  input: "bboxes_encode_block_2/while/LogicalAnd_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Cast_1"
  op: "Cast"
  input: "bboxes_encode_block_2/while/LogicalAnd_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/mul_2"
  op: "Mul"
  input: "bboxes_encode_block_2/while/Cast"
  input: "bboxes_encode_block_2/while/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub_5/x"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub_5"
  op: "Sub"
  input: "bboxes_encode_block_2/while/sub_5/x"
  input: "bboxes_encode_block_2/while/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/mul_3"
  op: "Mul"
  input: "bboxes_encode_block_2/while/sub_5"
  input: "bboxes_encode_block_2/while/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/add_3"
  op: "Add"
  input: "bboxes_encode_block_2/while/mul_2"
  input: "bboxes_encode_block_2/while/mul_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Select"
  op: "Select"
  input: "bboxes_encode_block_2/while/LogicalAnd_1"
  input: "bboxes_encode_block_2/while/div"
  input: "bboxes_encode_block_2/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_11/stack"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_11/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_11/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_11"
  op: "StridedSlice"
  input: "bboxes_encode_block_2/while/strided_slice_2"
  input: "bboxes_encode_block_2/while/strided_slice_11/stack"
  input: "bboxes_encode_block_2/while/strided_slice_11/stack_1"
  input: "bboxes_encode_block_2/while/strided_slice_11/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/mul_4"
  op: "Mul"
  input: "bboxes_encode_block_2/while/Cast_1"
  input: "bboxes_encode_block_2/while/strided_slice_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub_6/x"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub_6"
  op: "Sub"
  input: "bboxes_encode_block_2/while/sub_6/x"
  input: "bboxes_encode_block_2/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/mul_5"
  op: "Mul"
  input: "bboxes_encode_block_2/while/sub_6"
  input: "bboxes_encode_block_2/while/Identity_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/add_4"
  op: "Add"
  input: "bboxes_encode_block_2/while/mul_4"
  input: "bboxes_encode_block_2/while/mul_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_12/stack"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_12/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_12/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_12"
  op: "StridedSlice"
  input: "bboxes_encode_block_2/while/strided_slice_2"
  input: "bboxes_encode_block_2/while/strided_slice_12/stack"
  input: "bboxes_encode_block_2/while/strided_slice_12/stack_1"
  input: "bboxes_encode_block_2/while/strided_slice_12/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/mul_6"
  op: "Mul"
  input: "bboxes_encode_block_2/while/Cast_1"
  input: "bboxes_encode_block_2/while/strided_slice_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub_7/x"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub_7"
  op: "Sub"
  input: "bboxes_encode_block_2/while/sub_7/x"
  input: "bboxes_encode_block_2/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/mul_7"
  op: "Mul"
  input: "bboxes_encode_block_2/while/sub_7"
  input: "bboxes_encode_block_2/while/Identity_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/add_5"
  op: "Add"
  input: "bboxes_encode_block_2/while/mul_6"
  input: "bboxes_encode_block_2/while/mul_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_13/stack"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_13/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_13/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_13"
  op: "StridedSlice"
  input: "bboxes_encode_block_2/while/strided_slice_2"
  input: "bboxes_encode_block_2/while/strided_slice_13/stack"
  input: "bboxes_encode_block_2/while/strided_slice_13/stack_1"
  input: "bboxes_encode_block_2/while/strided_slice_13/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/mul_8"
  op: "Mul"
  input: "bboxes_encode_block_2/while/Cast_1"
  input: "bboxes_encode_block_2/while/strided_slice_13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub_8/x"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub_8"
  op: "Sub"
  input: "bboxes_encode_block_2/while/sub_8/x"
  input: "bboxes_encode_block_2/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/mul_9"
  op: "Mul"
  input: "bboxes_encode_block_2/while/sub_8"
  input: "bboxes_encode_block_2/while/Identity_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/add_6"
  op: "Add"
  input: "bboxes_encode_block_2/while/mul_8"
  input: "bboxes_encode_block_2/while/mul_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_14/stack"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_14/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_14/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/strided_slice_14"
  op: "StridedSlice"
  input: "bboxes_encode_block_2/while/strided_slice_2"
  input: "bboxes_encode_block_2/while/strided_slice_14/stack"
  input: "bboxes_encode_block_2/while/strided_slice_14/stack_1"
  input: "bboxes_encode_block_2/while/strided_slice_14/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/mul_10"
  op: "Mul"
  input: "bboxes_encode_block_2/while/Cast_1"
  input: "bboxes_encode_block_2/while/strided_slice_14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub_9/x"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/sub_9"
  op: "Sub"
  input: "bboxes_encode_block_2/while/sub_9/x"
  input: "bboxes_encode_block_2/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/mul_11"
  op: "Mul"
  input: "bboxes_encode_block_2/while/sub_9"
  input: "bboxes_encode_block_2/while/Identity_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/add_7"
  op: "Add"
  input: "bboxes_encode_block_2/while/mul_10"
  input: "bboxes_encode_block_2/while/mul_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/add_8/y"
  op: "Const"
  input: "^bboxes_encode_block_2/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/add_8"
  op: "Add"
  input: "bboxes_encode_block_2/while/Identity"
  input: "bboxes_encode_block_2/while/add_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/NextIteration"
  op: "NextIteration"
  input: "bboxes_encode_block_2/while/add_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/NextIteration_1"
  op: "NextIteration"
  input: "bboxes_encode_block_2/while/add_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/NextIteration_2"
  op: "NextIteration"
  input: "bboxes_encode_block_2/while/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/NextIteration_3"
  op: "NextIteration"
  input: "bboxes_encode_block_2/while/add_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/NextIteration_4"
  op: "NextIteration"
  input: "bboxes_encode_block_2/while/add_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/NextIteration_5"
  op: "NextIteration"
  input: "bboxes_encode_block_2/while/add_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/NextIteration_6"
  op: "NextIteration"
  input: "bboxes_encode_block_2/while/add_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Exit"
  op: "Exit"
  input: "bboxes_encode_block_2/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Exit_1"
  op: "Exit"
  input: "bboxes_encode_block_2/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Exit_2"
  op: "Exit"
  input: "bboxes_encode_block_2/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Exit_3"
  op: "Exit"
  input: "bboxes_encode_block_2/while/Switch_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Exit_4"
  op: "Exit"
  input: "bboxes_encode_block_2/while/Switch_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Exit_5"
  op: "Exit"
  input: "bboxes_encode_block_2/while/Switch_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/while/Exit_6"
  op: "Exit"
  input: "bboxes_encode_block_2/while/Switch_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/add"
  op: "Add"
  input: "bboxes_encode_block_2/while/Exit_5"
  input: "bboxes_encode_block_2/while/Exit_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv"
  op: "RealDiv"
  input: "bboxes_encode_block_2/add"
  input: "bboxes_encode_block_2/truediv/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/add_1"
  op: "Add"
  input: "bboxes_encode_block_2/while/Exit_6"
  input: "bboxes_encode_block_2/while/Exit_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_1"
  op: "RealDiv"
  input: "bboxes_encode_block_2/add_1"
  input: "bboxes_encode_block_2/truediv_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/sub"
  op: "Sub"
  input: "bboxes_encode_block_2/while/Exit_5"
  input: "bboxes_encode_block_2/while/Exit_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/sub_1"
  op: "Sub"
  input: "bboxes_encode_block_2/while/Exit_6"
  input: "bboxes_encode_block_2/while/Exit_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/sub_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\016tZ=\016tZ=\016tZ=\016tZ=\016tZ=\016tZ=\016tZ=\016tZ=\016tZ=\016tZ=\n\327#>\n\327#>\n\327#>\n\327#>\n\327#>\n\327#>\n\327#>\n\327#>\n\327#>\n\327#>\211\210\210>\211\210\210>\211\210\210>\211\210\210>\211\210\210>\211\210\210>\211\210\210>\211\210\210>\211\210\210>\211\210\210>\214%\277>\214%\277>\214%\277>\214%\277>\214%\277>\214%\277>\214%\277>\214%\277>\214%\277>\214%\277>\217\302\365>\217\302\365>\217\302\365>\217\302\365>\217\302\365>\217\302\365>\217\302\365>\217\302\365>\217\302\365>\217\302\365>\311/\026?\311/\026?\311/\026?\311/\026?\311/\026?\311/\026?\311/\026?\311/\026?\311/\026?\311/\026?K~1?K~1?K~1?K~1?K~1?K~1?K~1?K~1?K~1?K~1?\315\314L?\315\314L?\315\314L?\315\314L?\315\314L?\315\314L?\315\314L?\315\314L?\315\314L?\315\314L?O\033h?O\033h?O\033h?O\033h?O\033h?O\033h?O\033h?O\033h?O\033h?O\033h?\350\264\201?\350\264\201?\350\264\201?\350\264\201?\350\264\201?\350\264\201?\350\264\201?\350\264\201?\350\264\201?\350\264\201?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/sub_2"
  op: "Sub"
  input: "bboxes_encode_block_2/truediv"
  input: "bboxes_encode_block_2/sub_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\303\365\250>{\013\322>\016\362n>\016\362\356>$\031C>\333R\022?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_2"
  op: "RealDiv"
  input: "bboxes_encode_block_2/sub_2"
  input: "bboxes_encode_block_2/truediv_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_3"
  op: "RealDiv"
  input: "bboxes_encode_block_2/truediv_2"
  input: "bboxes_encode_block_2/truediv_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/sub_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\016tZ=\n\327#>\211\210\210>\214%\277>\217\302\365>\311/\026?K~1?\315\314L?O\033h?\350\264\201?\016tZ=\n\327#>\211\210\210>\214%\277>\217\302\365>\311/\026?K~1?\315\314L?O\033h?\350\264\201?\016tZ=\n\327#>\211\210\210>\214%\277>\217\302\365>\311/\026?K~1?\315\314L?O\033h?\350\264\201?\016tZ=\n\327#>\211\210\210>\214%\277>\217\302\365>\311/\026?K~1?\315\314L?O\033h?\350\264\201?\016tZ=\n\327#>\211\210\210>\214%\277>\217\302\365>\311/\026?K~1?\315\314L?O\033h?\350\264\201?\016tZ=\n\327#>\211\210\210>\214%\277>\217\302\365>\311/\026?K~1?\315\314L?O\033h?\350\264\201?\016tZ=\n\327#>\211\210\210>\214%\277>\217\302\365>\311/\026?K~1?\315\314L?O\033h?\350\264\201?\016tZ=\n\327#>\211\210\210>\214%\277>\217\302\365>\311/\026?K~1?\315\314L?O\033h?\350\264\201?\016tZ=\n\327#>\211\210\210>\214%\277>\217\302\365>\311/\026?K~1?\315\314L?O\033h?\350\264\201?\016tZ=\n\327#>\211\210\210>\214%\277>\217\302\365>\311/\026?K~1?\315\314L?O\033h?\350\264\201?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/sub_3"
  op: "Sub"
  input: "bboxes_encode_block_2/truediv_1"
  input: "bboxes_encode_block_2/sub_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_4/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\303\365\250>{\013\322>\016\362\356>\016\362n>\333R\022?$\031C>"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_4"
  op: "RealDiv"
  input: "bboxes_encode_block_2/sub_3"
  input: "bboxes_encode_block_2/truediv_4/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_5/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_5"
  op: "RealDiv"
  input: "bboxes_encode_block_2/truediv_4"
  input: "bboxes_encode_block_2/truediv_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_6/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\303\365\250>{\013\322>\016\362n>\016\362\356>$\031C>\333R\022?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_6"
  op: "RealDiv"
  input: "bboxes_encode_block_2/sub"
  input: "bboxes_encode_block_2/truediv_6/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/Log"
  op: "Log"
  input: "bboxes_encode_block_2/truediv_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_7/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_7"
  op: "RealDiv"
  input: "bboxes_encode_block_2/Log"
  input: "bboxes_encode_block_2/truediv_7/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_8/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\303\365\250>{\013\322>\016\362\356>\016\362n>\333R\022?$\031C>"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_8"
  op: "RealDiv"
  input: "bboxes_encode_block_2/sub_1"
  input: "bboxes_encode_block_2/truediv_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/Log_1"
  op: "Log"
  input: "bboxes_encode_block_2/truediv_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_9/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/truediv_9"
  op: "RealDiv"
  input: "bboxes_encode_block_2/Log_1"
  input: "bboxes_encode_block_2/truediv_9/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_2/stack"
  op: "Pack"
  input: "bboxes_encode_block_2/truediv_5"
  input: "bboxes_encode_block_2/truediv_3"
  input: "bboxes_encode_block_2/truediv_9"
  input: "bboxes_encode_block_2/truediv_7"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "bboxes_encode_block_3/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/zeros_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/zeros_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/zeros_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/ones"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/ones_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Enter"
  op: "Enter"
  input: "bboxes_encode_block_3/while/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Enter_1"
  op: "Enter"
  input: "bboxes_encode_block_3/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Enter_2"
  op: "Enter"
  input: "bboxes_encode_block_3/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Enter_3"
  op: "Enter"
  input: "bboxes_encode_block_3/zeros_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Enter_4"
  op: "Enter"
  input: "bboxes_encode_block_3/zeros_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Enter_5"
  op: "Enter"
  input: "bboxes_encode_block_3/ones"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Enter_6"
  op: "Enter"
  input: "bboxes_encode_block_3/ones_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Merge"
  op: "Merge"
  input: "bboxes_encode_block_3/while/Enter"
  input: "bboxes_encode_block_3/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Merge_1"
  op: "Merge"
  input: "bboxes_encode_block_3/while/Enter_1"
  input: "bboxes_encode_block_3/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Merge_2"
  op: "Merge"
  input: "bboxes_encode_block_3/while/Enter_2"
  input: "bboxes_encode_block_3/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Merge_3"
  op: "Merge"
  input: "bboxes_encode_block_3/while/Enter_3"
  input: "bboxes_encode_block_3/while/NextIteration_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Merge_4"
  op: "Merge"
  input: "bboxes_encode_block_3/while/Enter_4"
  input: "bboxes_encode_block_3/while/NextIteration_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Merge_5"
  op: "Merge"
  input: "bboxes_encode_block_3/while/Enter_5"
  input: "bboxes_encode_block_3/while/NextIteration_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Merge_6"
  op: "Merge"
  input: "bboxes_encode_block_3/while/Enter_6"
  input: "bboxes_encode_block_3/while/NextIteration_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Shape"
  op: "Shape"
  input: "bboxes_encode_block_3/while/Shape/Enter"
  input: "^bboxes_encode_block_3/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Shape/Enter"
  op: "Enter"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/GatherV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Less"
  op: "Less"
  input: "bboxes_encode_block_3/while/Merge"
  input: "bboxes_encode_block_3/while/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice/stack"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice"
  op: "StridedSlice"
  input: "bboxes_encode_block_3/while/Less"
  input: "bboxes_encode_block_3/while/strided_slice/stack"
  input: "bboxes_encode_block_3/while/strided_slice/stack_1"
  input: "bboxes_encode_block_3/while/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/LoopCond"
  op: "LoopCond"
  input: "bboxes_encode_block_3/while/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Switch"
  op: "Switch"
  input: "bboxes_encode_block_3/while/Merge"
  input: "bboxes_encode_block_3/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_3/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Switch_1"
  op: "Switch"
  input: "bboxes_encode_block_3/while/Merge_1"
  input: "bboxes_encode_block_3/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_3/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Switch_2"
  op: "Switch"
  input: "bboxes_encode_block_3/while/Merge_2"
  input: "bboxes_encode_block_3/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_3/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Switch_3"
  op: "Switch"
  input: "bboxes_encode_block_3/while/Merge_3"
  input: "bboxes_encode_block_3/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_3/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Switch_4"
  op: "Switch"
  input: "bboxes_encode_block_3/while/Merge_4"
  input: "bboxes_encode_block_3/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_3/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Switch_5"
  op: "Switch"
  input: "bboxes_encode_block_3/while/Merge_5"
  input: "bboxes_encode_block_3/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_3/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Switch_6"
  op: "Switch"
  input: "bboxes_encode_block_3/while/Merge_6"
  input: "bboxes_encode_block_3/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_3/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Identity"
  op: "Identity"
  input: "bboxes_encode_block_3/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Identity_1"
  op: "Identity"
  input: "bboxes_encode_block_3/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Identity_2"
  op: "Identity"
  input: "bboxes_encode_block_3/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Identity_3"
  op: "Identity"
  input: "bboxes_encode_block_3/while/Switch_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Identity_4"
  op: "Identity"
  input: "bboxes_encode_block_3/while/Switch_4:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Identity_5"
  op: "Identity"
  input: "bboxes_encode_block_3/while/Switch_5:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Identity_6"
  op: "Identity"
  input: "bboxes_encode_block_3/while/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/add/y"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/add"
  op: "Add"
  input: "bboxes_encode_block_3/while/Identity"
  input: "bboxes_encode_block_3/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_1/stack"
  op: "Pack"
  input: "bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_1/stack_1"
  op: "Pack"
  input: "bboxes_encode_block_3/while/add"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_1/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_1"
  op: "StridedSlice"
  input: "bboxes_encode_block_3/while/Shape/Enter"
  input: "bboxes_encode_block_3/while/strided_slice_1/stack"
  input: "bboxes_encode_block_3/while/strided_slice_1/stack_1"
  input: "bboxes_encode_block_3/while/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/add_1/y"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/add_1"
  op: "Add"
  input: "bboxes_encode_block_3/while/Identity"
  input: "bboxes_encode_block_3/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_2/stack"
  op: "Pack"
  input: "bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_2/stack_1"
  op: "Pack"
  input: "bboxes_encode_block_3/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_2/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_2"
  op: "StridedSlice"
  input: "bboxes_encode_block_3/while/strided_slice_2/Enter"
  input: "bboxes_encode_block_3/while/strided_slice_2/stack"
  input: "bboxes_encode_block_3/while/strided_slice_2/stack_1"
  input: "bboxes_encode_block_3/while/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_2/Enter"
  op: "Enter"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_3/stack"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_3/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_3/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_3"
  op: "StridedSlice"
  input: "bboxes_encode_block_3/while/strided_slice_2"
  input: "bboxes_encode_block_3/while/strided_slice_3/stack"
  input: "bboxes_encode_block_3/while/strided_slice_3/stack_1"
  input: "bboxes_encode_block_3/while/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Maximum/x"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\261\344\027\276g\177B\276|\323\226\275\302\006\202\276\310\037&\275\362\205\253\276\261\344\027\276g\177B\276|\323\226\275\302\006\202\276\310\037&\275\362\205\253\276\261\344\027\276g\177B\276|\323\226\275\302\006\202\276\310\037&\275\362\205\253\276\261\344\027\276g\177B\276|\323\226\275\302\006\202\276\310\037&\275\362\205\253\276\261\344\027\276g\177B\276|\323\226\275\302\006\202\276\310\037&\275\362\205\253\276\270\036\205=0\245\277<O\n\017>\330e&\275\033\3540>\254/\371\275\270\036\205=0\245\277<O\n\017>\330e&\275\033\3540>\254/\371\275\270\036\205=0\245\277<O\n\017>\330e&\275\033\3540>\254/\371\275\270\036\205=0\245\277<O\n\017>\330e&\275\033\3540>\254/\371\275\270\036\205=0\245\277<O\n\017>\330e&\275\033\3540>\254/\371\275\266\201\216>\266hr>0\277\264>\232\3320>\026\260\305>t\270\273=\266\201\216>\266hr>0\277\264>\232\3320>\026\260\305>t\270\273=\266\201\216>\266hr>0\277\264>\232\3320>\026\260\305>t\270\273=\266\201\216>\266hr>0\277\264>\232\3320>\026\260\305>t\270\273=\266\201\216>\266hr>0\277\264>\232\3320>\026\260\305>t\270\273=\274\273\373>an\346>\233\374\020?S\247\305>\016u\031?#(\234>\274\273\373>an\346>\233\374\020?S\247\305>\016u\031?#(\234>\274\273\373>an\346>\233\374\020?S\247\305>\016u\031?#(\234>\274\273\373>an\346>\233\374\020?S\247\305>\016u\031?#(\234>\274\273\373>an\346>\233\374\020?S\247\305>\016u\031?#(\234>\341z4?4\324)?\236\231G?\254p\031?\021\022P?\024\261\004?\341z4?4\324)?\236\231G?\254p\031?\021\022P?\024\261\004?\341z4?4\324)?\236\231G?\254p\031?\021\022P?\024\261\004?\341z4?4\324)?\236\231G?\254p\031?\021\022P?\024\261\004?\341z4?4\324)?\236\231G?\254p\031?\021\022P?\024\261\004?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Maximum"
  op: "Maximum"
  input: "bboxes_encode_block_3/while/Maximum/x"
  input: "bboxes_encode_block_3/while/strided_slice_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_4/stack"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_4/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_4/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_4"
  op: "StridedSlice"
  input: "bboxes_encode_block_3/while/strided_slice_2"
  input: "bboxes_encode_block_3/while/strided_slice_4/stack"
  input: "bboxes_encode_block_3/while/strided_slice_4/stack_1"
  input: "bboxes_encode_block_3/while/strided_slice_4/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Maximum_1/x"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\261\344\027\276g\177B\276\302\006\202\276|\323\226\275\362\205\253\276\310\037&\275\270\036\205=0\245\277<\330e&\275O\n\017>\254/\371\275\033\3540>\266\201\216>\266hr>\232\3320>0\277\264>t\270\273=\026\260\305>\274\273\373>an\346>S\247\305>\233\374\020?#(\234>\016u\031?\341z4?4\324)?\254p\031?\236\231G?\024\261\004?\021\022P?\261\344\027\276g\177B\276\302\006\202\276|\323\226\275\362\205\253\276\310\037&\275\270\036\205=0\245\277<\330e&\275O\n\017>\254/\371\275\033\3540>\266\201\216>\266hr>\232\3320>0\277\264>t\270\273=\026\260\305>\274\273\373>an\346>S\247\305>\233\374\020?#(\234>\016u\031?\341z4?4\324)?\254p\031?\236\231G?\024\261\004?\021\022P?\261\344\027\276g\177B\276\302\006\202\276|\323\226\275\362\205\253\276\310\037&\275\270\036\205=0\245\277<\330e&\275O\n\017>\254/\371\275\033\3540>\266\201\216>\266hr>\232\3320>0\277\264>t\270\273=\026\260\305>\274\273\373>an\346>S\247\305>\233\374\020?#(\234>\016u\031?\341z4?4\324)?\254p\031?\236\231G?\024\261\004?\021\022P?\261\344\027\276g\177B\276\302\006\202\276|\323\226\275\362\205\253\276\310\037&\275\270\036\205=0\245\277<\330e&\275O\n\017>\254/\371\275\033\3540>\266\201\216>\266hr>\232\3320>0\277\264>t\270\273=\026\260\305>\274\273\373>an\346>S\247\305>\233\374\020?#(\234>\016u\031?\341z4?4\324)?\254p\031?\236\231G?\024\261\004?\021\022P?\261\344\027\276g\177B\276\302\006\202\276|\323\226\275\362\205\253\276\310\037&\275\270\036\205=0\245\277<\330e&\275O\n\017>\254/\371\275\033\3540>\266\201\216>\266hr>\232\3320>0\277\264>t\270\273=\026\260\305>\274\273\373>an\346>S\247\305>\233\374\020?#(\234>\016u\031?\341z4?4\324)?\254p\031?\236\231G?\024\261\004?\021\022P?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Maximum_1"
  op: "Maximum"
  input: "bboxes_encode_block_3/while/Maximum_1/x"
  input: "bboxes_encode_block_3/while/strided_slice_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_5/stack"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_5/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_5/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_5"
  op: "StridedSlice"
  input: "bboxes_encode_block_3/while/strided_slice_2"
  input: "bboxes_encode_block_3/while/strided_slice_5/stack"
  input: "bboxes_encode_block_3/while/strided_slice_5/stack_1"
  input: "bboxes_encode_block_3/while/strided_slice_5/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Minimum/x"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        tensor_content: "`,\271>\272y\316>\346\356\222>\310@\357>\000\376\201>\374_\014?`,\271>\272y\316>\346\356\222>\310@\357>\000\376\201>\374_\014?`,\271>\272y\316>\346\356\222>\310@\357>\000\376\201>\374_\014?`,\271>\272y\316>\346\356\222>\310@\357>\000\376\201>\374_\014?`,\271>\272y\316>\346\356\222>\310@\357>\000\376\201>\374_\014?33\023?\340\331\035?v\024\000?h=.?\0068\357>\000\375B?33\023?\340\331\035?v\024\000?h=.?\0068\357>\000\375B?33\023?\340\331\035?v\024\000?h=.?\0068\357>\000\375B?33\023?\340\331\035?v\024\000?h=.?\0068\357>\000\375B?33\023?\340\331\035?v\024\000?h=.?\0068\357>\000\375B?7\320I?\344vT?z\2616?l\332d?\0079.?\004\232y?7\320I?\344vT?z\2616?l\332d?\0079.?\004\232y?7\320I?\344vT?z\2616?l\332d?\0079.?\004\232y?7\320I?\344vT?z\2616?l\332d?\0079.?\004\232y?7\320I?\344vT?z\2616?l\332d?\0079.?\004\232y?\2356\200?\364\211\205?}Nm?\267\273\215?\n\326d?\203\033\230?\2356\200?\364\211\205?}Nm?\267\273\215?\n\326d?\203\033\230?\2356\200?\364\211\205?}Nm?\267\273\215?\n\326d?\203\033\230?\2356\200?\364\211\205?}Nm?\267\273\215?\n\326d?\203\033\230?\2356\200?\364\211\205?}Nm?\267\273\215?\n\326d?\203\033\230?\036\205\233?u\330\240?\300\365\221?9\n\251?\207\271\215?\005j\263?\036\205\233?u\330\240?\300\365\221?9\n\251?\207\271\215?\005j\263?\036\205\233?u\330\240?\300\365\221?9\n\251?\207\271\215?\005j\263?\036\205\233?u\330\240?\300\365\221?9\n\251?\207\271\215?\005j\263?\036\205\233?u\330\240?\300\365\221?9\n\251?\207\271\215?\005j\263?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Minimum"
  op: "Minimum"
  input: "bboxes_encode_block_3/while/Minimum/x"
  input: "bboxes_encode_block_3/while/strided_slice_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_6/stack"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_6/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_6/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_6"
  op: "StridedSlice"
  input: "bboxes_encode_block_3/while/strided_slice_2"
  input: "bboxes_encode_block_3/while/strided_slice_6/stack"
  input: "bboxes_encode_block_3/while/strided_slice_6/stack_1"
  input: "bboxes_encode_block_3/while/strided_slice_6/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Minimum_1/x"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        tensor_content: "`,\271>\272y\316>\310@\357>\346\356\222>\374_\014?\000\376\201>33\023?\340\331\035?h=.?v\024\000?\000\375B?\0068\357>7\320I?\344vT?l\332d?z\2616?\004\232y?\0079.?\2356\200?\364\211\205?\267\273\215?}Nm?\203\033\230?\n\326d?\036\205\233?u\330\240?9\n\251?\300\365\221?\005j\263?\207\271\215?`,\271>\272y\316>\310@\357>\346\356\222>\374_\014?\000\376\201>33\023?\340\331\035?h=.?v\024\000?\000\375B?\0068\357>7\320I?\344vT?l\332d?z\2616?\004\232y?\0079.?\2356\200?\364\211\205?\267\273\215?}Nm?\203\033\230?\n\326d?\036\205\233?u\330\240?9\n\251?\300\365\221?\005j\263?\207\271\215?`,\271>\272y\316>\310@\357>\346\356\222>\374_\014?\000\376\201>33\023?\340\331\035?h=.?v\024\000?\000\375B?\0068\357>7\320I?\344vT?l\332d?z\2616?\004\232y?\0079.?\2356\200?\364\211\205?\267\273\215?}Nm?\203\033\230?\n\326d?\036\205\233?u\330\240?9\n\251?\300\365\221?\005j\263?\207\271\215?`,\271>\272y\316>\310@\357>\346\356\222>\374_\014?\000\376\201>33\023?\340\331\035?h=.?v\024\000?\000\375B?\0068\357>7\320I?\344vT?l\332d?z\2616?\004\232y?\0079.?\2356\200?\364\211\205?\267\273\215?}Nm?\203\033\230?\n\326d?\036\205\233?u\330\240?9\n\251?\300\365\221?\005j\263?\207\271\215?`,\271>\272y\316>\310@\357>\346\356\222>\374_\014?\000\376\201>33\023?\340\331\035?h=.?v\024\000?\000\375B?\0068\357>7\320I?\344vT?l\332d?z\2616?\004\232y?\0079.?\2356\200?\364\211\205?\267\273\215?}Nm?\203\033\230?\n\326d?\036\205\233?u\330\240?9\n\251?\300\365\221?\005j\263?\207\271\215?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Minimum_1"
  op: "Minimum"
  input: "bboxes_encode_block_3/while/Minimum_1/x"
  input: "bboxes_encode_block_3/while/strided_slice_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub"
  op: "Sub"
  input: "bboxes_encode_block_3/while/Minimum"
  input: "bboxes_encode_block_3/while/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Maximum_2/y"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Maximum_2"
  op: "Maximum"
  input: "bboxes_encode_block_3/while/sub"
  input: "bboxes_encode_block_3/while/Maximum_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub_1"
  op: "Sub"
  input: "bboxes_encode_block_3/while/Minimum_1"
  input: "bboxes_encode_block_3/while/Maximum_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Maximum_3/y"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Maximum_3"
  op: "Maximum"
  input: "bboxes_encode_block_3/while/sub_1"
  input: "bboxes_encode_block_3/while/Maximum_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/mul"
  op: "Mul"
  input: "bboxes_encode_block_3/while/Maximum_2"
  input: "bboxes_encode_block_3/while/Maximum_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub_2/x"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\323+\205><,\264>\324+\205>\324+\205>\324+\205>\324+\205>\323+\205>;,\264>\325+\205>\323+\205>\324+\205>\323+\205>\323+\205>;,\264>\325+\205>\323+\205>\324+\205>\323+\205>\323+\205>>,\264>\323+\205>\323+\205>\323+\205>\323+\205>\322+\205>;,\264>\325+\205>\323+\205>\324+\205>\325+\205>\323+\205>;,\264>\323+\205>\325+\205>\323+\205>\324+\205>\323+\205>:,\264>\324+\205>\324+\205>\324+\205>\324+\205>\323+\205>:,\264>\324+\205>\324+\205>\324+\205>\324+\205>\323+\205><,\264>\323+\205>\324+\205>\322+\205>\324+\205>\322+\205>:,\264>\324+\205>\324+\205>\324+\205>\325+\205>\323+\205>;,\264>\323+\205>\325+\205>\323+\205>\324+\205>\323+\205>:,\264>\324+\205>\324+\205>\324+\205>\324+\205>\323+\205>:,\264>\324+\205>\324+\205>\324+\205>\324+\205>\323+\205><,\264>\323+\205>\324+\205>\322+\205>\324+\205>\322+\205>:,\264>\324+\205>\324+\205>\324+\205>\325+\205>\323+\205>>,\264>\323+\205>\323+\205>\323+\205>\323+\205>\323+\205><,\264>\324+\205>\323+\205>\324+\205>\322+\205>\323+\205><,\264>\324+\205>\323+\205>\324+\205>\322+\205>\323+\205>?,\264>\323+\205>\323+\205>\322+\205>\322+\205>\322+\205><,\264>\324+\205>\323+\205>\324+\205>\324+\205>\322+\205>;,\264>\323+\205>\325+\205>\325+\205>\324+\205>\322+\205>:,\264>\324+\205>\324+\205>\325+\205>\324+\205>\322+\205>:,\264>\324+\205>\324+\205>\325+\205>\324+\205>\322+\205><,\264>\323+\205>\324+\205>\324+\205>\324+\205>\321+\205>:,\264>\324+\205>\324+\205>\325+\205>\325+\205>"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub_2"
  op: "Sub"
  input: "bboxes_encode_block_3/while/sub_2/x"
  input: "bboxes_encode_block_3/while/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_7/stack"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_7/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_7/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_7"
  op: "StridedSlice"
  input: "bboxes_encode_block_3/while/strided_slice_2"
  input: "bboxes_encode_block_3/while/strided_slice_7/stack"
  input: "bboxes_encode_block_3/while/strided_slice_7/stack_1"
  input: "bboxes_encode_block_3/while/strided_slice_7/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_8/stack"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_8/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_8/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_8"
  op: "StridedSlice"
  input: "bboxes_encode_block_3/while/strided_slice_2"
  input: "bboxes_encode_block_3/while/strided_slice_8/stack"
  input: "bboxes_encode_block_3/while/strided_slice_8/stack_1"
  input: "bboxes_encode_block_3/while/strided_slice_8/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub_3"
  op: "Sub"
  input: "bboxes_encode_block_3/while/strided_slice_7"
  input: "bboxes_encode_block_3/while/strided_slice_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_9/stack"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_9/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_9/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_9"
  op: "StridedSlice"
  input: "bboxes_encode_block_3/while/strided_slice_2"
  input: "bboxes_encode_block_3/while/strided_slice_9/stack"
  input: "bboxes_encode_block_3/while/strided_slice_9/stack_1"
  input: "bboxes_encode_block_3/while/strided_slice_9/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_10/stack"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_10/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_10/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_10"
  op: "StridedSlice"
  input: "bboxes_encode_block_3/while/strided_slice_2"
  input: "bboxes_encode_block_3/while/strided_slice_10/stack"
  input: "bboxes_encode_block_3/while/strided_slice_10/stack_1"
  input: "bboxes_encode_block_3/while/strided_slice_10/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub_4"
  op: "Sub"
  input: "bboxes_encode_block_3/while/strided_slice_9"
  input: "bboxes_encode_block_3/while/strided_slice_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/mul_1"
  op: "Mul"
  input: "bboxes_encode_block_3/while/sub_3"
  input: "bboxes_encode_block_3/while/sub_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/add_2"
  op: "Add"
  input: "bboxes_encode_block_3/while/sub_2"
  input: "bboxes_encode_block_3/while/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/div"
  op: "RealDiv"
  input: "bboxes_encode_block_3/while/mul"
  input: "bboxes_encode_block_3/while/add_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Greater"
  op: "Greater"
  input: "bboxes_encode_block_3/while/div"
  input: "bboxes_encode_block_3/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Greater_1/y"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Greater_1"
  op: "Greater"
  input: "bboxes_encode_block_3/while/Identity_2"
  input: "bboxes_encode_block_3/while/Greater_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/LogicalAnd"
  op: "LogicalAnd"
  input: "bboxes_encode_block_3/while/Greater"
  input: "bboxes_encode_block_3/while/Greater_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Less_1/y"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Less_1"
  op: "Less"
  input: "bboxes_encode_block_3/while/strided_slice_1"
  input: "bboxes_encode_block_3/while/Less_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/LogicalAnd_1"
  op: "LogicalAnd"
  input: "bboxes_encode_block_3/while/LogicalAnd"
  input: "bboxes_encode_block_3/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Cast"
  op: "Cast"
  input: "bboxes_encode_block_3/while/LogicalAnd_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Cast_1"
  op: "Cast"
  input: "bboxes_encode_block_3/while/LogicalAnd_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/mul_2"
  op: "Mul"
  input: "bboxes_encode_block_3/while/Cast"
  input: "bboxes_encode_block_3/while/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub_5/x"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub_5"
  op: "Sub"
  input: "bboxes_encode_block_3/while/sub_5/x"
  input: "bboxes_encode_block_3/while/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/mul_3"
  op: "Mul"
  input: "bboxes_encode_block_3/while/sub_5"
  input: "bboxes_encode_block_3/while/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/add_3"
  op: "Add"
  input: "bboxes_encode_block_3/while/mul_2"
  input: "bboxes_encode_block_3/while/mul_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Select"
  op: "Select"
  input: "bboxes_encode_block_3/while/LogicalAnd_1"
  input: "bboxes_encode_block_3/while/div"
  input: "bboxes_encode_block_3/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_11/stack"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_11/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_11/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_11"
  op: "StridedSlice"
  input: "bboxes_encode_block_3/while/strided_slice_2"
  input: "bboxes_encode_block_3/while/strided_slice_11/stack"
  input: "bboxes_encode_block_3/while/strided_slice_11/stack_1"
  input: "bboxes_encode_block_3/while/strided_slice_11/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/mul_4"
  op: "Mul"
  input: "bboxes_encode_block_3/while/Cast_1"
  input: "bboxes_encode_block_3/while/strided_slice_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub_6/x"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub_6"
  op: "Sub"
  input: "bboxes_encode_block_3/while/sub_6/x"
  input: "bboxes_encode_block_3/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/mul_5"
  op: "Mul"
  input: "bboxes_encode_block_3/while/sub_6"
  input: "bboxes_encode_block_3/while/Identity_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/add_4"
  op: "Add"
  input: "bboxes_encode_block_3/while/mul_4"
  input: "bboxes_encode_block_3/while/mul_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_12/stack"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_12/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_12/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_12"
  op: "StridedSlice"
  input: "bboxes_encode_block_3/while/strided_slice_2"
  input: "bboxes_encode_block_3/while/strided_slice_12/stack"
  input: "bboxes_encode_block_3/while/strided_slice_12/stack_1"
  input: "bboxes_encode_block_3/while/strided_slice_12/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/mul_6"
  op: "Mul"
  input: "bboxes_encode_block_3/while/Cast_1"
  input: "bboxes_encode_block_3/while/strided_slice_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub_7/x"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub_7"
  op: "Sub"
  input: "bboxes_encode_block_3/while/sub_7/x"
  input: "bboxes_encode_block_3/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/mul_7"
  op: "Mul"
  input: "bboxes_encode_block_3/while/sub_7"
  input: "bboxes_encode_block_3/while/Identity_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/add_5"
  op: "Add"
  input: "bboxes_encode_block_3/while/mul_6"
  input: "bboxes_encode_block_3/while/mul_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_13/stack"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_13/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_13/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_13"
  op: "StridedSlice"
  input: "bboxes_encode_block_3/while/strided_slice_2"
  input: "bboxes_encode_block_3/while/strided_slice_13/stack"
  input: "bboxes_encode_block_3/while/strided_slice_13/stack_1"
  input: "bboxes_encode_block_3/while/strided_slice_13/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/mul_8"
  op: "Mul"
  input: "bboxes_encode_block_3/while/Cast_1"
  input: "bboxes_encode_block_3/while/strided_slice_13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub_8/x"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub_8"
  op: "Sub"
  input: "bboxes_encode_block_3/while/sub_8/x"
  input: "bboxes_encode_block_3/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/mul_9"
  op: "Mul"
  input: "bboxes_encode_block_3/while/sub_8"
  input: "bboxes_encode_block_3/while/Identity_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/add_6"
  op: "Add"
  input: "bboxes_encode_block_3/while/mul_8"
  input: "bboxes_encode_block_3/while/mul_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_14/stack"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_14/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_14/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/strided_slice_14"
  op: "StridedSlice"
  input: "bboxes_encode_block_3/while/strided_slice_2"
  input: "bboxes_encode_block_3/while/strided_slice_14/stack"
  input: "bboxes_encode_block_3/while/strided_slice_14/stack_1"
  input: "bboxes_encode_block_3/while/strided_slice_14/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/mul_10"
  op: "Mul"
  input: "bboxes_encode_block_3/while/Cast_1"
  input: "bboxes_encode_block_3/while/strided_slice_14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub_9/x"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/sub_9"
  op: "Sub"
  input: "bboxes_encode_block_3/while/sub_9/x"
  input: "bboxes_encode_block_3/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/mul_11"
  op: "Mul"
  input: "bboxes_encode_block_3/while/sub_9"
  input: "bboxes_encode_block_3/while/Identity_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/add_7"
  op: "Add"
  input: "bboxes_encode_block_3/while/mul_10"
  input: "bboxes_encode_block_3/while/mul_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/add_8/y"
  op: "Const"
  input: "^bboxes_encode_block_3/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/add_8"
  op: "Add"
  input: "bboxes_encode_block_3/while/Identity"
  input: "bboxes_encode_block_3/while/add_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/NextIteration"
  op: "NextIteration"
  input: "bboxes_encode_block_3/while/add_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/NextIteration_1"
  op: "NextIteration"
  input: "bboxes_encode_block_3/while/add_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/NextIteration_2"
  op: "NextIteration"
  input: "bboxes_encode_block_3/while/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/NextIteration_3"
  op: "NextIteration"
  input: "bboxes_encode_block_3/while/add_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/NextIteration_4"
  op: "NextIteration"
  input: "bboxes_encode_block_3/while/add_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/NextIteration_5"
  op: "NextIteration"
  input: "bboxes_encode_block_3/while/add_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/NextIteration_6"
  op: "NextIteration"
  input: "bboxes_encode_block_3/while/add_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Exit"
  op: "Exit"
  input: "bboxes_encode_block_3/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Exit_1"
  op: "Exit"
  input: "bboxes_encode_block_3/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Exit_2"
  op: "Exit"
  input: "bboxes_encode_block_3/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Exit_3"
  op: "Exit"
  input: "bboxes_encode_block_3/while/Switch_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Exit_4"
  op: "Exit"
  input: "bboxes_encode_block_3/while/Switch_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Exit_5"
  op: "Exit"
  input: "bboxes_encode_block_3/while/Switch_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/while/Exit_6"
  op: "Exit"
  input: "bboxes_encode_block_3/while/Switch_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/add"
  op: "Add"
  input: "bboxes_encode_block_3/while/Exit_5"
  input: "bboxes_encode_block_3/while/Exit_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv"
  op: "RealDiv"
  input: "bboxes_encode_block_3/add"
  input: "bboxes_encode_block_3/truediv/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/add_1"
  op: "Add"
  input: "bboxes_encode_block_3/while/Exit_6"
  input: "bboxes_encode_block_3/while/Exit_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_1"
  op: "RealDiv"
  input: "bboxes_encode_block_3/add_1"
  input: "bboxes_encode_block_3/truediv_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/sub"
  op: "Sub"
  input: "bboxes_encode_block_3/while/Exit_5"
  input: "bboxes_encode_block_3/while/Exit_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/sub_1"
  op: "Sub"
  input: "bboxes_encode_block_3/while/Exit_6"
  input: "bboxes_encode_block_3/while/Exit_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/sub_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\016t\332=\016t\332=\016t\332=\016t\332=\016t\332=\n\327\243>\n\327\243>\n\327\243>\n\327\243>\n\327\243>\211\210\010?\211\210\010?\211\210\010?\211\210\010?\211\210\010?\214%??\214%??\214%??\214%??\214%??\217\302u?\217\302u?\217\302u?\217\302u?\217\302u?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/sub_2"
  op: "Sub"
  input: "bboxes_encode_block_3/truediv"
  input: "bboxes_encode_block_3/sub_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\\\217\002?\267\334\027?\305\243\270>\305\2438?\371\301\226>\365\"b?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_2"
  op: "RealDiv"
  input: "bboxes_encode_block_3/sub_2"
  input: "bboxes_encode_block_3/truediv_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_3"
  op: "RealDiv"
  input: "bboxes_encode_block_3/truediv_2"
  input: "bboxes_encode_block_3/truediv_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/sub_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\016t\332=\n\327\243>\211\210\010?\214%??\217\302u?\016t\332=\n\327\243>\211\210\010?\214%??\217\302u?\016t\332=\n\327\243>\211\210\010?\214%??\217\302u?\016t\332=\n\327\243>\211\210\010?\214%??\217\302u?\016t\332=\n\327\243>\211\210\010?\214%??\217\302u?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/sub_3"
  op: "Sub"
  input: "bboxes_encode_block_3/truediv_1"
  input: "bboxes_encode_block_3/sub_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_4/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\\\217\002?\267\334\027?\305\2438?\305\243\270>\365\"b?\371\301\226>"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_4"
  op: "RealDiv"
  input: "bboxes_encode_block_3/sub_3"
  input: "bboxes_encode_block_3/truediv_4/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_5/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_5"
  op: "RealDiv"
  input: "bboxes_encode_block_3/truediv_4"
  input: "bboxes_encode_block_3/truediv_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_6/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\\\217\002?\267\334\027?\305\243\270>\305\2438?\371\301\226>\365\"b?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_6"
  op: "RealDiv"
  input: "bboxes_encode_block_3/sub"
  input: "bboxes_encode_block_3/truediv_6/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/Log"
  op: "Log"
  input: "bboxes_encode_block_3/truediv_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_7/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_7"
  op: "RealDiv"
  input: "bboxes_encode_block_3/Log"
  input: "bboxes_encode_block_3/truediv_7/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_8/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\\\217\002?\267\334\027?\305\2438?\305\243\270>\365\"b?\371\301\226>"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_8"
  op: "RealDiv"
  input: "bboxes_encode_block_3/sub_1"
  input: "bboxes_encode_block_3/truediv_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/Log_1"
  op: "Log"
  input: "bboxes_encode_block_3/truediv_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_9/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/truediv_9"
  op: "RealDiv"
  input: "bboxes_encode_block_3/Log_1"
  input: "bboxes_encode_block_3/truediv_9/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_3/stack"
  op: "Pack"
  input: "bboxes_encode_block_3/truediv_5"
  input: "bboxes_encode_block_3/truediv_3"
  input: "bboxes_encode_block_3/truediv_9"
  input: "bboxes_encode_block_3/truediv_7"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "bboxes_encode_block_4/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/zeros_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/zeros_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/zeros_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/ones"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/ones_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Enter"
  op: "Enter"
  input: "bboxes_encode_block_4/while/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Enter_1"
  op: "Enter"
  input: "bboxes_encode_block_4/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Enter_2"
  op: "Enter"
  input: "bboxes_encode_block_4/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Enter_3"
  op: "Enter"
  input: "bboxes_encode_block_4/zeros_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Enter_4"
  op: "Enter"
  input: "bboxes_encode_block_4/zeros_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Enter_5"
  op: "Enter"
  input: "bboxes_encode_block_4/ones"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Enter_6"
  op: "Enter"
  input: "bboxes_encode_block_4/ones_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Merge"
  op: "Merge"
  input: "bboxes_encode_block_4/while/Enter"
  input: "bboxes_encode_block_4/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Merge_1"
  op: "Merge"
  input: "bboxes_encode_block_4/while/Enter_1"
  input: "bboxes_encode_block_4/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Merge_2"
  op: "Merge"
  input: "bboxes_encode_block_4/while/Enter_2"
  input: "bboxes_encode_block_4/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Merge_3"
  op: "Merge"
  input: "bboxes_encode_block_4/while/Enter_3"
  input: "bboxes_encode_block_4/while/NextIteration_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Merge_4"
  op: "Merge"
  input: "bboxes_encode_block_4/while/Enter_4"
  input: "bboxes_encode_block_4/while/NextIteration_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Merge_5"
  op: "Merge"
  input: "bboxes_encode_block_4/while/Enter_5"
  input: "bboxes_encode_block_4/while/NextIteration_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Merge_6"
  op: "Merge"
  input: "bboxes_encode_block_4/while/Enter_6"
  input: "bboxes_encode_block_4/while/NextIteration_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Shape"
  op: "Shape"
  input: "bboxes_encode_block_4/while/Shape/Enter"
  input: "^bboxes_encode_block_4/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Shape/Enter"
  op: "Enter"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/GatherV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Less"
  op: "Less"
  input: "bboxes_encode_block_4/while/Merge"
  input: "bboxes_encode_block_4/while/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice/stack"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice"
  op: "StridedSlice"
  input: "bboxes_encode_block_4/while/Less"
  input: "bboxes_encode_block_4/while/strided_slice/stack"
  input: "bboxes_encode_block_4/while/strided_slice/stack_1"
  input: "bboxes_encode_block_4/while/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/LoopCond"
  op: "LoopCond"
  input: "bboxes_encode_block_4/while/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Switch"
  op: "Switch"
  input: "bboxes_encode_block_4/while/Merge"
  input: "bboxes_encode_block_4/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_4/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Switch_1"
  op: "Switch"
  input: "bboxes_encode_block_4/while/Merge_1"
  input: "bboxes_encode_block_4/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_4/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Switch_2"
  op: "Switch"
  input: "bboxes_encode_block_4/while/Merge_2"
  input: "bboxes_encode_block_4/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_4/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Switch_3"
  op: "Switch"
  input: "bboxes_encode_block_4/while/Merge_3"
  input: "bboxes_encode_block_4/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_4/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Switch_4"
  op: "Switch"
  input: "bboxes_encode_block_4/while/Merge_4"
  input: "bboxes_encode_block_4/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_4/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Switch_5"
  op: "Switch"
  input: "bboxes_encode_block_4/while/Merge_5"
  input: "bboxes_encode_block_4/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_4/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Switch_6"
  op: "Switch"
  input: "bboxes_encode_block_4/while/Merge_6"
  input: "bboxes_encode_block_4/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_4/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Identity"
  op: "Identity"
  input: "bboxes_encode_block_4/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Identity_1"
  op: "Identity"
  input: "bboxes_encode_block_4/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Identity_2"
  op: "Identity"
  input: "bboxes_encode_block_4/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Identity_3"
  op: "Identity"
  input: "bboxes_encode_block_4/while/Switch_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Identity_4"
  op: "Identity"
  input: "bboxes_encode_block_4/while/Switch_4:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Identity_5"
  op: "Identity"
  input: "bboxes_encode_block_4/while/Switch_5:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Identity_6"
  op: "Identity"
  input: "bboxes_encode_block_4/while/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/add/y"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/add"
  op: "Add"
  input: "bboxes_encode_block_4/while/Identity"
  input: "bboxes_encode_block_4/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_1/stack"
  op: "Pack"
  input: "bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_1/stack_1"
  op: "Pack"
  input: "bboxes_encode_block_4/while/add"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_1/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_1"
  op: "StridedSlice"
  input: "bboxes_encode_block_4/while/Shape/Enter"
  input: "bboxes_encode_block_4/while/strided_slice_1/stack"
  input: "bboxes_encode_block_4/while/strided_slice_1/stack_1"
  input: "bboxes_encode_block_4/while/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/add_1/y"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/add_1"
  op: "Add"
  input: "bboxes_encode_block_4/while/Identity"
  input: "bboxes_encode_block_4/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_2/stack"
  op: "Pack"
  input: "bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_2/stack_1"
  op: "Pack"
  input: "bboxes_encode_block_4/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_2/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_2"
  op: "StridedSlice"
  input: "bboxes_encode_block_4/while/strided_slice_2/Enter"
  input: "bboxes_encode_block_4/while/strided_slice_2/stack"
  input: "bboxes_encode_block_4/while/strided_slice_2/stack_1"
  input: "bboxes_encode_block_4/while/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_2/Enter"
  op: "Enter"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_3/stack"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_3/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_3/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_3"
  op: "StridedSlice"
  input: "bboxes_encode_block_4/while/strided_slice_2"
  input: "bboxes_encode_block_4/while/strided_slice_3/stack"
  input: "bboxes_encode_block_4/while/strided_slice_3/stack_1"
  input: "bboxes_encode_block_4/while/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Maximum/x"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\003\2356\276\245\006b\276\260G\236\275.y\244\276\003\2356\276\245\006b\276\260G\236\275.y\244\276\003\2356\276\245\006b\276\260G\236\275.y\244\276R\270\036>`\235\346=\276\030\203>\240/F<R\270\036>`\235\346=\276\030\203>\240/F<R\270\036>`\235\346=\276\030\203>\240/F<\323\006\372>\002R\344>\264\341\026?\'\334\260>\323\006\372>\002R\344>\264\341\026?\'\334\260>\323\006\372>\002R\344>\264\341\026?\'\334\260>"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Maximum"
  op: "Maximum"
  input: "bboxes_encode_block_4/while/Maximum/x"
  input: "bboxes_encode_block_4/while/strided_slice_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_4/stack"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_4/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_4/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_4"
  op: "StridedSlice"
  input: "bboxes_encode_block_4/while/strided_slice_2"
  input: "bboxes_encode_block_4/while/strided_slice_4/stack"
  input: "bboxes_encode_block_4/while/strided_slice_4/stack_1"
  input: "bboxes_encode_block_4/while/strided_slice_4/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Maximum_1/x"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\003\2356\276\245\006b\276.y\244\276\260G\236\275R\270\036>`\235\346=\240/F<\276\030\203>\323\006\372>\002R\344>\'\334\260>\264\341\026?\003\2356\276\245\006b\276.y\244\276\260G\236\275R\270\036>`\235\346=\240/F<\276\030\203>\323\006\372>\002R\344>\'\334\260>\264\341\026?\003\2356\276\245\006b\276.y\244\276\260G\236\275R\270\036>`\235\346=\240/F<\276\030\203>\323\006\372>\002R\344>\'\334\260>\264\341\026?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Maximum_1"
  op: "Maximum"
  input: "bboxes_encode_block_4/while/Maximum_1/x"
  input: "bboxes_encode_block_4/while/strided_slice_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_5/stack"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_5/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_5/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_5"
  op: "StridedSlice"
  input: "bboxes_encode_block_4/while/strided_slice_2"
  input: "bboxes_encode_block_4/while/strided_slice_5/stack"
  input: "bboxes_encode_block_4/while/strided_slice_5/stack_1"
  input: "bboxes_encode_block_4/while/strided_slice_5/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Minimum/x"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\226\374\002?\377\326\r?\227<\322>\354\221\'?\226\374\002?\377\326\r?\227<\322>\354\221\'?\226\374\002?\377\326\r?\227<\322>\354\221\'?\354QX?T,c?\241s>?B\347|?\354QX?T,c?\241s>?B\347|?\354QX?T,c?\241s>?B\347|?\240\323\226?\324@\234?{\344\211?K\036\251?\240\323\226?\324@\234?{\344\211?K\036\251?\240\323\226?\324@\234?{\344\211?K\036\251?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Minimum"
  op: "Minimum"
  input: "bboxes_encode_block_4/while/Minimum/x"
  input: "bboxes_encode_block_4/while/strided_slice_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_6/stack"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_6/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_6/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_6"
  op: "StridedSlice"
  input: "bboxes_encode_block_4/while/strided_slice_2"
  input: "bboxes_encode_block_4/while/strided_slice_6/stack"
  input: "bboxes_encode_block_4/while/strided_slice_6/stack_1"
  input: "bboxes_encode_block_4/while/strided_slice_6/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Minimum_1/x"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\226\374\002?\377\326\r?\354\221\'?\227<\322>\354QX?T,c?B\347|?\241s>?\240\323\226?\324@\234?K\036\251?{\344\211?\226\374\002?\377\326\r?\354\221\'?\227<\322>\354QX?T,c?B\347|?\241s>?\240\323\226?\324@\234?K\036\251?{\344\211?\226\374\002?\377\326\r?\354\221\'?\227<\322>\354QX?T,c?B\347|?\241s>?\240\323\226?\324@\234?K\036\251?{\344\211?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Minimum_1"
  op: "Minimum"
  input: "bboxes_encode_block_4/while/Minimum_1/x"
  input: "bboxes_encode_block_4/while/strided_slice_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub"
  op: "Sub"
  input: "bboxes_encode_block_4/while/Minimum"
  input: "bboxes_encode_block_4/while/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Maximum_2/y"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Maximum_2"
  op: "Maximum"
  input: "bboxes_encode_block_4/while/sub"
  input: "bboxes_encode_block_4/while/Maximum_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub_1"
  op: "Sub"
  input: "bboxes_encode_block_4/while/Minimum_1"
  input: "bboxes_encode_block_4/while/Maximum_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Maximum_3/y"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Maximum_3"
  op: "Maximum"
  input: "bboxes_encode_block_4/while/sub_1"
  input: "bboxes_encode_block_4/while/Maximum_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/mul"
  op: "Mul"
  input: "bboxes_encode_block_4/while/Maximum_2"
  input: "bboxes_encode_block_4/while/Maximum_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub_2/x"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        tensor_content: "a\303\363>C\255\031?a\303\363>a\303\363>b\303\363>C\255\031?b\303\363>b\303\363>`\303\363>B\255\031?`\303\363>b\303\363>b\303\363>C\255\031?b\303\363>b\303\363>d\303\363>C\255\031?c\303\363>c\303\363>a\303\363>B\255\031?a\303\363>c\303\363>`\303\363>B\255\031?b\303\363>`\303\363>a\303\363>B\255\031?c\303\363>a\303\363>^\303\363>A\255\031?a\303\363>a\303\363>"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub_2"
  op: "Sub"
  input: "bboxes_encode_block_4/while/sub_2/x"
  input: "bboxes_encode_block_4/while/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_7/stack"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_7/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_7/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_7"
  op: "StridedSlice"
  input: "bboxes_encode_block_4/while/strided_slice_2"
  input: "bboxes_encode_block_4/while/strided_slice_7/stack"
  input: "bboxes_encode_block_4/while/strided_slice_7/stack_1"
  input: "bboxes_encode_block_4/while/strided_slice_7/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_8/stack"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_8/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_8/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_8"
  op: "StridedSlice"
  input: "bboxes_encode_block_4/while/strided_slice_2"
  input: "bboxes_encode_block_4/while/strided_slice_8/stack"
  input: "bboxes_encode_block_4/while/strided_slice_8/stack_1"
  input: "bboxes_encode_block_4/while/strided_slice_8/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub_3"
  op: "Sub"
  input: "bboxes_encode_block_4/while/strided_slice_7"
  input: "bboxes_encode_block_4/while/strided_slice_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_9/stack"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_9/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_9/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_9"
  op: "StridedSlice"
  input: "bboxes_encode_block_4/while/strided_slice_2"
  input: "bboxes_encode_block_4/while/strided_slice_9/stack"
  input: "bboxes_encode_block_4/while/strided_slice_9/stack_1"
  input: "bboxes_encode_block_4/while/strided_slice_9/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_10/stack"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_10/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_10/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_10"
  op: "StridedSlice"
  input: "bboxes_encode_block_4/while/strided_slice_2"
  input: "bboxes_encode_block_4/while/strided_slice_10/stack"
  input: "bboxes_encode_block_4/while/strided_slice_10/stack_1"
  input: "bboxes_encode_block_4/while/strided_slice_10/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub_4"
  op: "Sub"
  input: "bboxes_encode_block_4/while/strided_slice_9"
  input: "bboxes_encode_block_4/while/strided_slice_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/mul_1"
  op: "Mul"
  input: "bboxes_encode_block_4/while/sub_3"
  input: "bboxes_encode_block_4/while/sub_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/add_2"
  op: "Add"
  input: "bboxes_encode_block_4/while/sub_2"
  input: "bboxes_encode_block_4/while/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/div"
  op: "RealDiv"
  input: "bboxes_encode_block_4/while/mul"
  input: "bboxes_encode_block_4/while/add_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Greater"
  op: "Greater"
  input: "bboxes_encode_block_4/while/div"
  input: "bboxes_encode_block_4/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Greater_1/y"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Greater_1"
  op: "Greater"
  input: "bboxes_encode_block_4/while/Identity_2"
  input: "bboxes_encode_block_4/while/Greater_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/LogicalAnd"
  op: "LogicalAnd"
  input: "bboxes_encode_block_4/while/Greater"
  input: "bboxes_encode_block_4/while/Greater_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Less_1/y"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Less_1"
  op: "Less"
  input: "bboxes_encode_block_4/while/strided_slice_1"
  input: "bboxes_encode_block_4/while/Less_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/LogicalAnd_1"
  op: "LogicalAnd"
  input: "bboxes_encode_block_4/while/LogicalAnd"
  input: "bboxes_encode_block_4/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Cast"
  op: "Cast"
  input: "bboxes_encode_block_4/while/LogicalAnd_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Cast_1"
  op: "Cast"
  input: "bboxes_encode_block_4/while/LogicalAnd_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/mul_2"
  op: "Mul"
  input: "bboxes_encode_block_4/while/Cast"
  input: "bboxes_encode_block_4/while/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub_5/x"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub_5"
  op: "Sub"
  input: "bboxes_encode_block_4/while/sub_5/x"
  input: "bboxes_encode_block_4/while/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/mul_3"
  op: "Mul"
  input: "bboxes_encode_block_4/while/sub_5"
  input: "bboxes_encode_block_4/while/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/add_3"
  op: "Add"
  input: "bboxes_encode_block_4/while/mul_2"
  input: "bboxes_encode_block_4/while/mul_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Select"
  op: "Select"
  input: "bboxes_encode_block_4/while/LogicalAnd_1"
  input: "bboxes_encode_block_4/while/div"
  input: "bboxes_encode_block_4/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_11/stack"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_11/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_11/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_11"
  op: "StridedSlice"
  input: "bboxes_encode_block_4/while/strided_slice_2"
  input: "bboxes_encode_block_4/while/strided_slice_11/stack"
  input: "bboxes_encode_block_4/while/strided_slice_11/stack_1"
  input: "bboxes_encode_block_4/while/strided_slice_11/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/mul_4"
  op: "Mul"
  input: "bboxes_encode_block_4/while/Cast_1"
  input: "bboxes_encode_block_4/while/strided_slice_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub_6/x"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub_6"
  op: "Sub"
  input: "bboxes_encode_block_4/while/sub_6/x"
  input: "bboxes_encode_block_4/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/mul_5"
  op: "Mul"
  input: "bboxes_encode_block_4/while/sub_6"
  input: "bboxes_encode_block_4/while/Identity_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/add_4"
  op: "Add"
  input: "bboxes_encode_block_4/while/mul_4"
  input: "bboxes_encode_block_4/while/mul_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_12/stack"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_12/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_12/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_12"
  op: "StridedSlice"
  input: "bboxes_encode_block_4/while/strided_slice_2"
  input: "bboxes_encode_block_4/while/strided_slice_12/stack"
  input: "bboxes_encode_block_4/while/strided_slice_12/stack_1"
  input: "bboxes_encode_block_4/while/strided_slice_12/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/mul_6"
  op: "Mul"
  input: "bboxes_encode_block_4/while/Cast_1"
  input: "bboxes_encode_block_4/while/strided_slice_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub_7/x"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub_7"
  op: "Sub"
  input: "bboxes_encode_block_4/while/sub_7/x"
  input: "bboxes_encode_block_4/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/mul_7"
  op: "Mul"
  input: "bboxes_encode_block_4/while/sub_7"
  input: "bboxes_encode_block_4/while/Identity_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/add_5"
  op: "Add"
  input: "bboxes_encode_block_4/while/mul_6"
  input: "bboxes_encode_block_4/while/mul_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_13/stack"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_13/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_13/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_13"
  op: "StridedSlice"
  input: "bboxes_encode_block_4/while/strided_slice_2"
  input: "bboxes_encode_block_4/while/strided_slice_13/stack"
  input: "bboxes_encode_block_4/while/strided_slice_13/stack_1"
  input: "bboxes_encode_block_4/while/strided_slice_13/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/mul_8"
  op: "Mul"
  input: "bboxes_encode_block_4/while/Cast_1"
  input: "bboxes_encode_block_4/while/strided_slice_13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub_8/x"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub_8"
  op: "Sub"
  input: "bboxes_encode_block_4/while/sub_8/x"
  input: "bboxes_encode_block_4/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/mul_9"
  op: "Mul"
  input: "bboxes_encode_block_4/while/sub_8"
  input: "bboxes_encode_block_4/while/Identity_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/add_6"
  op: "Add"
  input: "bboxes_encode_block_4/while/mul_8"
  input: "bboxes_encode_block_4/while/mul_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_14/stack"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_14/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_14/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/strided_slice_14"
  op: "StridedSlice"
  input: "bboxes_encode_block_4/while/strided_slice_2"
  input: "bboxes_encode_block_4/while/strided_slice_14/stack"
  input: "bboxes_encode_block_4/while/strided_slice_14/stack_1"
  input: "bboxes_encode_block_4/while/strided_slice_14/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/mul_10"
  op: "Mul"
  input: "bboxes_encode_block_4/while/Cast_1"
  input: "bboxes_encode_block_4/while/strided_slice_14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub_9/x"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/sub_9"
  op: "Sub"
  input: "bboxes_encode_block_4/while/sub_9/x"
  input: "bboxes_encode_block_4/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/mul_11"
  op: "Mul"
  input: "bboxes_encode_block_4/while/sub_9"
  input: "bboxes_encode_block_4/while/Identity_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/add_7"
  op: "Add"
  input: "bboxes_encode_block_4/while/mul_10"
  input: "bboxes_encode_block_4/while/mul_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/add_8/y"
  op: "Const"
  input: "^bboxes_encode_block_4/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/add_8"
  op: "Add"
  input: "bboxes_encode_block_4/while/Identity"
  input: "bboxes_encode_block_4/while/add_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/NextIteration"
  op: "NextIteration"
  input: "bboxes_encode_block_4/while/add_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/NextIteration_1"
  op: "NextIteration"
  input: "bboxes_encode_block_4/while/add_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/NextIteration_2"
  op: "NextIteration"
  input: "bboxes_encode_block_4/while/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/NextIteration_3"
  op: "NextIteration"
  input: "bboxes_encode_block_4/while/add_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/NextIteration_4"
  op: "NextIteration"
  input: "bboxes_encode_block_4/while/add_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/NextIteration_5"
  op: "NextIteration"
  input: "bboxes_encode_block_4/while/add_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/NextIteration_6"
  op: "NextIteration"
  input: "bboxes_encode_block_4/while/add_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Exit"
  op: "Exit"
  input: "bboxes_encode_block_4/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Exit_1"
  op: "Exit"
  input: "bboxes_encode_block_4/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Exit_2"
  op: "Exit"
  input: "bboxes_encode_block_4/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Exit_3"
  op: "Exit"
  input: "bboxes_encode_block_4/while/Switch_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Exit_4"
  op: "Exit"
  input: "bboxes_encode_block_4/while/Switch_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Exit_5"
  op: "Exit"
  input: "bboxes_encode_block_4/while/Switch_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/while/Exit_6"
  op: "Exit"
  input: "bboxes_encode_block_4/while/Switch_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/add"
  op: "Add"
  input: "bboxes_encode_block_4/while/Exit_5"
  input: "bboxes_encode_block_4/while/Exit_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv"
  op: "RealDiv"
  input: "bboxes_encode_block_4/add"
  input: "bboxes_encode_block_4/truediv/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/add_1"
  op: "Add"
  input: "bboxes_encode_block_4/while/Exit_6"
  input: "bboxes_encode_block_4/while/Exit_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_1"
  op: "RealDiv"
  input: "bboxes_encode_block_4/add_1"
  input: "bboxes_encode_block_4/truediv_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/sub"
  op: "Sub"
  input: "bboxes_encode_block_4/while/Exit_5"
  input: "bboxes_encode_block_4/while/Exit_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/sub_1"
  op: "Sub"
  input: "bboxes_encode_block_4/while/Exit_6"
  input: "bboxes_encode_block_4/while/Exit_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/sub_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\253\252*>\253\252*>\253\252*>\000\000\000?\000\000\000?\000\000\000?UUU?UUU?UUU?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/sub_2"
  op: "Sub"
  input: "bboxes_encode_block_4/truediv"
  input: "bboxes_encode_block_4/sub_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\327\2430?\250XF?\203\316\371>\203\316y?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_2"
  op: "RealDiv"
  input: "bboxes_encode_block_4/sub_2"
  input: "bboxes_encode_block_4/truediv_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_3"
  op: "RealDiv"
  input: "bboxes_encode_block_4/truediv_2"
  input: "bboxes_encode_block_4/truediv_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/sub_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\253\252*>\000\000\000?UUU?\253\252*>\000\000\000?UUU?\253\252*>\000\000\000?UUU?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/sub_3"
  op: "Sub"
  input: "bboxes_encode_block_4/truediv_1"
  input: "bboxes_encode_block_4/sub_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_4/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\327\2430?\250XF?\203\316y?\203\316\371>"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_4"
  op: "RealDiv"
  input: "bboxes_encode_block_4/sub_3"
  input: "bboxes_encode_block_4/truediv_4/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_5/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_5"
  op: "RealDiv"
  input: "bboxes_encode_block_4/truediv_4"
  input: "bboxes_encode_block_4/truediv_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_6/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\327\2430?\250XF?\203\316\371>\203\316y?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_6"
  op: "RealDiv"
  input: "bboxes_encode_block_4/sub"
  input: "bboxes_encode_block_4/truediv_6/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/Log"
  op: "Log"
  input: "bboxes_encode_block_4/truediv_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_7/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_7"
  op: "RealDiv"
  input: "bboxes_encode_block_4/Log"
  input: "bboxes_encode_block_4/truediv_7/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_8/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\327\2430?\250XF?\203\316y?\203\316\371>"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_8"
  op: "RealDiv"
  input: "bboxes_encode_block_4/sub_1"
  input: "bboxes_encode_block_4/truediv_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/Log_1"
  op: "Log"
  input: "bboxes_encode_block_4/truediv_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_9/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/truediv_9"
  op: "RealDiv"
  input: "bboxes_encode_block_4/Log_1"
  input: "bboxes_encode_block_4/truediv_9/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_4/stack"
  op: "Pack"
  input: "bboxes_encode_block_4/truediv_5"
  input: "bboxes_encode_block_4/truediv_3"
  input: "bboxes_encode_block_4/truediv_9"
  input: "bboxes_encode_block_4/truediv_7"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "bboxes_encode_block_5/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/zeros_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/zeros_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/zeros_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/ones"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/ones_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Enter"
  op: "Enter"
  input: "bboxes_encode_block_5/while/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Enter_1"
  op: "Enter"
  input: "bboxes_encode_block_5/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Enter_2"
  op: "Enter"
  input: "bboxes_encode_block_5/zeros_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Enter_3"
  op: "Enter"
  input: "bboxes_encode_block_5/zeros_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Enter_4"
  op: "Enter"
  input: "bboxes_encode_block_5/zeros_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Enter_5"
  op: "Enter"
  input: "bboxes_encode_block_5/ones"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Enter_6"
  op: "Enter"
  input: "bboxes_encode_block_5/ones_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Merge"
  op: "Merge"
  input: "bboxes_encode_block_5/while/Enter"
  input: "bboxes_encode_block_5/while/NextIteration"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Merge_1"
  op: "Merge"
  input: "bboxes_encode_block_5/while/Enter_1"
  input: "bboxes_encode_block_5/while/NextIteration_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Merge_2"
  op: "Merge"
  input: "bboxes_encode_block_5/while/Enter_2"
  input: "bboxes_encode_block_5/while/NextIteration_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Merge_3"
  op: "Merge"
  input: "bboxes_encode_block_5/while/Enter_3"
  input: "bboxes_encode_block_5/while/NextIteration_3"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Merge_4"
  op: "Merge"
  input: "bboxes_encode_block_5/while/Enter_4"
  input: "bboxes_encode_block_5/while/NextIteration_4"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Merge_5"
  op: "Merge"
  input: "bboxes_encode_block_5/while/Enter_5"
  input: "bboxes_encode_block_5/while/NextIteration_5"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Merge_6"
  op: "Merge"
  input: "bboxes_encode_block_5/while/Enter_6"
  input: "bboxes_encode_block_5/while/NextIteration_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Shape"
  op: "Shape"
  input: "bboxes_encode_block_5/while/Shape/Enter"
  input: "^bboxes_encode_block_5/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Shape/Enter"
  op: "Enter"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter/boolean_mask/GatherV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Less"
  op: "Less"
  input: "bboxes_encode_block_5/while/Merge"
  input: "bboxes_encode_block_5/while/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice/stack"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice"
  op: "StridedSlice"
  input: "bboxes_encode_block_5/while/Less"
  input: "bboxes_encode_block_5/while/strided_slice/stack"
  input: "bboxes_encode_block_5/while/strided_slice/stack_1"
  input: "bboxes_encode_block_5/while/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/LoopCond"
  op: "LoopCond"
  input: "bboxes_encode_block_5/while/strided_slice"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Switch"
  op: "Switch"
  input: "bboxes_encode_block_5/while/Merge"
  input: "bboxes_encode_block_5/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_5/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Switch_1"
  op: "Switch"
  input: "bboxes_encode_block_5/while/Merge_1"
  input: "bboxes_encode_block_5/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_5/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Switch_2"
  op: "Switch"
  input: "bboxes_encode_block_5/while/Merge_2"
  input: "bboxes_encode_block_5/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_5/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Switch_3"
  op: "Switch"
  input: "bboxes_encode_block_5/while/Merge_3"
  input: "bboxes_encode_block_5/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_5/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Switch_4"
  op: "Switch"
  input: "bboxes_encode_block_5/while/Merge_4"
  input: "bboxes_encode_block_5/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_5/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Switch_5"
  op: "Switch"
  input: "bboxes_encode_block_5/while/Merge_5"
  input: "bboxes_encode_block_5/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_5/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Switch_6"
  op: "Switch"
  input: "bboxes_encode_block_5/while/Merge_6"
  input: "bboxes_encode_block_5/while/LoopCond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bboxes_encode_block_5/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Identity"
  op: "Identity"
  input: "bboxes_encode_block_5/while/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Identity_1"
  op: "Identity"
  input: "bboxes_encode_block_5/while/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Identity_2"
  op: "Identity"
  input: "bboxes_encode_block_5/while/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Identity_3"
  op: "Identity"
  input: "bboxes_encode_block_5/while/Switch_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Identity_4"
  op: "Identity"
  input: "bboxes_encode_block_5/while/Switch_4:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Identity_5"
  op: "Identity"
  input: "bboxes_encode_block_5/while/Switch_5:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Identity_6"
  op: "Identity"
  input: "bboxes_encode_block_5/while/Switch_6:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/add/y"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/add"
  op: "Add"
  input: "bboxes_encode_block_5/while/Identity"
  input: "bboxes_encode_block_5/while/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_1/stack"
  op: "Pack"
  input: "bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_1/stack_1"
  op: "Pack"
  input: "bboxes_encode_block_5/while/add"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_1/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_1"
  op: "StridedSlice"
  input: "bboxes_encode_block_5/while/Shape/Enter"
  input: "bboxes_encode_block_5/while/strided_slice_1/stack"
  input: "bboxes_encode_block_5/while/strided_slice_1/stack_1"
  input: "bboxes_encode_block_5/while/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/add_1/y"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/add_1"
  op: "Add"
  input: "bboxes_encode_block_5/while/Identity"
  input: "bboxes_encode_block_5/while/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_2/stack"
  op: "Pack"
  input: "bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_2/stack_1"
  op: "Pack"
  input: "bboxes_encode_block_5/while/add_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_2/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_2"
  op: "StridedSlice"
  input: "bboxes_encode_block_5/while/strided_slice_2/Enter"
  input: "bboxes_encode_block_5/while/strided_slice_2/stack"
  input: "bboxes_encode_block_5/while/strided_slice_2/stack_1"
  input: "bboxes_encode_block_5/while/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_2/Enter"
  op: "Enter"
  input: "ssd_preprocessing_train/random_flip_left_right/cond_1/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "bboxes_encode_block_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_3/stack"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_3/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_3/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_3"
  op: "StridedSlice"
  input: "bboxes_encode_block_5/while/strided_slice_2"
  input: "bboxes_encode_block_5/while/strided_slice_3/stack"
  input: "bboxes_encode_block_5/while/strided_slice_3/stack_1"
  input: "bboxes_encode_block_5/while/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Maximum/x"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\270\036\205=\200(\265<\300\006E>\000\345\353\275"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Maximum"
  op: "Maximum"
  input: "bboxes_encode_block_5/while/Maximum/x"
  input: "bboxes_encode_block_5/while/strided_slice_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_4/stack"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_4/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_4/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_4"
  op: "StridedSlice"
  input: "bboxes_encode_block_5/while/strided_slice_2"
  input: "bboxes_encode_block_5/while/strided_slice_4/stack"
  input: "bboxes_encode_block_5/while/strided_slice_4/stack_1"
  input: "bboxes_encode_block_5/while/strided_slice_4/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Maximum_1/x"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\270\036\205=\200(\265<\000\345\353\275\300\006E>"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Maximum_1"
  op: "Maximum"
  input: "bboxes_encode_block_5/while/Maximum_1/x"
  input: "bboxes_encode_block_5/while/strided_slice_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_5/stack"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_5/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_5/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_5"
  op: "StridedSlice"
  input: "bboxes_encode_block_5/while/strided_slice_2"
  input: "bboxes_encode_block_5/while/strided_slice_5/stack"
  input: "bboxes_encode_block_5/while/strided_slice_5/stack_1"
  input: "bboxes_encode_block_5/while/strided_slice_5/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Minimum/x"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: ")\\o?\274Vz?P\276N?P\276\216?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Minimum"
  op: "Minimum"
  input: "bboxes_encode_block_5/while/Minimum/x"
  input: "bboxes_encode_block_5/while/strided_slice_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_6/stack"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_6/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_6/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_6"
  op: "StridedSlice"
  input: "bboxes_encode_block_5/while/strided_slice_2"
  input: "bboxes_encode_block_5/while/strided_slice_6/stack"
  input: "bboxes_encode_block_5/while/strided_slice_6/stack_1"
  input: "bboxes_encode_block_5/while/strided_slice_6/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Minimum_1/x"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: ")\\o?\274Vz?P\276\216?P\276N?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Minimum_1"
  op: "Minimum"
  input: "bboxes_encode_block_5/while/Minimum_1/x"
  input: "bboxes_encode_block_5/while/strided_slice_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub"
  op: "Sub"
  input: "bboxes_encode_block_5/while/Minimum"
  input: "bboxes_encode_block_5/while/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Maximum_2/y"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Maximum_2"
  op: "Maximum"
  input: "bboxes_encode_block_5/while/sub"
  input: "bboxes_encode_block_5/while/Maximum_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub_1"
  op: "Sub"
  input: "bboxes_encode_block_5/while/Minimum_1"
  input: "bboxes_encode_block_5/while/Maximum_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Maximum_3/y"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Maximum_3"
  op: "Maximum"
  input: "bboxes_encode_block_5/while/sub_1"
  input: "bboxes_encode_block_5/while/Maximum_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/mul"
  op: "Mul"
  input: "bboxes_encode_block_5/while/Maximum_2"
  input: "bboxes_encode_block_5/while/Maximum_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub_2/x"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        tensor_content: "3\304A?\"\333i?2\304A?2\304A?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub_2"
  op: "Sub"
  input: "bboxes_encode_block_5/while/sub_2/x"
  input: "bboxes_encode_block_5/while/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_7/stack"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_7/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_7/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_7"
  op: "StridedSlice"
  input: "bboxes_encode_block_5/while/strided_slice_2"
  input: "bboxes_encode_block_5/while/strided_slice_7/stack"
  input: "bboxes_encode_block_5/while/strided_slice_7/stack_1"
  input: "bboxes_encode_block_5/while/strided_slice_7/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_8/stack"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_8/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_8/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_8"
  op: "StridedSlice"
  input: "bboxes_encode_block_5/while/strided_slice_2"
  input: "bboxes_encode_block_5/while/strided_slice_8/stack"
  input: "bboxes_encode_block_5/while/strided_slice_8/stack_1"
  input: "bboxes_encode_block_5/while/strided_slice_8/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub_3"
  op: "Sub"
  input: "bboxes_encode_block_5/while/strided_slice_7"
  input: "bboxes_encode_block_5/while/strided_slice_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_9/stack"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_9/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_9/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_9"
  op: "StridedSlice"
  input: "bboxes_encode_block_5/while/strided_slice_2"
  input: "bboxes_encode_block_5/while/strided_slice_9/stack"
  input: "bboxes_encode_block_5/while/strided_slice_9/stack_1"
  input: "bboxes_encode_block_5/while/strided_slice_9/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_10/stack"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_10/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_10/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_10"
  op: "StridedSlice"
  input: "bboxes_encode_block_5/while/strided_slice_2"
  input: "bboxes_encode_block_5/while/strided_slice_10/stack"
  input: "bboxes_encode_block_5/while/strided_slice_10/stack_1"
  input: "bboxes_encode_block_5/while/strided_slice_10/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub_4"
  op: "Sub"
  input: "bboxes_encode_block_5/while/strided_slice_9"
  input: "bboxes_encode_block_5/while/strided_slice_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/mul_1"
  op: "Mul"
  input: "bboxes_encode_block_5/while/sub_3"
  input: "bboxes_encode_block_5/while/sub_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/add_2"
  op: "Add"
  input: "bboxes_encode_block_5/while/sub_2"
  input: "bboxes_encode_block_5/while/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/div"
  op: "RealDiv"
  input: "bboxes_encode_block_5/while/mul"
  input: "bboxes_encode_block_5/while/add_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Greater"
  op: "Greater"
  input: "bboxes_encode_block_5/while/div"
  input: "bboxes_encode_block_5/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Greater_1/y"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Greater_1"
  op: "Greater"
  input: "bboxes_encode_block_5/while/Identity_2"
  input: "bboxes_encode_block_5/while/Greater_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/LogicalAnd"
  op: "LogicalAnd"
  input: "bboxes_encode_block_5/while/Greater"
  input: "bboxes_encode_block_5/while/Greater_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Less_1/y"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Less_1"
  op: "Less"
  input: "bboxes_encode_block_5/while/strided_slice_1"
  input: "bboxes_encode_block_5/while/Less_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/LogicalAnd_1"
  op: "LogicalAnd"
  input: "bboxes_encode_block_5/while/LogicalAnd"
  input: "bboxes_encode_block_5/while/Less_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Cast"
  op: "Cast"
  input: "bboxes_encode_block_5/while/LogicalAnd_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Cast_1"
  op: "Cast"
  input: "bboxes_encode_block_5/while/LogicalAnd_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/mul_2"
  op: "Mul"
  input: "bboxes_encode_block_5/while/Cast"
  input: "bboxes_encode_block_5/while/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub_5/x"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub_5"
  op: "Sub"
  input: "bboxes_encode_block_5/while/sub_5/x"
  input: "bboxes_encode_block_5/while/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/mul_3"
  op: "Mul"
  input: "bboxes_encode_block_5/while/sub_5"
  input: "bboxes_encode_block_5/while/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/add_3"
  op: "Add"
  input: "bboxes_encode_block_5/while/mul_2"
  input: "bboxes_encode_block_5/while/mul_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Select"
  op: "Select"
  input: "bboxes_encode_block_5/while/LogicalAnd_1"
  input: "bboxes_encode_block_5/while/div"
  input: "bboxes_encode_block_5/while/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_11/stack"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_11/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_11/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_11"
  op: "StridedSlice"
  input: "bboxes_encode_block_5/while/strided_slice_2"
  input: "bboxes_encode_block_5/while/strided_slice_11/stack"
  input: "bboxes_encode_block_5/while/strided_slice_11/stack_1"
  input: "bboxes_encode_block_5/while/strided_slice_11/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/mul_4"
  op: "Mul"
  input: "bboxes_encode_block_5/while/Cast_1"
  input: "bboxes_encode_block_5/while/strided_slice_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub_6/x"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub_6"
  op: "Sub"
  input: "bboxes_encode_block_5/while/sub_6/x"
  input: "bboxes_encode_block_5/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/mul_5"
  op: "Mul"
  input: "bboxes_encode_block_5/while/sub_6"
  input: "bboxes_encode_block_5/while/Identity_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/add_4"
  op: "Add"
  input: "bboxes_encode_block_5/while/mul_4"
  input: "bboxes_encode_block_5/while/mul_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_12/stack"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_12/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_12/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_12"
  op: "StridedSlice"
  input: "bboxes_encode_block_5/while/strided_slice_2"
  input: "bboxes_encode_block_5/while/strided_slice_12/stack"
  input: "bboxes_encode_block_5/while/strided_slice_12/stack_1"
  input: "bboxes_encode_block_5/while/strided_slice_12/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/mul_6"
  op: "Mul"
  input: "bboxes_encode_block_5/while/Cast_1"
  input: "bboxes_encode_block_5/while/strided_slice_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub_7/x"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub_7"
  op: "Sub"
  input: "bboxes_encode_block_5/while/sub_7/x"
  input: "bboxes_encode_block_5/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/mul_7"
  op: "Mul"
  input: "bboxes_encode_block_5/while/sub_7"
  input: "bboxes_encode_block_5/while/Identity_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/add_5"
  op: "Add"
  input: "bboxes_encode_block_5/while/mul_6"
  input: "bboxes_encode_block_5/while/mul_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_13/stack"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_13/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_13/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_13"
  op: "StridedSlice"
  input: "bboxes_encode_block_5/while/strided_slice_2"
  input: "bboxes_encode_block_5/while/strided_slice_13/stack"
  input: "bboxes_encode_block_5/while/strided_slice_13/stack_1"
  input: "bboxes_encode_block_5/while/strided_slice_13/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/mul_8"
  op: "Mul"
  input: "bboxes_encode_block_5/while/Cast_1"
  input: "bboxes_encode_block_5/while/strided_slice_13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub_8/x"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub_8"
  op: "Sub"
  input: "bboxes_encode_block_5/while/sub_8/x"
  input: "bboxes_encode_block_5/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/mul_9"
  op: "Mul"
  input: "bboxes_encode_block_5/while/sub_8"
  input: "bboxes_encode_block_5/while/Identity_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/add_6"
  op: "Add"
  input: "bboxes_encode_block_5/while/mul_8"
  input: "bboxes_encode_block_5/while/mul_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_14/stack"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_14/stack_1"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_14/stack_2"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/strided_slice_14"
  op: "StridedSlice"
  input: "bboxes_encode_block_5/while/strided_slice_2"
  input: "bboxes_encode_block_5/while/strided_slice_14/stack"
  input: "bboxes_encode_block_5/while/strided_slice_14/stack_1"
  input: "bboxes_encode_block_5/while/strided_slice_14/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/mul_10"
  op: "Mul"
  input: "bboxes_encode_block_5/while/Cast_1"
  input: "bboxes_encode_block_5/while/strided_slice_14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub_9/x"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/sub_9"
  op: "Sub"
  input: "bboxes_encode_block_5/while/sub_9/x"
  input: "bboxes_encode_block_5/while/Cast_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/mul_11"
  op: "Mul"
  input: "bboxes_encode_block_5/while/sub_9"
  input: "bboxes_encode_block_5/while/Identity_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/add_7"
  op: "Add"
  input: "bboxes_encode_block_5/while/mul_10"
  input: "bboxes_encode_block_5/while/mul_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/add_8/y"
  op: "Const"
  input: "^bboxes_encode_block_5/while/Identity"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/add_8"
  op: "Add"
  input: "bboxes_encode_block_5/while/Identity"
  input: "bboxes_encode_block_5/while/add_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/NextIteration"
  op: "NextIteration"
  input: "bboxes_encode_block_5/while/add_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/NextIteration_1"
  op: "NextIteration"
  input: "bboxes_encode_block_5/while/add_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/NextIteration_2"
  op: "NextIteration"
  input: "bboxes_encode_block_5/while/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/NextIteration_3"
  op: "NextIteration"
  input: "bboxes_encode_block_5/while/add_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/NextIteration_4"
  op: "NextIteration"
  input: "bboxes_encode_block_5/while/add_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/NextIteration_5"
  op: "NextIteration"
  input: "bboxes_encode_block_5/while/add_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/NextIteration_6"
  op: "NextIteration"
  input: "bboxes_encode_block_5/while/add_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Exit"
  op: "Exit"
  input: "bboxes_encode_block_5/while/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Exit_1"
  op: "Exit"
  input: "bboxes_encode_block_5/while/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Exit_2"
  op: "Exit"
  input: "bboxes_encode_block_5/while/Switch_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Exit_3"
  op: "Exit"
  input: "bboxes_encode_block_5/while/Switch_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Exit_4"
  op: "Exit"
  input: "bboxes_encode_block_5/while/Switch_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Exit_5"
  op: "Exit"
  input: "bboxes_encode_block_5/while/Switch_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/while/Exit_6"
  op: "Exit"
  input: "bboxes_encode_block_5/while/Switch_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/add"
  op: "Add"
  input: "bboxes_encode_block_5/while/Exit_5"
  input: "bboxes_encode_block_5/while/Exit_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv"
  op: "RealDiv"
  input: "bboxes_encode_block_5/add"
  input: "bboxes_encode_block_5/truediv/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/add_1"
  op: "Add"
  input: "bboxes_encode_block_5/while/Exit_6"
  input: "bboxes_encode_block_5/while/Exit_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_1"
  op: "RealDiv"
  input: "bboxes_encode_block_5/add_1"
  input: "bboxes_encode_block_5/truediv_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/sub"
  op: "Sub"
  input: "bboxes_encode_block_5/while/Exit_5"
  input: "bboxes_encode_block_5/while/Exit_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/sub_1"
  op: "Sub"
  input: "bboxes_encode_block_5/while/Exit_6"
  input: "bboxes_encode_block_5/while/Exit_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/sub_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/sub_2"
  op: "Sub"
  input: "bboxes_encode_block_5/truediv"
  input: "bboxes_encode_block_5/sub_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "R\270^?x\255t?\240|\035?\240|\235?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_2"
  op: "RealDiv"
  input: "bboxes_encode_block_5/sub_2"
  input: "bboxes_encode_block_5/truediv_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_3"
  op: "RealDiv"
  input: "bboxes_encode_block_5/truediv_2"
  input: "bboxes_encode_block_5/truediv_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/sub_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/sub_3"
  op: "Sub"
  input: "bboxes_encode_block_5/truediv_1"
  input: "bboxes_encode_block_5/sub_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_4/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "R\270^?x\255t?\240|\235?\240|\035?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_4"
  op: "RealDiv"
  input: "bboxes_encode_block_5/sub_3"
  input: "bboxes_encode_block_5/truediv_4/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_5/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_5"
  op: "RealDiv"
  input: "bboxes_encode_block_5/truediv_4"
  input: "bboxes_encode_block_5/truediv_5/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_6/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "R\270^?x\255t?\240|\035?\240|\235?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_6"
  op: "RealDiv"
  input: "bboxes_encode_block_5/sub"
  input: "bboxes_encode_block_5/truediv_6/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/Log"
  op: "Log"
  input: "bboxes_encode_block_5/truediv_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_7/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_7"
  op: "RealDiv"
  input: "bboxes_encode_block_5/Log"
  input: "bboxes_encode_block_5/truediv_7/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_8/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "R\270^?x\255t?\240|\235?\240|\035?"
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_8"
  op: "RealDiv"
  input: "bboxes_encode_block_5/sub_1"
  input: "bboxes_encode_block_5/truediv_8/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/Log_1"
  op: "Log"
  input: "bboxes_encode_block_5/truediv_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_9/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/truediv_9"
  op: "RealDiv"
  input: "bboxes_encode_block_5/Log_1"
  input: "bboxes_encode_block_5/truediv_9/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "bboxes_encode_block_5/stack"
  op: "Pack"
  input: "bboxes_encode_block_5/truediv_5"
  input: "bboxes_encode_block_5/truediv_3"
  input: "bboxes_encode_block_5/truediv_9"
  input: "bboxes_encode_block_5/truediv_7"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "batch/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "batch/fifo_queue"
  op: "FIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 40
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch/fifo_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "batch/fifo_queue"
  input: "ssd_preprocessing_train/transpose"
  input: "bboxes_encode_block_0/while/Exit_1"
  input: "bboxes_encode_block_1/while/Exit_1"
  input: "bboxes_encode_block_2/while/Exit_1"
  input: "bboxes_encode_block_3/while/Exit_1"
  input: "bboxes_encode_block_4/while/Exit_1"
  input: "bboxes_encode_block_5/while/Exit_1"
  input: "bboxes_encode_block_0/stack"
  input: "bboxes_encode_block_1/stack"
  input: "bboxes_encode_block_2/stack"
  input: "bboxes_encode_block_3/stack"
  input: "bboxes_encode_block_4/stack"
  input: "bboxes_encode_block_5/stack"
  input: "bboxes_encode_block_0/while/Exit_2"
  input: "bboxes_encode_block_1/while/Exit_2"
  input: "bboxes_encode_block_2/while/Exit_2"
  input: "bboxes_encode_block_3/while/Exit_2"
  input: "bboxes_encode_block_4/while/Exit_2"
  input: "bboxes_encode_block_5/while/Exit_2"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "batch/fifo_queue_Close"
  op: "QueueCloseV2"
  input: "batch/fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "batch/fifo_queue_Close_1"
  op: "QueueCloseV2"
  input: "batch/fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "batch/fifo_queue_Size"
  op: "QueueSizeV2"
  input: "batch/fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/ToFloat"
  op: "Cast"
  input: "batch/fifo_queue_Size"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025
      }
    }
  }
}
node {
  name: "batch/mul"
  op: "Mul"
  input: "batch/ToFloat"
  input: "batch/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/fraction_of_40_full/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "batch/fraction_of_40_full"
      }
    }
  }
}
node {
  name: "batch/fraction_of_40_full"
  op: "ScalarSummary"
  input: "batch/fraction_of_40_full/tags"
  input: "batch/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "batch"
  op: "QueueDequeueManyV2"
  input: "batch/fifo_queue"
  input: "batch/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "prefetch_queue/fifo_queue"
  op: "FIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 2
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "prefetch_queue/fifo_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "prefetch_queue/fifo_queue"
  input: "batch"
  input: "batch:1"
  input: "batch:2"
  input: "batch:3"
  input: "batch:4"
  input: "batch:5"
  input: "batch:6"
  input: "batch:7"
  input: "batch:8"
  input: "batch:9"
  input: "batch:10"
  input: "batch:11"
  input: "batch:12"
  input: "batch:13"
  input: "batch:14"
  input: "batch:15"
  input: "batch:16"
  input: "batch:17"
  input: "batch:18"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "prefetch_queue/fifo_queue_Close"
  op: "QueueCloseV2"
  input: "prefetch_queue/fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "prefetch_queue/fifo_queue_Close_1"
  op: "QueueCloseV2"
  input: "prefetch_queue/fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "prefetch_queue/fifo_queue_Size"
  op: "QueueSizeV2"
  input: "prefetch_queue/fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "prefetch_queue/ToFloat"
  op: "Cast"
  input: "prefetch_queue/fifo_queue_Size"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "prefetch_queue/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "prefetch_queue/mul"
  op: "Mul"
  input: "prefetch_queue/ToFloat"
  input: "prefetch_queue/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "prefetch_queue/fraction_of_2_full/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "prefetch_queue/fraction_of_2_full"
      }
    }
  }
}
node {
  name: "prefetch_queue/fraction_of_2_full"
  op: "ScalarSummary"
  input: "prefetch_queue/fraction_of_2_full/tags"
  input: "prefetch_queue/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fifo_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "prefetch_queue/fifo_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.099750936
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.099750936
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_1/weights"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/conv1/conv1_1/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/conv1/conv1_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_1/biases"
  input: "ssd_300_vgg/conv1/conv1_1/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/conv1/conv1_1/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/Conv2D"
  op: "Conv2D"
  input: "fifo_queue_Dequeue"
  input: "ssd_300_vgg/conv1/conv1_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/conv1/conv1_1/Conv2D"
  input: "ssd_300_vgg/conv1/conv1_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/Relu"
  op: "Relu"
  input: "ssd_300_vgg/conv1/conv1_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_2/weights"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/conv1/conv1_2/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/conv1/conv1_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_2/biases"
  input: "ssd_300_vgg/conv1/conv1_2/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/conv1/conv1_2/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/conv1/conv1_1/Relu"
  input: "ssd_300_vgg/conv1/conv1_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/conv1/conv1_2/Conv2D"
  input: "ssd_300_vgg/conv1/conv1_2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/Relu"
  op: "Relu"
  input: "ssd_300_vgg/conv1/conv1_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/pool1/MaxPool"
  op: "MaxPool"
  input: "ssd_300_vgg/conv1/conv1_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.058925565
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.058925565
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_1/weights"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/conv2/conv2_1/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/conv2/conv2_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_1/biases"
  input: "ssd_300_vgg/conv2/conv2_1/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/conv2/conv2_1/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/pool1/MaxPool"
  input: "ssd_300_vgg/conv2/conv2_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/conv2/conv2_1/Conv2D"
  input: "ssd_300_vgg/conv2/conv2_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/Relu"
  op: "Relu"
  input: "ssd_300_vgg/conv2/conv2_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.051031038
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.051031038
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_2/weights"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/conv2/conv2_2/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/conv2/conv2_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_2/biases"
  input: "ssd_300_vgg/conv2/conv2_2/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/conv2/conv2_2/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/conv2/conv2_1/Relu"
  input: "ssd_300_vgg/conv2/conv2_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/conv2/conv2_2/Conv2D"
  input: "ssd_300_vgg/conv2/conv2_2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/Relu"
  op: "Relu"
  input: "ssd_300_vgg/conv2/conv2_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/pool2/MaxPool"
  op: "MaxPool"
  input: "ssd_300_vgg/conv2/conv2_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.041666668
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.041666668
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_1/weights"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_1/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/conv3/conv3_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_1/biases"
  input: "ssd_300_vgg/conv3/conv3_1/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_1/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/pool2/MaxPool"
  input: "ssd_300_vgg/conv3/conv3_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/conv3/conv3_1/Conv2D"
  input: "ssd_300_vgg/conv3/conv3_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/Relu"
  op: "Relu"
  input: "ssd_300_vgg/conv3/conv3_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.036084391
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.036084391
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_2/weights"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_2/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/conv3/conv3_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_2/biases"
  input: "ssd_300_vgg/conv3/conv3_2/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_2/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/conv3/conv3_1/Relu"
  input: "ssd_300_vgg/conv3/conv3_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/conv3/conv3_2/Conv2D"
  input: "ssd_300_vgg/conv3/conv3_2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/Relu"
  op: "Relu"
  input: "ssd_300_vgg/conv3/conv3_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.036084391
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.036084391
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_3/weights"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_3/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/conv3/conv3_3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_3/biases"
  input: "ssd_300_vgg/conv3/conv3_3/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_3/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/conv3/conv3_2/Relu"
  input: "ssd_300_vgg/conv3/conv3_3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/conv3/conv3_3/Conv2D"
  input: "ssd_300_vgg/conv3/conv3_3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/Relu"
  op: "Relu"
  input: "ssd_300_vgg/conv3/conv3_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/pool3/MaxPool"
  op: "MaxPool"
  input: "ssd_300_vgg/conv3/conv3_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.029462783
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.029462783
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_1/weights"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_1/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/conv4/conv4_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_1/biases"
  input: "ssd_300_vgg/conv4/conv4_1/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_1/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/pool3/MaxPool"
  input: "ssd_300_vgg/conv4/conv4_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/conv4/conv4_1/Conv2D"
  input: "ssd_300_vgg/conv4/conv4_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/Relu"
  op: "Relu"
  input: "ssd_300_vgg/conv4/conv4_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_2/weights"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_2/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/conv4/conv4_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_2/biases"
  input: "ssd_300_vgg/conv4/conv4_2/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_2/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/conv4/conv4_1/Relu"
  input: "ssd_300_vgg/conv4/conv4_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/conv4/conv4_2/Conv2D"
  input: "ssd_300_vgg/conv4/conv4_2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/Relu"
  op: "Relu"
  input: "ssd_300_vgg/conv4/conv4_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_3/weights"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_3/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/conv4/conv4_3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_3/biases"
  input: "ssd_300_vgg/conv4/conv4_3/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_3/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/conv4/conv4_2/Relu"
  input: "ssd_300_vgg/conv4/conv4_3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/conv4/conv4_3/Conv2D"
  input: "ssd_300_vgg/conv4/conv4_3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/Relu"
  op: "Relu"
  input: "ssd_300_vgg/conv4/conv4_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/pool4/MaxPool"
  op: "MaxPool"
  input: "ssd_300_vgg/conv4/conv4_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_1/weights"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_1/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/conv5/conv5_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_1/biases"
  input: "ssd_300_vgg/conv5/conv5_1/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_1/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/pool4/MaxPool"
  input: "ssd_300_vgg/conv5/conv5_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/conv5/conv5_1/Conv2D"
  input: "ssd_300_vgg/conv5/conv5_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/Relu"
  op: "Relu"
  input: "ssd_300_vgg/conv5/conv5_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_2/weights"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_2/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/conv5/conv5_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_2/biases"
  input: "ssd_300_vgg/conv5/conv5_2/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_2/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/conv5/conv5_1/Relu"
  input: "ssd_300_vgg/conv5/conv5_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/conv5/conv5_2/Conv2D"
  input: "ssd_300_vgg/conv5/conv5_2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/Relu"
  op: "Relu"
  input: "ssd_300_vgg/conv5/conv5_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_3/weights"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_3/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/conv5/conv5_3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_3/biases"
  input: "ssd_300_vgg/conv5/conv5_3/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_3/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/conv5/conv5_2/Relu"
  input: "ssd_300_vgg/conv5/conv5_3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/conv5/conv5_3/Conv2D"
  input: "ssd_300_vgg/conv5/conv5_3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/Relu"
  op: "Relu"
  input: "ssd_300_vgg/conv5/conv5_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/pool5/MaxPool"
  op: "MaxPool"
  input: "ssd_300_vgg/conv5/conv5_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 3
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.020833334
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.020833334
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/conv6/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/conv6/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/conv6/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv6/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/conv6/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/conv6/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/conv6/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv6/weights"
  input: "ssd_300_vgg/conv6/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/conv6/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/conv6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv6/biases/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv6/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv6/biases"
  input: "ssd_300_vgg/conv6/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/conv6/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/filter_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\006\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\006\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\006\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "ssd_300_vgg/pool5/MaxPool"
  input: "ssd_300_vgg/conv6/SpaceToBatchND/block_shape"
  input: "ssd_300_vgg/conv6/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
          dim {
            size: 512
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/conv6/SpaceToBatchND"
  input: "ssd_300_vgg/conv6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
          dim {
            size: 1024
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\006\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "ssd_300_vgg/conv6/Conv2D"
  input: "ssd_300_vgg/conv6/BatchToSpaceND/block_shape"
  input: "ssd_300_vgg/conv6/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/conv6/BatchToSpaceND"
  input: "ssd_300_vgg/conv6/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/Relu"
  op: "Relu"
  input: "ssd_300_vgg/conv6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout/dropout/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout/dropout/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\000\004\000\000\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout/dropout/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout/dropout/sub"
  op: "Sub"
  input: "ssd_300_vgg/dropout/dropout/sub/x"
  input: "ssd_300_vgg/dropout/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/dropout/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/dropout/dropout/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/dropout/dropout/random_uniform/max"
  input: "ssd_300_vgg/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout/dropout/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/dropout/dropout/random_uniform/RandomUniform"
  input: "ssd_300_vgg/dropout/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout/dropout/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/dropout/dropout/random_uniform/mul"
  input: "ssd_300_vgg/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout/dropout/add"
  op: "Add"
  input: "ssd_300_vgg/dropout/dropout/sub"
  input: "ssd_300_vgg/dropout/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout/dropout/Floor"
  op: "Floor"
  input: "ssd_300_vgg/dropout/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout/dropout/truediv"
  op: "RealDiv"
  input: "ssd_300_vgg/conv6/Relu"
  input: "ssd_300_vgg/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout/dropout/mul"
  op: "Mul"
  input: "ssd_300_vgg/dropout/dropout/truediv"
  input: "ssd_300_vgg/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.054126587
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054126587
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/conv7/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/conv7/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/conv7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv7/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/conv7/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/conv7/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/conv7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv7/weights"
  input: "ssd_300_vgg/conv7/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/conv7/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/conv7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv7/biases/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv7/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv7/biases"
  input: "ssd_300_vgg/conv7/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/conv7/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/dropout/dropout/mul"
  input: "ssd_300_vgg/conv7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/conv7/Conv2D"
  input: "ssd_300_vgg/conv7/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/Relu"
  op: "Relu"
  input: "ssd_300_vgg/conv7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout_1/dropout/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout_1/dropout/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\000\004\000\000\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout_1/dropout/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout_1/dropout/sub"
  op: "Sub"
  input: "ssd_300_vgg/dropout_1/dropout/sub/x"
  input: "ssd_300_vgg/dropout_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout_1/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout_1/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/dropout_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/dropout_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/dropout_1/dropout/random_uniform/max"
  input: "ssd_300_vgg/dropout_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/dropout_1/dropout/random_uniform/RandomUniform"
  input: "ssd_300_vgg/dropout_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout_1/dropout/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/dropout_1/dropout/random_uniform/mul"
  input: "ssd_300_vgg/dropout_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout_1/dropout/add"
  op: "Add"
  input: "ssd_300_vgg/dropout_1/dropout/sub"
  input: "ssd_300_vgg/dropout_1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout_1/dropout/Floor"
  op: "Floor"
  input: "ssd_300_vgg/dropout_1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout_1/dropout/truediv"
  op: "RealDiv"
  input: "ssd_300_vgg/conv7/Relu"
  input: "ssd_300_vgg/dropout_1/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/dropout_1/dropout/mul"
  op: "Mul"
  input: "ssd_300_vgg/dropout_1/dropout/truediv"
  input: "ssd_300_vgg/dropout_1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.068465322
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.068465322
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block8/conv1x1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block8/conv1x1/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block8/conv1x1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block8/conv1x1/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block8/conv1x1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block8/conv1x1/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block8/conv1x1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv1x1/weights"
  input: "ssd_300_vgg/block8/conv1x1/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block8/conv1x1/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block8/conv1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv1x1/biases"
  input: "ssd_300_vgg/block8/conv1x1/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block8/conv1x1/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/dropout_1/dropout/mul"
  input: "ssd_300_vgg/block8/conv1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block8/conv1x1/Conv2D"
  input: "ssd_300_vgg/block8/conv1x1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/Relu"
  op: "Relu"
  input: "ssd_300_vgg/block8/conv1x1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/pad2d/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/pad2d/Pad"
  op: "Pad"
  input: "ssd_300_vgg/block8/conv1x1/Relu"
  input: "ssd_300_vgg/block8/pad2d/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 21
          }
          dim {
            size: 21
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.029462783
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.029462783
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block8/conv3x3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block8/conv3x3/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block8/conv3x3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block8/conv3x3/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block8/conv3x3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block8/conv3x3/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block8/conv3x3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv3x3/weights"
  input: "ssd_300_vgg/block8/conv3x3/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block8/conv3x3/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block8/conv3x3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv3x3/biases"
  input: "ssd_300_vgg/block8/conv3x3/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block8/conv3x3/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block8/pad2d/Pad"
  input: "ssd_300_vgg/block8/conv3x3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block8/conv3x3/Conv2D"
  input: "ssd_300_vgg/block8/conv3x3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/Relu"
  op: "Relu"
  input: "ssd_300_vgg/block8/conv3x3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.096824586
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.096824586
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block9/conv1x1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block9/conv1x1/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block9/conv1x1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block9/conv1x1/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block9/conv1x1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block9/conv1x1/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block9/conv1x1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv1x1/weights"
  input: "ssd_300_vgg/block9/conv1x1/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block9/conv1x1/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block9/conv1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv1x1/biases"
  input: "ssd_300_vgg/block9/conv1x1/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block9/conv1x1/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block8/conv3x3/Relu"
  input: "ssd_300_vgg/block9/conv1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block9/conv1x1/Conv2D"
  input: "ssd_300_vgg/block9/conv1x1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/Relu"
  op: "Relu"
  input: "ssd_300_vgg/block9/conv1x1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/pad2d/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/pad2d/Pad"
  op: "Pad"
  input: "ssd_300_vgg/block9/conv1x1/Relu"
  input: "ssd_300_vgg/block9/pad2d/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.041666668
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.041666668
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block9/conv3x3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block9/conv3x3/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block9/conv3x3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block9/conv3x3/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block9/conv3x3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block9/conv3x3/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block9/conv3x3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv3x3/weights"
  input: "ssd_300_vgg/block9/conv3x3/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block9/conv3x3/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block9/conv3x3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv3x3/biases"
  input: "ssd_300_vgg/block9/conv3x3/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block9/conv3x3/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block9/pad2d/Pad"
  input: "ssd_300_vgg/block9/conv3x3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block9/conv3x3/Conv2D"
  input: "ssd_300_vgg/block9/conv3x3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/Relu"
  op: "Relu"
  input: "ssd_300_vgg/block9/conv3x3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block10/conv1x1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block10/conv1x1/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block10/conv1x1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block10/conv1x1/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block10/conv1x1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block10/conv1x1/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block10/conv1x1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv1x1/weights"
  input: "ssd_300_vgg/block10/conv1x1/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block10/conv1x1/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block10/conv1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv1x1/biases"
  input: "ssd_300_vgg/block10/conv1x1/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block10/conv1x1/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block9/conv3x3/Relu"
  input: "ssd_300_vgg/block10/conv1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block10/conv1x1/Conv2D"
  input: "ssd_300_vgg/block10/conv1x1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/Relu"
  op: "Relu"
  input: "ssd_300_vgg/block10/conv1x1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.041666668
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.041666668
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block10/conv3x3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block10/conv3x3/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block10/conv3x3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block10/conv3x3/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block10/conv3x3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block10/conv3x3/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block10/conv3x3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv3x3/weights"
  input: "ssd_300_vgg/block10/conv3x3/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block10/conv3x3/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block10/conv3x3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv3x3/biases"
  input: "ssd_300_vgg/block10/conv3x3/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block10/conv3x3/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block10/conv1x1/Relu"
  input: "ssd_300_vgg/block10/conv3x3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block10/conv3x3/Conv2D"
  input: "ssd_300_vgg/block10/conv3x3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/Relu"
  op: "Relu"
  input: "ssd_300_vgg/block10/conv3x3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block11/conv1x1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block11/conv1x1/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block11/conv1x1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block11/conv1x1/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block11/conv1x1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block11/conv1x1/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block11/conv1x1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv1x1/weights"
  input: "ssd_300_vgg/block11/conv1x1/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block11/conv1x1/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block11/conv1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv1x1/biases"
  input: "ssd_300_vgg/block11/conv1x1/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block11/conv1x1/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block10/conv3x3/Relu"
  input: "ssd_300_vgg/block11/conv1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block11/conv1x1/Conv2D"
  input: "ssd_300_vgg/block11/conv1x1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/Relu"
  op: "Relu"
  input: "ssd_300_vgg/block11/conv1x1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.041666668
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.041666668
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block11/conv3x3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block11/conv3x3/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block11/conv3x3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block11/conv3x3/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block11/conv3x3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block11/conv3x3/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block11/conv3x3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv3x3/weights"
  input: "ssd_300_vgg/block11/conv3x3/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block11/conv3x3/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block11/conv3x3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv3x3/biases"
  input: "ssd_300_vgg/block11/conv3x3/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block11/conv3x3/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block11/conv1x1/Relu"
  input: "ssd_300_vgg/block11/conv3x3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block11/conv3x3/Conv2D"
  input: "ssd_300_vgg/block11/conv3x3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/Relu"
  op: "Relu"
  input: "ssd_300_vgg/block11/conv3x3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/range/limit"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/range"
  op: "Range"
  input: "ssd_300_vgg/block4_box/L2Normalization/range/start"
  input: "ssd_300_vgg/block4_box/L2Normalization/range/limit"
  input: "ssd_300_vgg/block4_box/L2Normalization/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Square"
  op: "Square"
  input: "ssd_300_vgg/conv4/conv4_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum"
  op: "Sum"
  input: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Square"
  input: "ssd_300_vgg/block4_box/L2Normalization/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-12
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum"
  op: "Maximum"
  input: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum"
  input: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize"
  op: "Mul"
  input: "ssd_300_vgg/conv4/conv4_3/Relu"
  input: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/gamma"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/gamma/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/Initializer/ones"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/gamma/read"
  op: "Identity"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/ExpandDims"
  op: "ExpandDims"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/read"
  input: "ssd_300_vgg/block4_box/L2Normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "ssd_300_vgg/block4_box/L2Normalization/ExpandDims"
  input: "ssd_300_vgg/block4_box/L2Normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/Mul"
  op: "Mul"
  input: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize"
  input: "ssd_300_vgg/block4_box/L2Normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.035533454
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.035533454
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_loc/weights"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block4_box/conv_loc/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_loc/biases"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block4_box/conv_loc/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block4_box/L2Normalization/Mul"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block4_box/conv_loc/Conv2D"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/channel_to_last/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/channel_to_last/transpose"
  op: "Transpose"
  input: "ssd_300_vgg/block4_box/conv_loc/BiasAdd"
  input: "ssd_300_vgg/block4_box/channel_to_last/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000&\000\000\000&\000\000\000\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/Reshape"
  op: "Reshape"
  input: "ssd_300_vgg/block4_box/channel_to_last/transpose"
  input: "ssd_300_vgg/block4_box/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.035805743
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.035805743
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_cls/weights"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block4_box/conv_cls/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_cls/biases"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block4_box/conv_cls/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block4_box/L2Normalization/Mul"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block4_box/conv_cls/Conv2D"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/channel_to_last_1/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/channel_to_last_1/transpose"
  op: "Transpose"
  input: "ssd_300_vgg/block4_box/conv_cls/BiasAdd"
  input: "ssd_300_vgg/block4_box/channel_to_last_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000&\000\000\000&\000\000\000\004\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/Reshape_1"
  op: "Reshape"
  input: "ssd_300_vgg/block4_box/channel_to_last_1/transpose"
  input: "ssd_300_vgg/block4_box/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax/Reshape"
  op: "Reshape"
  input: "ssd_300_vgg/block4_box/Reshape_1"
  input: "ssd_300_vgg/softmax/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax/Softmax"
  op: "Softmax"
  input: "ssd_300_vgg/softmax/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000&\000\000\000&\000\000\000\004\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax/Reshape_1"
  op: "Reshape"
  input: "ssd_300_vgg/softmax/Softmax"
  input: "ssd_300_vgg/softmax/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025221664
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025221664
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_loc/weights"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block7_box/conv_loc/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_loc/biases"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block7_box/conv_loc/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/conv7/Relu"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 24
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block7_box/conv_loc/Conv2D"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 24
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/channel_to_last/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/channel_to_last/transpose"
  op: "Transpose"
  input: "ssd_300_vgg/block7_box/conv_loc/BiasAdd"
  input: "ssd_300_vgg/block7_box/channel_to_last/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\023\000\000\000\023\000\000\000\006\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/Reshape"
  op: "Reshape"
  input: "ssd_300_vgg/block7_box/channel_to_last/transpose"
  input: "ssd_300_vgg/block7_box/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025367314
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025367314
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_cls/weights"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block7_box/conv_cls/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_cls/biases"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block7_box/conv_cls/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/conv7/Relu"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 12
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block7_box/conv_cls/Conv2D"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 12
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/channel_to_last_1/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/channel_to_last_1/transpose"
  op: "Transpose"
  input: "ssd_300_vgg/block7_box/conv_cls/BiasAdd"
  input: "ssd_300_vgg/block7_box/channel_to_last_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\023\000\000\000\023\000\000\000\006\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/Reshape_1"
  op: "Reshape"
  input: "ssd_300_vgg/block7_box/channel_to_last_1/transpose"
  input: "ssd_300_vgg/block7_box/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_1/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_1/Reshape"
  op: "Reshape"
  input: "ssd_300_vgg/block7_box/Reshape_1"
  input: "ssd_300_vgg/softmax_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17328
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_1/Softmax"
  op: "Softmax"
  input: "ssd_300_vgg/softmax_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17328
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_1/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\023\000\000\000\023\000\000\000\006\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_1/Reshape_1"
  op: "Reshape"
  input: "ssd_300_vgg/softmax_1/Softmax"
  input: "ssd_300_vgg/softmax_1/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.035267282
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.035267282
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_loc/weights"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block8_box/conv_loc/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_loc/biases"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block8_box/conv_loc/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block8/conv3x3/Relu"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 24
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block8_box/conv_loc/Conv2D"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 24
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/channel_to_last/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/channel_to_last/transpose"
  op: "Transpose"
  input: "ssd_300_vgg/block8_box/conv_loc/BiasAdd"
  input: "ssd_300_vgg/block8_box/channel_to_last/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\n\000\000\000\n\000\000\000\006\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/Reshape"
  op: "Reshape"
  input: "ssd_300_vgg/block8_box/channel_to_last/transpose"
  input: "ssd_300_vgg/block8_box/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03566882
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03566882
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_cls/weights"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block8_box/conv_cls/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_cls/biases"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block8_box/conv_cls/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block8/conv3x3/Relu"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 12
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block8_box/conv_cls/Conv2D"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 12
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/channel_to_last_1/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/channel_to_last_1/transpose"
  op: "Transpose"
  input: "ssd_300_vgg/block8_box/conv_cls/BiasAdd"
  input: "ssd_300_vgg/block8_box/channel_to_last_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\n\000\000\000\n\000\000\000\006\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/Reshape_1"
  op: "Reshape"
  input: "ssd_300_vgg/block8_box/channel_to_last_1/transpose"
  input: "ssd_300_vgg/block8_box/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_2/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_2/Reshape"
  op: "Reshape"
  input: "ssd_300_vgg/block8_box/Reshape_1"
  input: "ssd_300_vgg/softmax_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4800
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_2/Softmax"
  op: "Softmax"
  input: "ssd_300_vgg/softmax_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4800
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_2/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\n\000\000\000\n\000\000\000\006\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_2/Reshape_1"
  op: "Reshape"
  input: "ssd_300_vgg/softmax_2/Softmax"
  input: "ssd_300_vgg/softmax_2/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.048795003
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048795003
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_loc/weights"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block9_box/conv_loc/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_loc/biases"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block9_box/conv_loc/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block9/conv3x3/Relu"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 24
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block9_box/conv_loc/Conv2D"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 24
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/channel_to_last/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/channel_to_last/transpose"
  op: "Transpose"
  input: "ssd_300_vgg/block9_box/conv_loc/BiasAdd"
  input: "ssd_300_vgg/block9_box/channel_to_last/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\005\000\000\000\005\000\000\000\006\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/Reshape"
  op: "Reshape"
  input: "ssd_300_vgg/block9_box/channel_to_last/transpose"
  input: "ssd_300_vgg/block9_box/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.049875468
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.049875468
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_cls/weights"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block9_box/conv_cls/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_cls/biases"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block9_box/conv_cls/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block9/conv3x3/Relu"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 12
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block9_box/conv_cls/Conv2D"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 12
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/channel_to_last_1/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/channel_to_last_1/transpose"
  op: "Transpose"
  input: "ssd_300_vgg/block9_box/conv_cls/BiasAdd"
  input: "ssd_300_vgg/block9_box/channel_to_last_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\005\000\000\000\005\000\000\000\006\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/Reshape_1"
  op: "Reshape"
  input: "ssd_300_vgg/block9_box/channel_to_last_1/transpose"
  input: "ssd_300_vgg/block9_box/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_3/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_3/Reshape"
  op: "Reshape"
  input: "ssd_300_vgg/block9_box/Reshape_1"
  input: "ssd_300_vgg/softmax_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_3/Softmax"
  op: "Softmax"
  input: "ssd_300_vgg/softmax_3/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_3/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\005\000\000\000\005\000\000\000\006\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_3/Reshape_1"
  op: "Reshape"
  input: "ssd_300_vgg/softmax_3/Softmax"
  input: "ssd_300_vgg/softmax_3/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.049507376
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.049507376
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_loc/weights"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block10_box/conv_loc/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_loc/biases"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block10_box/conv_loc/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block10/conv3x3/Relu"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block10_box/conv_loc/Conv2D"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/channel_to_last/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/channel_to_last/transpose"
  op: "Transpose"
  input: "ssd_300_vgg/block10_box/conv_loc/BiasAdd"
  input: "ssd_300_vgg/block10_box/channel_to_last/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\003\000\000\000\003\000\000\000\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/Reshape"
  op: "Reshape"
  input: "ssd_300_vgg/block10_box/channel_to_last/transpose"
  input: "ssd_300_vgg/block10_box/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05025189
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05025189
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_cls/weights"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block10_box/conv_cls/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_cls/biases"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block10_box/conv_cls/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block10/conv3x3/Relu"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block10_box/conv_cls/Conv2D"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/channel_to_last_1/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/channel_to_last_1/transpose"
  op: "Transpose"
  input: "ssd_300_vgg/block10_box/conv_cls/BiasAdd"
  input: "ssd_300_vgg/block10_box/channel_to_last_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\003\000\000\000\003\000\000\000\004\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/Reshape_1"
  op: "Reshape"
  input: "ssd_300_vgg/block10_box/channel_to_last_1/transpose"
  input: "ssd_300_vgg/block10_box/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_4/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_4/Reshape"
  op: "Reshape"
  input: "ssd_300_vgg/block10_box/Reshape_1"
  input: "ssd_300_vgg/softmax_4/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_4/Softmax"
  op: "Softmax"
  input: "ssd_300_vgg/softmax_4/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_4/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\003\000\000\000\003\000\000\000\004\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_4/Reshape_1"
  op: "Reshape"
  input: "ssd_300_vgg/softmax_4/Softmax"
  input: "ssd_300_vgg/softmax_4/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.049507376
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.049507376
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_loc/weights"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block11_box/conv_loc/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_loc/biases"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block11_box/conv_loc/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block11/conv3x3/Relu"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block11_box/conv_loc/Conv2D"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/channel_to_last/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/channel_to_last/transpose"
  op: "Transpose"
  input: "ssd_300_vgg/block11_box/conv_loc/BiasAdd"
  input: "ssd_300_vgg/block11_box/channel_to_last/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000\001\000\000\000\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/Reshape"
  op: "Reshape"
  input: "ssd_300_vgg/block11_box/channel_to_last/transpose"
  input: "ssd_300_vgg/block11_box/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05025189
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05025189
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Initializer/random_uniform/max"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Initializer/random_uniform/RandomUniform"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Initializer/random_uniform"
  op: "Add"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Initializer/random_uniform/mul"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_cls/weights"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/read"
  op: "Identity"
  input: "ssd_300_vgg/block11_box/conv_cls/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00050000002
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  input: "ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/biases/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_cls/biases"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/biases/read"
  op: "Identity"
  input: "ssd_300_vgg/block11_box/conv_cls/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/Conv2D"
  op: "Conv2D"
  input: "ssd_300_vgg/block11/conv3x3/Relu"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/BiasAdd"
  op: "BiasAdd"
  input: "ssd_300_vgg/block11_box/conv_cls/Conv2D"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/channel_to_last_1/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/channel_to_last_1/transpose"
  op: "Transpose"
  input: "ssd_300_vgg/block11_box/conv_cls/BiasAdd"
  input: "ssd_300_vgg/block11_box/channel_to_last_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000\001\000\000\000\004\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/Reshape_1"
  op: "Reshape"
  input: "ssd_300_vgg/block11_box/channel_to_last_1/transpose"
  input: "ssd_300_vgg/block11_box/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_5/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_5/Reshape"
  op: "Reshape"
  input: "ssd_300_vgg/block11_box/Reshape_1"
  input: "ssd_300_vgg/softmax_5/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_5/Softmax"
  op: "Softmax"
  input: "ssd_300_vgg/softmax_5/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_5/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000\001\000\000\000\004\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/softmax_5/Reshape_1"
  op: "Reshape"
  input: "ssd_300_vgg/softmax_5/Softmax"
  input: "ssd_300_vgg/softmax_5/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape"
  op: "Reshape"
  input: "ssd_300_vgg/block4_box/Reshape_1"
  input: "ssd_losses/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_1"
  op: "Reshape"
  input: "fifo_queue_Dequeue:1"
  input: "ssd_losses/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_2"
  op: "Reshape"
  input: "fifo_queue_Dequeue:13"
  input: "ssd_losses/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_3"
  op: "Reshape"
  input: "ssd_300_vgg/block4_box/Reshape"
  input: "ssd_losses/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_4"
  op: "Reshape"
  input: "fifo_queue_Dequeue:7"
  input: "ssd_losses/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_5/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_5"
  op: "Reshape"
  input: "ssd_300_vgg/block7_box/Reshape_1"
  input: "ssd_losses/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17328
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_6/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_6"
  op: "Reshape"
  input: "fifo_queue_Dequeue:2"
  input: "ssd_losses/Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17328
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_7/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_7"
  op: "Reshape"
  input: "fifo_queue_Dequeue:14"
  input: "ssd_losses/Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17328
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_8/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_8"
  op: "Reshape"
  input: "ssd_300_vgg/block7_box/Reshape"
  input: "ssd_losses/Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17328
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_9/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_9"
  op: "Reshape"
  input: "fifo_queue_Dequeue:8"
  input: "ssd_losses/Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17328
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_10/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_10"
  op: "Reshape"
  input: "ssd_300_vgg/block8_box/Reshape_1"
  input: "ssd_losses/Reshape_10/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4800
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_11/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_11"
  op: "Reshape"
  input: "fifo_queue_Dequeue:3"
  input: "ssd_losses/Reshape_11/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4800
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_12/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_12"
  op: "Reshape"
  input: "fifo_queue_Dequeue:15"
  input: "ssd_losses/Reshape_12/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4800
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_13/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_13"
  op: "Reshape"
  input: "ssd_300_vgg/block8_box/Reshape"
  input: "ssd_losses/Reshape_13/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4800
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_14/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_14"
  op: "Reshape"
  input: "fifo_queue_Dequeue:9"
  input: "ssd_losses/Reshape_14/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4800
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_15/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_15"
  op: "Reshape"
  input: "ssd_300_vgg/block9_box/Reshape_1"
  input: "ssd_losses/Reshape_15/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_16/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_16"
  op: "Reshape"
  input: "fifo_queue_Dequeue:4"
  input: "ssd_losses/Reshape_16/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_17/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_17"
  op: "Reshape"
  input: "fifo_queue_Dequeue:16"
  input: "ssd_losses/Reshape_17/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_18/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_18"
  op: "Reshape"
  input: "ssd_300_vgg/block9_box/Reshape"
  input: "ssd_losses/Reshape_18/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_19/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_19"
  op: "Reshape"
  input: "fifo_queue_Dequeue:10"
  input: "ssd_losses/Reshape_19/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_20/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_20"
  op: "Reshape"
  input: "ssd_300_vgg/block10_box/Reshape_1"
  input: "ssd_losses/Reshape_20/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_21/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_21"
  op: "Reshape"
  input: "fifo_queue_Dequeue:5"
  input: "ssd_losses/Reshape_21/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_22/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_22"
  op: "Reshape"
  input: "fifo_queue_Dequeue:17"
  input: "ssd_losses/Reshape_22/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_23/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_23"
  op: "Reshape"
  input: "ssd_300_vgg/block10_box/Reshape"
  input: "ssd_losses/Reshape_23/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_24/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_24"
  op: "Reshape"
  input: "fifo_queue_Dequeue:11"
  input: "ssd_losses/Reshape_24/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_25/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_25"
  op: "Reshape"
  input: "ssd_300_vgg/block11_box/Reshape_1"
  input: "ssd_losses/Reshape_25/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_26/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_26"
  op: "Reshape"
  input: "fifo_queue_Dequeue:6"
  input: "ssd_losses/Reshape_26/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_27/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_27"
  op: "Reshape"
  input: "fifo_queue_Dequeue:18"
  input: "ssd_losses/Reshape_27/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_28/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_28"
  op: "Reshape"
  input: "ssd_300_vgg/block11_box/Reshape"
  input: "ssd_losses/Reshape_28/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_29/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_29"
  op: "Reshape"
  input: "fifo_queue_Dequeue:12"
  input: "ssd_losses/Reshape_29/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_losses/concat"
  op: "ConcatV2"
  input: "ssd_losses/Reshape"
  input: "ssd_losses/Reshape_5"
  input: "ssd_losses/Reshape_10"
  input: "ssd_losses/Reshape_15"
  input: "ssd_losses/Reshape_20"
  input: "ssd_losses/Reshape_25"
  input: "ssd_losses/concat/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_losses/concat_1"
  op: "ConcatV2"
  input: "ssd_losses/Reshape_1"
  input: "ssd_losses/Reshape_6"
  input: "ssd_losses/Reshape_11"
  input: "ssd_losses/Reshape_16"
  input: "ssd_losses/Reshape_21"
  input: "ssd_losses/Reshape_26"
  input: "ssd_losses/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_losses/concat_2"
  op: "ConcatV2"
  input: "ssd_losses/Reshape_2"
  input: "ssd_losses/Reshape_7"
  input: "ssd_losses/Reshape_12"
  input: "ssd_losses/Reshape_17"
  input: "ssd_losses/Reshape_22"
  input: "ssd_losses/Reshape_27"
  input: "ssd_losses/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_losses/concat_3"
  op: "ConcatV2"
  input: "ssd_losses/Reshape_3"
  input: "ssd_losses/Reshape_8"
  input: "ssd_losses/Reshape_13"
  input: "ssd_losses/Reshape_18"
  input: "ssd_losses/Reshape_23"
  input: "ssd_losses/Reshape_28"
  input: "ssd_losses/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_losses/concat_4"
  op: "ConcatV2"
  input: "ssd_losses/Reshape_4"
  input: "ssd_losses/Reshape_9"
  input: "ssd_losses/Reshape_14"
  input: "ssd_losses/Reshape_19"
  input: "ssd_losses/Reshape_24"
  input: "ssd_losses/Reshape_29"
  input: "ssd_losses/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_losses/Greater"
  op: "Greater"
  input: "ssd_losses/concat_2"
  input: "ssd_losses/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Cast"
  op: "Cast"
  input: "ssd_losses/Greater"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_losses/Sum"
  op: "Sum"
  input: "ssd_losses/Cast"
  input: "ssd_losses/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ssd_losses/Cast_1"
  op: "Cast"
  input: "ssd_losses/Greater"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/softmax/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/softmax/Reshape"
  op: "Reshape"
  input: "ssd_losses/concat"
  input: "ssd_losses/softmax/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/softmax/Softmax"
  op: "Softmax"
  input: "ssd_losses/softmax/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/softmax/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\340\020\001\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/softmax/Reshape_1"
  op: "Reshape"
  input: "ssd_losses/softmax/Softmax"
  input: "ssd_losses/softmax/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/LogicalNot"
  op: "LogicalNot"
  input: "ssd_losses/Greater"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Greater_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5
      }
    }
  }
}
node {
  name: "ssd_losses/Greater_1"
  op: "Greater"
  input: "ssd_losses/concat_2"
  input: "ssd_losses/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/LogicalAnd"
  op: "LogicalAnd"
  input: "ssd_losses/LogicalNot"
  input: "ssd_losses/Greater_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Cast_2"
  op: "Cast"
  input: "ssd_losses/LogicalAnd"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/strided_slice"
  op: "StridedSlice"
  input: "ssd_losses/softmax/Reshape_1"
  input: "ssd_losses/strided_slice/stack"
  input: "ssd_losses/strided_slice/stack_1"
  input: "ssd_losses/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ssd_losses/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_losses/sub"
  op: "Sub"
  input: "ssd_losses/sub/x"
  input: "ssd_losses/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Select"
  op: "Select"
  input: "ssd_losses/LogicalAnd"
  input: "ssd_losses/strided_slice"
  input: "ssd_losses/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_30/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_losses/Reshape_30"
  op: "Reshape"
  input: "ssd_losses/Select"
  input: "ssd_losses/Reshape_30/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_losses/Sum_1"
  op: "Sum"
  input: "ssd_losses/Cast_2"
  input: "ssd_losses/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ssd_losses/Cast_3"
  op: "Cast"
  input: "ssd_losses/Sum_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_losses/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "ssd_losses/mul"
  op: "Mul"
  input: "ssd_losses/mul/x"
  input: "ssd_losses/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Cast_4"
  op: "Cast"
  input: "ssd_losses/mul"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_losses/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "ssd_losses/add"
  op: "Add"
  input: "ssd_losses/Cast_4"
  input: "ssd_losses/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Minimum"
  op: "Minimum"
  input: "ssd_losses/add"
  input: "ssd_losses/Cast_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Neg"
  op: "Neg"
  input: "ssd_losses/Reshape_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/TopKV2"
  op: "TopKV2"
  input: "ssd_losses/Neg"
  input: "ssd_losses/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_losses/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_losses/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_losses/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_losses/strided_slice_1"
  op: "StridedSlice"
  input: "ssd_losses/TopKV2"
  input: "ssd_losses/strided_slice_1/stack"
  input: "ssd_losses/strided_slice_1/stack_1"
  input: "ssd_losses/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_losses/Neg_1"
  op: "Neg"
  input: "ssd_losses/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Less"
  op: "Less"
  input: "ssd_losses/Select"
  input: "ssd_losses/Neg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/LogicalAnd_1"
  op: "LogicalAnd"
  input: "ssd_losses/LogicalAnd"
  input: "ssd_losses/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/Cast_5"
  op: "Cast"
  input: "ssd_losses/LogicalAnd_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_pos/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 69856
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_pos/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "ssd_losses/concat"
  input: "ssd_losses/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_pos/mul"
  op: "Mul"
  input: "ssd_losses/cross_entropy_pos/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "ssd_losses/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_pos/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_pos/Sum"
  op: "Sum"
  input: "ssd_losses/cross_entropy_pos/mul"
  input: "ssd_losses/cross_entropy_pos/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_pos/value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_pos/value"
  op: "RealDiv"
  input: "ssd_losses/cross_entropy_pos/Sum"
  input: "ssd_losses/cross_entropy_pos/value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_neg/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 69856
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_neg/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "ssd_losses/concat"
  input: "ssd_losses/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_neg/mul"
  op: "Mul"
  input: "ssd_losses/cross_entropy_neg/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "ssd_losses/Cast_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_neg/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_neg/Sum"
  op: "Sum"
  input: "ssd_losses/cross_entropy_neg/mul"
  input: "ssd_losses/cross_entropy_neg/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_neg/value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_neg/value"
  op: "RealDiv"
  input: "ssd_losses/cross_entropy_neg/Sum"
  input: "ssd_losses/cross_entropy_neg/value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_losses/localization/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_losses/localization/mul"
  op: "Mul"
  input: "ssd_losses/localization/mul/x"
  input: "ssd_losses/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/localization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ssd_losses/localization/ExpandDims"
  op: "ExpandDims"
  input: "ssd_losses/localization/mul"
  input: "ssd_losses/localization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/localization/sub"
  op: "Sub"
  input: "ssd_losses/concat_3"
  input: "ssd_losses/concat_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/localization/Abs"
  op: "Abs"
  input: "ssd_losses/localization/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/localization/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_losses/localization/Minimum"
  op: "Minimum"
  input: "ssd_losses/localization/Abs"
  input: "ssd_losses/localization/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/localization/sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_losses/localization/sub_1"
  op: "Sub"
  input: "ssd_losses/localization/Abs"
  input: "ssd_losses/localization/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/localization/mul_1"
  op: "Mul"
  input: "ssd_losses/localization/sub_1"
  input: "ssd_losses/localization/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/localization/add"
  op: "Add"
  input: "ssd_losses/localization/mul_1"
  input: "ssd_losses/localization/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/localization/mul_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_losses/localization/mul_2"
  op: "Mul"
  input: "ssd_losses/localization/mul_2/x"
  input: "ssd_losses/localization/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/localization/mul_3"
  op: "Mul"
  input: "ssd_losses/localization/mul_2"
  input: "ssd_losses/localization/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_losses/localization/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_losses/localization/Sum"
  op: "Sum"
  input: "ssd_losses/localization/mul_3"
  input: "ssd_losses/localization/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ssd_losses/localization/value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "ssd_losses/localization/value"
  op: "RealDiv"
  input: "ssd_losses/localization/Sum"
  input: "ssd_losses/localization/value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "activations/block3/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "activations/block3"
      }
    }
  }
}
node {
  name: "activations/block3"
  op: "HistogramSummary"
  input: "activations/block3/tag"
  input: "ssd_300_vgg/conv3/conv3_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 11520000
      }
    }
  }
}
node {
  name: "zero_fraction/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "zero_fraction/LessEqual"
  op: "LessEqual"
  input: "zero_fraction/Size"
  input: "zero_fraction/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/cond/Switch"
  op: "Switch"
  input: "zero_fraction/LessEqual"
  input: "zero_fraction/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/cond/switch_t"
  op: "Identity"
  input: "zero_fraction/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/cond/switch_f"
  op: "Identity"
  input: "zero_fraction/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/cond/pred_id"
  op: "Identity"
  input: "zero_fraction/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/cond/count_nonzero/zeros"
  op: "Const"
  input: "^zero_fraction/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "zero_fraction/cond/count_nonzero/NotEqual/Switch:1"
  input: "zero_fraction/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/conv3/conv3_3/Relu"
  input: "zero_fraction/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/cond/count_nonzero/Cast"
  op: "Cast"
  input: "zero_fraction/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/cond/count_nonzero/Const"
  op: "Const"
  input: "^zero_fraction/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "zero_fraction/cond/count_nonzero/Cast"
  input: "zero_fraction/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction/cond/Cast"
  op: "Cast"
  input: "zero_fraction/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^zero_fraction/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "zero_fraction/cond/count_nonzero_1/NotEqual/Switch"
  input: "zero_fraction/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/conv3/conv3_3/Relu"
  input: "zero_fraction/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "zero_fraction/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^zero_fraction/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "zero_fraction/cond/count_nonzero_1/Cast"
  input: "zero_fraction/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction/cond/Merge"
  op: "Merge"
  input: "zero_fraction/cond/count_nonzero_1/nonzero_count"
  input: "zero_fraction/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/counts_to_fraction/sub"
  op: "Sub"
  input: "zero_fraction/Size"
  input: "zero_fraction/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/counts_to_fraction/Cast"
  op: "Cast"
  input: "zero_fraction/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "zero_fraction/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "zero_fraction/counts_to_fraction/Cast"
  input: "zero_fraction/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/fraction"
  op: "Identity"
  input: "zero_fraction/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparsity/block3/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparsity/block3"
      }
    }
  }
}
node {
  name: "sparsity/block3"
  op: "ScalarSummary"
  input: "sparsity/block3/tags"
  input: "zero_fraction/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "activations/block10/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "activations/block10"
      }
    }
  }
}
node {
  name: "activations/block10"
  op: "HistogramSummary"
  input: "activations/block10/tag"
  input: "ssd_300_vgg/block10/conv3x3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 18432
      }
    }
  }
}
node {
  name: "zero_fraction_1/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "zero_fraction_1/LessEqual"
  op: "LessEqual"
  input: "zero_fraction_1/Size"
  input: "zero_fraction_1/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/Switch"
  op: "Switch"
  input: "zero_fraction_1/LessEqual"
  input: "zero_fraction_1/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/switch_t"
  op: "Identity"
  input: "zero_fraction_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/switch_f"
  op: "Identity"
  input: "zero_fraction_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/pred_id"
  op: "Identity"
  input: "zero_fraction_1/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/count_nonzero/zeros"
  op: "Const"
  input: "^zero_fraction_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_1/cond/count_nonzero/NotEqual/Switch:1"
  input: "zero_fraction_1/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/block10/conv3x3/Relu"
  input: "zero_fraction_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/count_nonzero/Cast"
  op: "Cast"
  input: "zero_fraction_1/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/count_nonzero/Const"
  op: "Const"
  input: "^zero_fraction_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "zero_fraction_1/cond/count_nonzero/Cast"
  input: "zero_fraction_1/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_1/cond/Cast"
  op: "Cast"
  input: "zero_fraction_1/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^zero_fraction_1/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_1/cond/count_nonzero_1/NotEqual/Switch"
  input: "zero_fraction_1/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/block10/conv3x3/Relu"
  input: "zero_fraction_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "zero_fraction_1/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^zero_fraction_1/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "zero_fraction_1/cond/count_nonzero_1/Cast"
  input: "zero_fraction_1/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_1/cond/Merge"
  op: "Merge"
  input: "zero_fraction_1/cond/count_nonzero_1/nonzero_count"
  input: "zero_fraction_1/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/counts_to_fraction/sub"
  op: "Sub"
  input: "zero_fraction_1/Size"
  input: "zero_fraction_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/counts_to_fraction/Cast"
  op: "Cast"
  input: "zero_fraction_1/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "zero_fraction_1/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "zero_fraction_1/counts_to_fraction/Cast"
  input: "zero_fraction_1/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/fraction"
  op: "Identity"
  input: "zero_fraction_1/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparsity/block10/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparsity/block10"
      }
    }
  }
}
node {
  name: "sparsity/block10"
  op: "ScalarSummary"
  input: "sparsity/block10/tags"
  input: "zero_fraction_1/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "activations/block9/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "activations/block9"
      }
    }
  }
}
node {
  name: "activations/block9"
  op: "HistogramSummary"
  input: "activations/block9/tag"
  input: "ssd_300_vgg/block9/conv3x3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 51200
      }
    }
  }
}
node {
  name: "zero_fraction_2/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "zero_fraction_2/LessEqual"
  op: "LessEqual"
  input: "zero_fraction_2/Size"
  input: "zero_fraction_2/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/Switch"
  op: "Switch"
  input: "zero_fraction_2/LessEqual"
  input: "zero_fraction_2/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/switch_t"
  op: "Identity"
  input: "zero_fraction_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/switch_f"
  op: "Identity"
  input: "zero_fraction_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/pred_id"
  op: "Identity"
  input: "zero_fraction_2/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/count_nonzero/zeros"
  op: "Const"
  input: "^zero_fraction_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_2/cond/count_nonzero/NotEqual/Switch:1"
  input: "zero_fraction_2/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/block9/conv3x3/Relu"
  input: "zero_fraction_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/count_nonzero/Cast"
  op: "Cast"
  input: "zero_fraction_2/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/count_nonzero/Const"
  op: "Const"
  input: "^zero_fraction_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "zero_fraction_2/cond/count_nonzero/Cast"
  input: "zero_fraction_2/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_2/cond/Cast"
  op: "Cast"
  input: "zero_fraction_2/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^zero_fraction_2/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_2/cond/count_nonzero_1/NotEqual/Switch"
  input: "zero_fraction_2/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/block9/conv3x3/Relu"
  input: "zero_fraction_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "zero_fraction_2/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^zero_fraction_2/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_2/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "zero_fraction_2/cond/count_nonzero_1/Cast"
  input: "zero_fraction_2/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_2/cond/Merge"
  op: "Merge"
  input: "zero_fraction_2/cond/count_nonzero_1/nonzero_count"
  input: "zero_fraction_2/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/counts_to_fraction/sub"
  op: "Sub"
  input: "zero_fraction_2/Size"
  input: "zero_fraction_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/counts_to_fraction/Cast"
  op: "Cast"
  input: "zero_fraction_2/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "zero_fraction_2/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "zero_fraction_2/counts_to_fraction/Cast"
  input: "zero_fraction_2/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/fraction"
  op: "Identity"
  input: "zero_fraction_2/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparsity/block9/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparsity/block9"
      }
    }
  }
}
node {
  name: "sparsity/block9"
  op: "ScalarSummary"
  input: "sparsity/block9/tags"
  input: "zero_fraction_2/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "activations/block11/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "activations/block11"
      }
    }
  }
}
node {
  name: "activations/block11"
  op: "HistogramSummary"
  input: "activations/block11/tag"
  input: "ssd_300_vgg/block11/conv3x3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2048
      }
    }
  }
}
node {
  name: "zero_fraction_3/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "zero_fraction_3/LessEqual"
  op: "LessEqual"
  input: "zero_fraction_3/Size"
  input: "zero_fraction_3/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/Switch"
  op: "Switch"
  input: "zero_fraction_3/LessEqual"
  input: "zero_fraction_3/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/switch_t"
  op: "Identity"
  input: "zero_fraction_3/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/switch_f"
  op: "Identity"
  input: "zero_fraction_3/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/pred_id"
  op: "Identity"
  input: "zero_fraction_3/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/count_nonzero/zeros"
  op: "Const"
  input: "^zero_fraction_3/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_3/cond/count_nonzero/NotEqual/Switch:1"
  input: "zero_fraction_3/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/block11/conv3x3/Relu"
  input: "zero_fraction_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/count_nonzero/Cast"
  op: "Cast"
  input: "zero_fraction_3/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/count_nonzero/Const"
  op: "Const"
  input: "^zero_fraction_3/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "zero_fraction_3/cond/count_nonzero/Cast"
  input: "zero_fraction_3/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_3/cond/Cast"
  op: "Cast"
  input: "zero_fraction_3/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^zero_fraction_3/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_3/cond/count_nonzero_1/NotEqual/Switch"
  input: "zero_fraction_3/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/block11/conv3x3/Relu"
  input: "zero_fraction_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "zero_fraction_3/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^zero_fraction_3/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_3/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "zero_fraction_3/cond/count_nonzero_1/Cast"
  input: "zero_fraction_3/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_3/cond/Merge"
  op: "Merge"
  input: "zero_fraction_3/cond/count_nonzero_1/nonzero_count"
  input: "zero_fraction_3/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/counts_to_fraction/sub"
  op: "Sub"
  input: "zero_fraction_3/Size"
  input: "zero_fraction_3/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/counts_to_fraction/Cast"
  op: "Cast"
  input: "zero_fraction_3/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "zero_fraction_3/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "zero_fraction_3/counts_to_fraction/Cast"
  input: "zero_fraction_3/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_3/fraction"
  op: "Identity"
  input: "zero_fraction_3/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparsity/block11/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparsity/block11"
      }
    }
  }
}
node {
  name: "sparsity/block11"
  op: "ScalarSummary"
  input: "sparsity/block11/tags"
  input: "zero_fraction_3/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "activations/block6/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "activations/block6"
      }
    }
  }
}
node {
  name: "activations/block6"
  op: "HistogramSummary"
  input: "activations/block6/tag"
  input: "ssd_300_vgg/conv6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2957312
      }
    }
  }
}
node {
  name: "zero_fraction_4/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "zero_fraction_4/LessEqual"
  op: "LessEqual"
  input: "zero_fraction_4/Size"
  input: "zero_fraction_4/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/Switch"
  op: "Switch"
  input: "zero_fraction_4/LessEqual"
  input: "zero_fraction_4/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/switch_t"
  op: "Identity"
  input: "zero_fraction_4/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/switch_f"
  op: "Identity"
  input: "zero_fraction_4/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/pred_id"
  op: "Identity"
  input: "zero_fraction_4/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/count_nonzero/zeros"
  op: "Const"
  input: "^zero_fraction_4/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_4/cond/count_nonzero/NotEqual/Switch:1"
  input: "zero_fraction_4/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/conv6/Relu"
  input: "zero_fraction_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/count_nonzero/Cast"
  op: "Cast"
  input: "zero_fraction_4/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/count_nonzero/Const"
  op: "Const"
  input: "^zero_fraction_4/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "zero_fraction_4/cond/count_nonzero/Cast"
  input: "zero_fraction_4/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_4/cond/Cast"
  op: "Cast"
  input: "zero_fraction_4/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^zero_fraction_4/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_4/cond/count_nonzero_1/NotEqual/Switch"
  input: "zero_fraction_4/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/conv6/Relu"
  input: "zero_fraction_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "zero_fraction_4/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^zero_fraction_4/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_4/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "zero_fraction_4/cond/count_nonzero_1/Cast"
  input: "zero_fraction_4/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_4/cond/Merge"
  op: "Merge"
  input: "zero_fraction_4/cond/count_nonzero_1/nonzero_count"
  input: "zero_fraction_4/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/counts_to_fraction/sub"
  op: "Sub"
  input: "zero_fraction_4/Size"
  input: "zero_fraction_4/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/counts_to_fraction/Cast"
  op: "Cast"
  input: "zero_fraction_4/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "zero_fraction_4/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "zero_fraction_4/counts_to_fraction/Cast"
  input: "zero_fraction_4/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_4/fraction"
  op: "Identity"
  input: "zero_fraction_4/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparsity/block6/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparsity/block6"
      }
    }
  }
}
node {
  name: "sparsity/block6"
  op: "ScalarSummary"
  input: "sparsity/block6/tags"
  input: "zero_fraction_4/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "activations/block2/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "activations/block2"
      }
    }
  }
}
node {
  name: "activations/block2"
  op: "HistogramSummary"
  input: "activations/block2/tag"
  input: "ssd_300_vgg/conv2/conv2_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 23040000
      }
    }
  }
}
node {
  name: "zero_fraction_5/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "zero_fraction_5/LessEqual"
  op: "LessEqual"
  input: "zero_fraction_5/Size"
  input: "zero_fraction_5/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/Switch"
  op: "Switch"
  input: "zero_fraction_5/LessEqual"
  input: "zero_fraction_5/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/switch_t"
  op: "Identity"
  input: "zero_fraction_5/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/switch_f"
  op: "Identity"
  input: "zero_fraction_5/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/pred_id"
  op: "Identity"
  input: "zero_fraction_5/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/count_nonzero/zeros"
  op: "Const"
  input: "^zero_fraction_5/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_5/cond/count_nonzero/NotEqual/Switch:1"
  input: "zero_fraction_5/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/conv2/conv2_2/Relu"
  input: "zero_fraction_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/count_nonzero/Cast"
  op: "Cast"
  input: "zero_fraction_5/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/count_nonzero/Const"
  op: "Const"
  input: "^zero_fraction_5/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "zero_fraction_5/cond/count_nonzero/Cast"
  input: "zero_fraction_5/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_5/cond/Cast"
  op: "Cast"
  input: "zero_fraction_5/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^zero_fraction_5/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_5/cond/count_nonzero_1/NotEqual/Switch"
  input: "zero_fraction_5/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/conv2/conv2_2/Relu"
  input: "zero_fraction_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "zero_fraction_5/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^zero_fraction_5/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_5/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "zero_fraction_5/cond/count_nonzero_1/Cast"
  input: "zero_fraction_5/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_5/cond/Merge"
  op: "Merge"
  input: "zero_fraction_5/cond/count_nonzero_1/nonzero_count"
  input: "zero_fraction_5/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/counts_to_fraction/sub"
  op: "Sub"
  input: "zero_fraction_5/Size"
  input: "zero_fraction_5/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/counts_to_fraction/Cast"
  op: "Cast"
  input: "zero_fraction_5/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "zero_fraction_5/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "zero_fraction_5/counts_to_fraction/Cast"
  input: "zero_fraction_5/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_5/fraction"
  op: "Identity"
  input: "zero_fraction_5/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparsity/block2/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparsity/block2"
      }
    }
  }
}
node {
  name: "sparsity/block2"
  op: "ScalarSummary"
  input: "sparsity/block2/tags"
  input: "zero_fraction_5/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "activations/block1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "activations/block1"
      }
    }
  }
}
node {
  name: "activations/block1"
  op: "HistogramSummary"
  input: "activations/block1/tag"
  input: "ssd_300_vgg/conv1/conv1_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 46080000
      }
    }
  }
}
node {
  name: "zero_fraction_6/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "zero_fraction_6/LessEqual"
  op: "LessEqual"
  input: "zero_fraction_6/Size"
  input: "zero_fraction_6/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/Switch"
  op: "Switch"
  input: "zero_fraction_6/LessEqual"
  input: "zero_fraction_6/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/switch_t"
  op: "Identity"
  input: "zero_fraction_6/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/switch_f"
  op: "Identity"
  input: "zero_fraction_6/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/pred_id"
  op: "Identity"
  input: "zero_fraction_6/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/count_nonzero/zeros"
  op: "Const"
  input: "^zero_fraction_6/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_6/cond/count_nonzero/NotEqual/Switch:1"
  input: "zero_fraction_6/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/conv1/conv1_2/Relu"
  input: "zero_fraction_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/count_nonzero/Cast"
  op: "Cast"
  input: "zero_fraction_6/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/count_nonzero/Const"
  op: "Const"
  input: "^zero_fraction_6/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "zero_fraction_6/cond/count_nonzero/Cast"
  input: "zero_fraction_6/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_6/cond/Cast"
  op: "Cast"
  input: "zero_fraction_6/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^zero_fraction_6/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_6/cond/count_nonzero_1/NotEqual/Switch"
  input: "zero_fraction_6/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/conv1/conv1_2/Relu"
  input: "zero_fraction_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "zero_fraction_6/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^zero_fraction_6/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_6/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "zero_fraction_6/cond/count_nonzero_1/Cast"
  input: "zero_fraction_6/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_6/cond/Merge"
  op: "Merge"
  input: "zero_fraction_6/cond/count_nonzero_1/nonzero_count"
  input: "zero_fraction_6/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/counts_to_fraction/sub"
  op: "Sub"
  input: "zero_fraction_6/Size"
  input: "zero_fraction_6/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/counts_to_fraction/Cast"
  op: "Cast"
  input: "zero_fraction_6/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "zero_fraction_6/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "zero_fraction_6/counts_to_fraction/Cast"
  input: "zero_fraction_6/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_6/fraction"
  op: "Identity"
  input: "zero_fraction_6/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparsity/block1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparsity/block1"
      }
    }
  }
}
node {
  name: "sparsity/block1"
  op: "ScalarSummary"
  input: "sparsity/block1/tags"
  input: "zero_fraction_6/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "activations/block8/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "activations/block8"
      }
    }
  }
}
node {
  name: "activations/block8"
  op: "HistogramSummary"
  input: "activations/block8/tag"
  input: "ssd_300_vgg/block8/conv3x3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 409600
      }
    }
  }
}
node {
  name: "zero_fraction_7/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "zero_fraction_7/LessEqual"
  op: "LessEqual"
  input: "zero_fraction_7/Size"
  input: "zero_fraction_7/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/Switch"
  op: "Switch"
  input: "zero_fraction_7/LessEqual"
  input: "zero_fraction_7/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/switch_t"
  op: "Identity"
  input: "zero_fraction_7/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/switch_f"
  op: "Identity"
  input: "zero_fraction_7/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/pred_id"
  op: "Identity"
  input: "zero_fraction_7/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/count_nonzero/zeros"
  op: "Const"
  input: "^zero_fraction_7/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_7/cond/count_nonzero/NotEqual/Switch:1"
  input: "zero_fraction_7/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/block8/conv3x3/Relu"
  input: "zero_fraction_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/count_nonzero/Cast"
  op: "Cast"
  input: "zero_fraction_7/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/count_nonzero/Const"
  op: "Const"
  input: "^zero_fraction_7/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "zero_fraction_7/cond/count_nonzero/Cast"
  input: "zero_fraction_7/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_7/cond/Cast"
  op: "Cast"
  input: "zero_fraction_7/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^zero_fraction_7/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_7/cond/count_nonzero_1/NotEqual/Switch"
  input: "zero_fraction_7/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/block8/conv3x3/Relu"
  input: "zero_fraction_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "zero_fraction_7/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^zero_fraction_7/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_7/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "zero_fraction_7/cond/count_nonzero_1/Cast"
  input: "zero_fraction_7/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_7/cond/Merge"
  op: "Merge"
  input: "zero_fraction_7/cond/count_nonzero_1/nonzero_count"
  input: "zero_fraction_7/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/counts_to_fraction/sub"
  op: "Sub"
  input: "zero_fraction_7/Size"
  input: "zero_fraction_7/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/counts_to_fraction/Cast"
  op: "Cast"
  input: "zero_fraction_7/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "zero_fraction_7/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "zero_fraction_7/counts_to_fraction/Cast"
  input: "zero_fraction_7/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_7/fraction"
  op: "Identity"
  input: "zero_fraction_7/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparsity/block8/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparsity/block8"
      }
    }
  }
}
node {
  name: "sparsity/block8"
  op: "ScalarSummary"
  input: "sparsity/block8/tags"
  input: "zero_fraction_7/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "activations/block7/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "activations/block7"
      }
    }
  }
}
node {
  name: "activations/block7"
  op: "HistogramSummary"
  input: "activations/block7/tag"
  input: "ssd_300_vgg/conv7/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2957312
      }
    }
  }
}
node {
  name: "zero_fraction_8/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "zero_fraction_8/LessEqual"
  op: "LessEqual"
  input: "zero_fraction_8/Size"
  input: "zero_fraction_8/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/Switch"
  op: "Switch"
  input: "zero_fraction_8/LessEqual"
  input: "zero_fraction_8/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/switch_t"
  op: "Identity"
  input: "zero_fraction_8/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/switch_f"
  op: "Identity"
  input: "zero_fraction_8/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/pred_id"
  op: "Identity"
  input: "zero_fraction_8/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/count_nonzero/zeros"
  op: "Const"
  input: "^zero_fraction_8/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_8/cond/count_nonzero/NotEqual/Switch:1"
  input: "zero_fraction_8/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/conv7/Relu"
  input: "zero_fraction_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/count_nonzero/Cast"
  op: "Cast"
  input: "zero_fraction_8/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/count_nonzero/Const"
  op: "Const"
  input: "^zero_fraction_8/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "zero_fraction_8/cond/count_nonzero/Cast"
  input: "zero_fraction_8/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_8/cond/Cast"
  op: "Cast"
  input: "zero_fraction_8/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^zero_fraction_8/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_8/cond/count_nonzero_1/NotEqual/Switch"
  input: "zero_fraction_8/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/conv7/Relu"
  input: "zero_fraction_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "zero_fraction_8/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^zero_fraction_8/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_8/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "zero_fraction_8/cond/count_nonzero_1/Cast"
  input: "zero_fraction_8/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_8/cond/Merge"
  op: "Merge"
  input: "zero_fraction_8/cond/count_nonzero_1/nonzero_count"
  input: "zero_fraction_8/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/counts_to_fraction/sub"
  op: "Sub"
  input: "zero_fraction_8/Size"
  input: "zero_fraction_8/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/counts_to_fraction/Cast"
  op: "Cast"
  input: "zero_fraction_8/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "zero_fraction_8/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "zero_fraction_8/counts_to_fraction/Cast"
  input: "zero_fraction_8/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_8/fraction"
  op: "Identity"
  input: "zero_fraction_8/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparsity/block7/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparsity/block7"
      }
    }
  }
}
node {
  name: "sparsity/block7"
  op: "ScalarSummary"
  input: "sparsity/block7/tags"
  input: "zero_fraction_8/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "activations/block5/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "activations/block5"
      }
    }
  }
}
node {
  name: "activations/block5"
  op: "HistogramSummary"
  input: "activations/block5/tag"
  input: "ssd_300_vgg/conv5/conv5_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1478656
      }
    }
  }
}
node {
  name: "zero_fraction_9/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "zero_fraction_9/LessEqual"
  op: "LessEqual"
  input: "zero_fraction_9/Size"
  input: "zero_fraction_9/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/Switch"
  op: "Switch"
  input: "zero_fraction_9/LessEqual"
  input: "zero_fraction_9/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/switch_t"
  op: "Identity"
  input: "zero_fraction_9/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/switch_f"
  op: "Identity"
  input: "zero_fraction_9/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/pred_id"
  op: "Identity"
  input: "zero_fraction_9/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/count_nonzero/zeros"
  op: "Const"
  input: "^zero_fraction_9/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_9/cond/count_nonzero/NotEqual/Switch:1"
  input: "zero_fraction_9/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/conv5/conv5_3/Relu"
  input: "zero_fraction_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/count_nonzero/Cast"
  op: "Cast"
  input: "zero_fraction_9/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/count_nonzero/Const"
  op: "Const"
  input: "^zero_fraction_9/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "zero_fraction_9/cond/count_nonzero/Cast"
  input: "zero_fraction_9/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_9/cond/Cast"
  op: "Cast"
  input: "zero_fraction_9/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^zero_fraction_9/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_9/cond/count_nonzero_1/NotEqual/Switch"
  input: "zero_fraction_9/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/conv5/conv5_3/Relu"
  input: "zero_fraction_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "zero_fraction_9/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^zero_fraction_9/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_9/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "zero_fraction_9/cond/count_nonzero_1/Cast"
  input: "zero_fraction_9/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_9/cond/Merge"
  op: "Merge"
  input: "zero_fraction_9/cond/count_nonzero_1/nonzero_count"
  input: "zero_fraction_9/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/counts_to_fraction/sub"
  op: "Sub"
  input: "zero_fraction_9/Size"
  input: "zero_fraction_9/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/counts_to_fraction/Cast"
  op: "Cast"
  input: "zero_fraction_9/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "zero_fraction_9/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "zero_fraction_9/counts_to_fraction/Cast"
  input: "zero_fraction_9/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_9/fraction"
  op: "Identity"
  input: "zero_fraction_9/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparsity/block5/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparsity/block5"
      }
    }
  }
}
node {
  name: "sparsity/block5"
  op: "ScalarSummary"
  input: "sparsity/block5/tags"
  input: "zero_fraction_9/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "activations/block4/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "activations/block4"
      }
    }
  }
}
node {
  name: "activations/block4"
  op: "HistogramSummary"
  input: "activations/block4/tag"
  input: "ssd_300_vgg/conv4/conv4_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 5914624
      }
    }
  }
}
node {
  name: "zero_fraction_10/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "zero_fraction_10/LessEqual"
  op: "LessEqual"
  input: "zero_fraction_10/Size"
  input: "zero_fraction_10/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/Switch"
  op: "Switch"
  input: "zero_fraction_10/LessEqual"
  input: "zero_fraction_10/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/switch_t"
  op: "Identity"
  input: "zero_fraction_10/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/switch_f"
  op: "Identity"
  input: "zero_fraction_10/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/pred_id"
  op: "Identity"
  input: "zero_fraction_10/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/count_nonzero/zeros"
  op: "Const"
  input: "^zero_fraction_10/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_10/cond/count_nonzero/NotEqual/Switch:1"
  input: "zero_fraction_10/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/conv4/conv4_3/Relu"
  input: "zero_fraction_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/count_nonzero/Cast"
  op: "Cast"
  input: "zero_fraction_10/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/count_nonzero/Const"
  op: "Const"
  input: "^zero_fraction_10/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "zero_fraction_10/cond/count_nonzero/Cast"
  input: "zero_fraction_10/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_10/cond/Cast"
  op: "Cast"
  input: "zero_fraction_10/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^zero_fraction_10/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "zero_fraction_10/cond/count_nonzero_1/NotEqual/Switch"
  input: "zero_fraction_10/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "ssd_300_vgg/conv4/conv4_3/Relu"
  input: "zero_fraction_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "zero_fraction_10/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^zero_fraction_10/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_10/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "zero_fraction_10/cond/count_nonzero_1/Cast"
  input: "zero_fraction_10/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zero_fraction_10/cond/Merge"
  op: "Merge"
  input: "zero_fraction_10/cond/count_nonzero_1/nonzero_count"
  input: "zero_fraction_10/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/counts_to_fraction/sub"
  op: "Sub"
  input: "zero_fraction_10/Size"
  input: "zero_fraction_10/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/counts_to_fraction/Cast"
  op: "Cast"
  input: "zero_fraction_10/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "zero_fraction_10/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "zero_fraction_10/counts_to_fraction/Cast"
  input: "zero_fraction_10/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_10/fraction"
  op: "Identity"
  input: "zero_fraction_10/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sparsity/block4/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "sparsity/block4"
      }
    }
  }
}
node {
  name: "sparsity/block4"
  op: "ScalarSummary"
  input: "sparsity/block4/tags"
  input: "zero_fraction_10/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_pos/value_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_losses/cross_entropy_pos/value_1"
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_pos/value_1"
  op: "ScalarSummary"
  input: "ssd_losses/cross_entropy_pos/value_1/tags"
  input: "ssd_losses/cross_entropy_pos/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_neg/value_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_losses/cross_entropy_neg/value_1"
      }
    }
  }
}
node {
  name: "ssd_losses/cross_entropy_neg/value_1"
  op: "ScalarSummary"
  input: "ssd_losses/cross_entropy_neg/value_1/tags"
  input: "ssd_losses/cross_entropy_neg/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_losses/localization/value_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_losses/localization/value_1"
      }
    }
  }
}
node {
  name: "ssd_losses/localization/value_1"
  op: "ScalarSummary"
  input: "ssd_losses/localization/value_1/tags"
  input: "ssd_losses/localization/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv1/conv1_1/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv1/conv1_1/weights_1/tag"
  input: "ssd_300_vgg/conv1/conv1_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv1/conv1_1/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv1/conv1_1/biases_1/tag"
  input: "ssd_300_vgg/conv1/conv1_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv1/conv1_2/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv1/conv1_2/weights_1/tag"
  input: "ssd_300_vgg/conv1/conv1_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv1/conv1_2/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv1/conv1_2/biases_1/tag"
  input: "ssd_300_vgg/conv1/conv1_2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv2/conv2_1/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv2/conv2_1/weights_1/tag"
  input: "ssd_300_vgg/conv2/conv2_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv2/conv2_1/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv2/conv2_1/biases_1/tag"
  input: "ssd_300_vgg/conv2/conv2_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv2/conv2_2/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv2/conv2_2/weights_1/tag"
  input: "ssd_300_vgg/conv2/conv2_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv2/conv2_2/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv2/conv2_2/biases_1/tag"
  input: "ssd_300_vgg/conv2/conv2_2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv3/conv3_1/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv3/conv3_1/weights_1/tag"
  input: "ssd_300_vgg/conv3/conv3_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv3/conv3_1/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv3/conv3_1/biases_1/tag"
  input: "ssd_300_vgg/conv3/conv3_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv3/conv3_2/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv3/conv3_2/weights_1/tag"
  input: "ssd_300_vgg/conv3/conv3_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv3/conv3_2/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv3/conv3_2/biases_1/tag"
  input: "ssd_300_vgg/conv3/conv3_2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv3/conv3_3/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv3/conv3_3/weights_1/tag"
  input: "ssd_300_vgg/conv3/conv3_3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv3/conv3_3/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv3/conv3_3/biases_1/tag"
  input: "ssd_300_vgg/conv3/conv3_3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv4/conv4_1/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv4/conv4_1/weights_1/tag"
  input: "ssd_300_vgg/conv4/conv4_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv4/conv4_1/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv4/conv4_1/biases_1/tag"
  input: "ssd_300_vgg/conv4/conv4_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv4/conv4_2/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv4/conv4_2/weights_1/tag"
  input: "ssd_300_vgg/conv4/conv4_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv4/conv4_2/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv4/conv4_2/biases_1/tag"
  input: "ssd_300_vgg/conv4/conv4_2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv4/conv4_3/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv4/conv4_3/weights_1/tag"
  input: "ssd_300_vgg/conv4/conv4_3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv4/conv4_3/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv4/conv4_3/biases_1/tag"
  input: "ssd_300_vgg/conv4/conv4_3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv5/conv5_1/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv5/conv5_1/weights_1/tag"
  input: "ssd_300_vgg/conv5/conv5_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv5/conv5_1/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv5/conv5_1/biases_1/tag"
  input: "ssd_300_vgg/conv5/conv5_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv5/conv5_2/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv5/conv5_2/weights_1/tag"
  input: "ssd_300_vgg/conv5/conv5_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv5/conv5_2/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv5/conv5_2/biases_1/tag"
  input: "ssd_300_vgg/conv5/conv5_2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv5/conv5_3/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv5/conv5_3/weights_1/tag"
  input: "ssd_300_vgg/conv5/conv5_3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv5/conv5_3/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv5/conv5_3/biases_1/tag"
  input: "ssd_300_vgg/conv5/conv5_3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv6/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv6/weights_1/tag"
  input: "ssd_300_vgg/conv6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv6/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv6/biases_1/tag"
  input: "ssd_300_vgg/conv6/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv7/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv7/weights_1/tag"
  input: "ssd_300_vgg/conv7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/conv7/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/conv7/biases_1/tag"
  input: "ssd_300_vgg/conv7/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block8/conv1x1/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block8/conv1x1/weights_1/tag"
  input: "ssd_300_vgg/block8/conv1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block8/conv1x1/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block8/conv1x1/biases_1/tag"
  input: "ssd_300_vgg/block8/conv1x1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block8/conv3x3/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block8/conv3x3/weights_1/tag"
  input: "ssd_300_vgg/block8/conv3x3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block8/conv3x3/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block8/conv3x3/biases_1/tag"
  input: "ssd_300_vgg/block8/conv3x3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block9/conv1x1/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block9/conv1x1/weights_1/tag"
  input: "ssd_300_vgg/block9/conv1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block9/conv1x1/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block9/conv1x1/biases_1/tag"
  input: "ssd_300_vgg/block9/conv1x1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block9/conv3x3/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block9/conv3x3/weights_1/tag"
  input: "ssd_300_vgg/block9/conv3x3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block9/conv3x3/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block9/conv3x3/biases_1/tag"
  input: "ssd_300_vgg/block9/conv3x3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block10/conv1x1/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block10/conv1x1/weights_1/tag"
  input: "ssd_300_vgg/block10/conv1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block10/conv1x1/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block10/conv1x1/biases_1/tag"
  input: "ssd_300_vgg/block10/conv1x1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block10/conv3x3/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block10/conv3x3/weights_1/tag"
  input: "ssd_300_vgg/block10/conv3x3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block10/conv3x3/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block10/conv3x3/biases_1/tag"
  input: "ssd_300_vgg/block10/conv3x3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block11/conv1x1/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block11/conv1x1/weights_1/tag"
  input: "ssd_300_vgg/block11/conv1x1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block11/conv1x1/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block11/conv1x1/biases_1/tag"
  input: "ssd_300_vgg/block11/conv1x1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block11/conv3x3/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block11/conv3x3/weights_1/tag"
  input: "ssd_300_vgg/block11/conv3x3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block11/conv3x3/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block11/conv3x3/biases_1/tag"
  input: "ssd_300_vgg/block11/conv3x3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/gamma_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block4_box/L2Normalization/gamma_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/gamma_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma_1/tag"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block4_box/conv_loc/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block4_box/conv_loc/weights_1/tag"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block4_box/conv_loc/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block4_box/conv_loc/biases_1/tag"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block4_box/conv_cls/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block4_box/conv_cls/weights_1/tag"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block4_box/conv_cls/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block4_box/conv_cls/biases_1/tag"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block7_box/conv_loc/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block7_box/conv_loc/weights_1/tag"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block7_box/conv_loc/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block7_box/conv_loc/biases_1/tag"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block7_box/conv_cls/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block7_box/conv_cls/weights_1/tag"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block7_box/conv_cls/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block7_box/conv_cls/biases_1/tag"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block8_box/conv_loc/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block8_box/conv_loc/weights_1/tag"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block8_box/conv_loc/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block8_box/conv_loc/biases_1/tag"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block8_box/conv_cls/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block8_box/conv_cls/weights_1/tag"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block8_box/conv_cls/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block8_box/conv_cls/biases_1/tag"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block9_box/conv_loc/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block9_box/conv_loc/weights_1/tag"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block9_box/conv_loc/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block9_box/conv_loc/biases_1/tag"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block9_box/conv_cls/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block9_box/conv_cls/weights_1/tag"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block9_box/conv_cls/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block9_box/conv_cls/biases_1/tag"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block10_box/conv_loc/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block10_box/conv_loc/weights_1/tag"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block10_box/conv_loc/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block10_box/conv_loc/biases_1/tag"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block10_box/conv_cls/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block10_box/conv_cls/weights_1/tag"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block10_box/conv_cls/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block10_box/conv_cls/biases_1/tag"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block11_box/conv_loc/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block11_box/conv_loc/weights_1/tag"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block11_box/conv_loc/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block11_box/conv_loc/biases_1/tag"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block11_box/conv_cls/weights_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block11_box/conv_cls/weights_1/tag"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/biases_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_300_vgg/block11_box/conv_cls/biases_1"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/biases_1"
  op: "HistogramSummary"
  input: "ssd_300_vgg/block11_box/conv_cls/biases_1/tag"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "exponential_decay_learning_rate/learning_rate"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "exponential_decay_learning_rate/Cast/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5600
      }
    }
  }
}
node {
  name: "exponential_decay_learning_rate/Cast"
  op: "Cast"
  input: "exponential_decay_learning_rate/Cast/x"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "exponential_decay_learning_rate/Cast_1/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.94
      }
    }
  }
}
node {
  name: "exponential_decay_learning_rate/Cast_2"
  op: "Cast"
  input: "global_step/read"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "exponential_decay_learning_rate/truediv"
  op: "RealDiv"
  input: "exponential_decay_learning_rate/Cast_2"
  input: "exponential_decay_learning_rate/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "exponential_decay_learning_rate/Floor"
  op: "Floor"
  input: "exponential_decay_learning_rate/truediv"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "exponential_decay_learning_rate/Pow"
  op: "Pow"
  input: "exponential_decay_learning_rate/Cast_1/x"
  input: "exponential_decay_learning_rate/Floor"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "exponential_decay_learning_rate"
  op: "Mul"
  input: "exponential_decay_learning_rate/learning_rate"
  input: "exponential_decay_learning_rate/Pow"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "learning_rate/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "ScalarSummary"
  input: "learning_rate/tags"
  input: "exponential_decay_learning_rate"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_loss"
  op: "AddN"
  input: "ssd_losses/cross_entropy_pos/value"
  input: "ssd_losses/cross_entropy_neg/value"
  input: "ssd_losses/localization/value"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "regularization_loss"
  op: "AddN"
  input: "ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer"
  input: "ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer"
  attr {
    key: "N"
    value {
      i: 35
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "AddN"
  op: "AddN"
  input: "clone_loss"
  input: "regularization_loss"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_loss_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "clone_loss_1"
      }
    }
  }
}
node {
  name: "clone_loss_1"
  op: "ScalarSummary"
  input: "clone_loss_1/tags"
  input: "clone_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "regularization_loss_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "regularization_loss_1"
      }
    }
  }
}
node {
  name: "regularization_loss_1"
  op: "ScalarSummary"
  input: "regularization_loss_1/tags"
  input: "regularization_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Fill"
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/clone_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_grad/tuple/control_dependency"
}
node {
  name: "gradients/clone_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency"
  input: "^gradients/clone_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/clone_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency"
  input: "^gradients/clone_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/clone_loss_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency"
  input: "^gradients/clone_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_5"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_6"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_7"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_8"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_9"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_10"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_11"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_12"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_13"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_14"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_15"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_16"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_17"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_18"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_19"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_20"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_21"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_22"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_23"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_24"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_25"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_26"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_27"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_28"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_29"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_30"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_31"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_32"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_33"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/regularization_loss_grad/tuple/control_dependency_34"
  op: "Identity"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "^gradients/regularization_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/Shape"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/value_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/clone_loss_grad/tuple/control_dependency"
  input: "ssd_losses/cross_entropy_pos/value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/value_grad/Sum"
  op: "Sum"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/RealDiv"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/value_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/Sum"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/value_grad/Neg"
  op: "Neg"
  input: "ssd_losses/cross_entropy_pos/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/value_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/Neg"
  input: "ssd_losses/cross_entropy_pos/value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/value_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/RealDiv_1"
  input: "ssd_losses/cross_entropy_pos/value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/value_grad/mul"
  op: "Mul"
  input: "gradients/clone_loss_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/value_grad/Sum_1"
  op: "Sum"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/mul"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/Sum_1"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_losses/cross_entropy_pos/value_grad/Reshape"
  input: "^gradients/ssd_losses/cross_entropy_pos/value_grad/Reshape_1"
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/Reshape"
  input: "^gradients/ssd_losses/cross_entropy_pos/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/cross_entropy_pos/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/Reshape_1"
  input: "^gradients/ssd_losses/cross_entropy_pos/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/cross_entropy_pos/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/Shape"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/value_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/clone_loss_grad/tuple/control_dependency_1"
  input: "ssd_losses/cross_entropy_neg/value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/value_grad/Sum"
  op: "Sum"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/RealDiv"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/value_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/Sum"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/value_grad/Neg"
  op: "Neg"
  input: "ssd_losses/cross_entropy_neg/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/value_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/Neg"
  input: "ssd_losses/cross_entropy_neg/value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/value_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/RealDiv_1"
  input: "ssd_losses/cross_entropy_neg/value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/value_grad/mul"
  op: "Mul"
  input: "gradients/clone_loss_grad/tuple/control_dependency_1"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/value_grad/Sum_1"
  op: "Sum"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/mul"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/Sum_1"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_losses/cross_entropy_neg/value_grad/Reshape"
  input: "^gradients/ssd_losses/cross_entropy_neg/value_grad/Reshape_1"
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/Reshape"
  input: "^gradients/ssd_losses/cross_entropy_neg/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/cross_entropy_neg/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/Reshape_1"
  input: "^gradients/ssd_losses/cross_entropy_neg/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/cross_entropy_neg/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/ssd_losses/localization/value_grad/Shape"
  input: "gradients/ssd_losses/localization/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/value_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/clone_loss_grad/tuple/control_dependency_2"
  input: "ssd_losses/localization/value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/value_grad/Sum"
  op: "Sum"
  input: "gradients/ssd_losses/localization/value_grad/RealDiv"
  input: "gradients/ssd_losses/localization/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/value_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/localization/value_grad/Sum"
  input: "gradients/ssd_losses/localization/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/value_grad/Neg"
  op: "Neg"
  input: "ssd_losses/localization/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/value_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/ssd_losses/localization/value_grad/Neg"
  input: "ssd_losses/localization/value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/value_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/ssd_losses/localization/value_grad/RealDiv_1"
  input: "ssd_losses/localization/value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/value_grad/mul"
  op: "Mul"
  input: "gradients/clone_loss_grad/tuple/control_dependency_2"
  input: "gradients/ssd_losses/localization/value_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/value_grad/Sum_1"
  op: "Sum"
  input: "gradients/ssd_losses/localization/value_grad/mul"
  input: "gradients/ssd_losses/localization/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/ssd_losses/localization/value_grad/Sum_1"
  input: "gradients/ssd_losses/localization/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_losses/localization/value_grad/Reshape"
  input: "^gradients/ssd_losses/localization/value_grad/Reshape_1"
}
node {
  name: "gradients/ssd_losses/localization/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_losses/localization/value_grad/Reshape"
  input: "^gradients/ssd_losses/localization/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_losses/localization/value_grad/Reshape_1"
  input: "^gradients/ssd_losses/localization/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency"
  input: "ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency"
  input: "ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_1"
  input: "ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_1"
  input: "ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_2"
  input: "ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_2"
  input: "ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_3"
  input: "ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_3"
  input: "ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_4"
  input: "ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_4"
  input: "ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_5"
  input: "ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_5"
  input: "ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_6"
  input: "ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_6"
  input: "ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_7"
  input: "ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_7"
  input: "ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_8"
  input: "ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_8"
  input: "ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_9"
  input: "ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_9"
  input: "ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_10"
  input: "ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_10"
  input: "ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_11"
  input: "ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_11"
  input: "ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_12"
  input: "ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_12"
  input: "ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_13"
  input: "ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_13"
  input: "ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_14"
  input: "ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_14"
  input: "ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_15"
  input: "ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_15"
  input: "ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_16"
  input: "ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_16"
  input: "ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_17"
  input: "ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_17"
  input: "ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_18"
  input: "ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_18"
  input: "ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_19"
  input: "ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_19"
  input: "ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_20"
  input: "ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_20"
  input: "ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_21"
  input: "ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_21"
  input: "ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_22"
  input: "ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_22"
  input: "ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_23"
  input: "ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_23"
  input: "ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_24"
  input: "ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_24"
  input: "ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_25"
  input: "ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_25"
  input: "ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_26"
  input: "ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_26"
  input: "ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_27"
  input: "ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_27"
  input: "ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_28"
  input: "ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_28"
  input: "ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_29"
  input: "ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_29"
  input: "ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_30"
  input: "ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_30"
  input: "ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_31"
  input: "ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_31"
  input: "ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_32"
  input: "ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_32"
  input: "ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_33"
  input: "ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_33"
  input: "ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_34"
  input: "ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/regularization_loss_grad/tuple/control_dependency_34"
  input: "ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/cross_entropy_pos/value_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/cross_entropy_pos/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 69856
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/ssd_losses/cross_entropy_pos/Sum_grad/Reshape"
  input: "gradients/ssd_losses/cross_entropy_pos/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/cross_entropy_neg/value_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/cross_entropy_neg/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 69856
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/ssd_losses/cross_entropy_neg/Sum_grad/Reshape"
  input: "gradients/ssd_losses/cross_entropy_neg/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/localization/value_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/localization/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\340\020\001\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/ssd_losses/localization/Sum_grad/Reshape"
  input: "gradients/ssd_losses/localization/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv1/conv1_1/weights/read"
  input: "gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv1/conv1_2/weights/read"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv2/conv2_1/weights/read"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv2/conv2_2/weights/read"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv3/conv3_1/weights/read"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv3/conv3_2/weights/read"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv3/conv3_3/weights/read"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv4/conv4_1/weights/read"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv4/conv4_2/weights/read"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv4/conv4_3/weights/read"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv5/conv5_1/weights/read"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv5/conv5_2/weights/read"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv5/conv5_3/weights/read"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv6/weights/read"
  input: "gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/conv7/weights/read"
  input: "gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block8/conv1x1/weights/read"
  input: "gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block8/conv3x3/weights/read"
  input: "gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block9/conv1x1/weights/read"
  input: "gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block9/conv3x3/weights/read"
  input: "gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block10/conv1x1/weights/read"
  input: "gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block10/conv3x3/weights/read"
  input: "gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block11/conv1x1/weights/read"
  input: "gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block11/conv3x3/weights/read"
  input: "gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/read"
  input: "gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/read"
  input: "gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/read"
  input: "gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/read"
  input: "gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/read"
  input: "gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/read"
  input: "gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/read"
  input: "gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/read"
  input: "gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/read"
  input: "gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/read"
  input: "gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/read"
  input: "gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/read"
  input: "gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/mul_grad/Mul"
  op: "Mul"
  input: "gradients/ssd_losses/cross_entropy_pos/Sum_grad/Tile"
  input: "ssd_losses/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/ssd_losses/cross_entropy_pos/Sum_grad/Tile"
  input: "ssd_losses/cross_entropy_pos/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_losses/cross_entropy_pos/mul_grad/Mul"
  input: "^gradients/ssd_losses/cross_entropy_pos/mul_grad/Mul_1"
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_losses/cross_entropy_pos/mul_grad/Mul"
  input: "^gradients/ssd_losses/cross_entropy_pos/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/cross_entropy_pos/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_losses/cross_entropy_pos/mul_grad/Mul_1"
  input: "^gradients/ssd_losses/cross_entropy_pos/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/cross_entropy_pos/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/mul_grad/Mul"
  op: "Mul"
  input: "gradients/ssd_losses/cross_entropy_neg/Sum_grad/Tile"
  input: "ssd_losses/Cast_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/ssd_losses/cross_entropy_neg/Sum_grad/Tile"
  input: "ssd_losses/cross_entropy_neg/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_losses/cross_entropy_neg/mul_grad/Mul"
  input: "^gradients/ssd_losses/cross_entropy_neg/mul_grad/Mul_1"
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_losses/cross_entropy_neg/mul_grad/Mul"
  input: "^gradients/ssd_losses/cross_entropy_neg/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/cross_entropy_neg/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_losses/cross_entropy_neg/mul_grad/Mul_1"
  input: "^gradients/ssd_losses/cross_entropy_neg/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/cross_entropy_neg/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\340\020\001\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\340\020\001\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/ssd_losses/localization/mul_3_grad/Shape"
  input: "gradients/ssd_losses/localization/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/ssd_losses/localization/Sum_grad/Tile"
  input: "ssd_losses/localization/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/ssd_losses/localization/mul_3_grad/Mul"
  input: "gradients/ssd_losses/localization/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/localization/mul_3_grad/Sum"
  input: "gradients/ssd_losses/localization/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_3_grad/Mul_1"
  op: "Mul"
  input: "ssd_losses/localization/mul_2"
  input: "gradients/ssd_losses/localization/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/ssd_losses/localization/mul_3_grad/Mul_1"
  input: "gradients/ssd_losses/localization/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/ssd_losses/localization/mul_3_grad/Sum_1"
  input: "gradients/ssd_losses/localization/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_losses/localization/mul_3_grad/Reshape"
  input: "^gradients/ssd_losses/localization/mul_3_grad/Reshape_1"
}
node {
  name: "gradients/ssd_losses/localization/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_losses/localization/mul_3_grad/Reshape"
  input: "^gradients/ssd_losses/localization/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_losses/localization/mul_3_grad/Reshape_1"
  input: "^gradients/ssd_losses/localization/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/mul_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "ssd_losses/cross_entropy_pos/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  op: "PreventGradient"
  input: "ssd_losses/cross_entropy_pos/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/ssd_losses/cross_entropy_pos/mul_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/cross_entropy_pos/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_pos/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "gradients/ssd_losses/cross_entropy_pos/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "gradients/ssd_losses/cross_entropy_pos/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_1"
  op: "ZerosLike"
  input: "ssd_losses/cross_entropy_neg/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  op: "PreventGradient"
  input: "ssd_losses/cross_entropy_neg/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/ssd_losses/cross_entropy_neg/mul_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/cross_entropy_neg/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/cross_entropy_neg/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "gradients/ssd_losses/cross_entropy_neg/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "gradients/ssd_losses/cross_entropy_neg/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\340\020\001\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/ssd_losses/localization/mul_2_grad/Shape"
  input: "gradients/ssd_losses/localization/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/ssd_losses/localization/mul_3_grad/tuple/control_dependency"
  input: "ssd_losses/localization/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/ssd_losses/localization/mul_2_grad/Mul"
  input: "gradients/ssd_losses/localization/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/localization/mul_2_grad/Sum"
  input: "gradients/ssd_losses/localization/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_2_grad/Mul_1"
  op: "Mul"
  input: "ssd_losses/localization/mul_2/x"
  input: "gradients/ssd_losses/localization/mul_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/ssd_losses/localization/mul_2_grad/Mul_1"
  input: "gradients/ssd_losses/localization/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/ssd_losses/localization/mul_2_grad/Sum_1"
  input: "gradients/ssd_losses/localization/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_losses/localization/mul_2_grad/Reshape"
  input: "^gradients/ssd_losses/localization/mul_2_grad/Reshape_1"
}
node {
  name: "gradients/ssd_losses/localization/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_losses/localization/mul_2_grad/Reshape"
  input: "^gradients/ssd_losses/localization/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_losses/localization/mul_2_grad/Reshape_1"
  input: "^gradients/ssd_losses/localization/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/ssd_losses/cross_entropy_pos/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "gradients/ssd_losses/cross_entropy_neg/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/cross_entropy_pos/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/mod"
  op: "FloorMod"
  input: "ssd_losses/concat/axis"
  input: "gradients/ssd_losses/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\264\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\260C\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\300\022\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\260\004\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/Shape_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/Shape_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/ssd_losses/concat_grad/mod"
  input: "gradients/ssd_losses/concat_grad/Shape"
  input: "gradients/ssd_losses/concat_grad/Shape_1"
  input: "gradients/ssd_losses/concat_grad/Shape_2"
  input: "gradients/ssd_losses/concat_grad/Shape_3"
  input: "gradients/ssd_losses/concat_grad/Shape_4"
  input: "gradients/ssd_losses/concat_grad/Shape_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/Slice"
  op: "Slice"
  input: "gradients/AddN"
  input: "gradients/ssd_losses/concat_grad/ConcatOffset"
  input: "gradients/ssd_losses/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/AddN"
  input: "gradients/ssd_losses/concat_grad/ConcatOffset:1"
  input: "gradients/ssd_losses/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17328
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/Slice_2"
  op: "Slice"
  input: "gradients/AddN"
  input: "gradients/ssd_losses/concat_grad/ConcatOffset:2"
  input: "gradients/ssd_losses/concat_grad/Shape_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4800
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/Slice_3"
  op: "Slice"
  input: "gradients/AddN"
  input: "gradients/ssd_losses/concat_grad/ConcatOffset:3"
  input: "gradients/ssd_losses/concat_grad/Shape_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/Slice_4"
  op: "Slice"
  input: "gradients/AddN"
  input: "gradients/ssd_losses/concat_grad/ConcatOffset:4"
  input: "gradients/ssd_losses/concat_grad/Shape_4"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/Slice_5"
  op: "Slice"
  input: "gradients/AddN"
  input: "gradients/ssd_losses/concat_grad/ConcatOffset:5"
  input: "gradients/ssd_losses/concat_grad/Shape_5"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_losses/concat_grad/Slice"
  input: "^gradients/ssd_losses/concat_grad/Slice_1"
  input: "^gradients/ssd_losses/concat_grad/Slice_2"
  input: "^gradients/ssd_losses/concat_grad/Slice_3"
  input: "^gradients/ssd_losses/concat_grad/Slice_4"
  input: "^gradients/ssd_losses/concat_grad/Slice_5"
}
node {
  name: "gradients/ssd_losses/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_losses/concat_grad/Slice"
  input: "^gradients/ssd_losses/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_losses/concat_grad/Slice_1"
  input: "^gradients/ssd_losses/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17328
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/ssd_losses/concat_grad/Slice_2"
  input: "^gradients/ssd_losses/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/concat_grad/Slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4800
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/ssd_losses/concat_grad/Slice_3"
  input: "^gradients/ssd_losses/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/concat_grad/Slice_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/ssd_losses/concat_grad/Slice_4"
  input: "^gradients/ssd_losses/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/concat_grad/Slice_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_grad/tuple/control_dependency_5"
  op: "Identity"
  input: "gradients/ssd_losses/concat_grad/Slice_5"
  input: "^gradients/ssd_losses/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/concat_grad/Slice_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_losses/localization/mul_2_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/ssd_losses/localization/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_losses/localization/mul_2_grad/tuple/control_dependency_1"
  input: "^gradients/ssd_losses/localization/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_losses/localization/mul_2_grad/tuple/control_dependency_1"
  input: "^gradients/ssd_losses/localization/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000&\000\000\000&\000\000\000\004\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/concat_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\023\000\000\000\023\000\000\000\006\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/concat_grad/tuple/control_dependency_1"
  input: "gradients/ssd_losses/Reshape_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_10_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\n\000\000\000\n\000\000\000\006\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/concat_grad/tuple/control_dependency_2"
  input: "gradients/ssd_losses/Reshape_10_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_15_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\005\000\000\000\005\000\000\000\006\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_15_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/concat_grad/tuple/control_dependency_3"
  input: "gradients/ssd_losses/Reshape_15_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_20_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\003\000\000\000\003\000\000\000\004\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_20_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/concat_grad/tuple/control_dependency_4"
  input: "gradients/ssd_losses/Reshape_20_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_25_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000\001\000\000\000\004\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_25_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/concat_grad/tuple/control_dependency_5"
  input: "gradients/ssd_losses/Reshape_25_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/ssd_losses/localization/add_grad/tuple/control_dependency"
  input: "ssd_losses/localization/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/ssd_losses/localization/add_grad/tuple/control_dependency"
  input: "ssd_losses/localization/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_losses/localization/mul_1_grad/Mul"
  input: "^gradients/ssd_losses/localization/mul_1_grad/Mul_1"
}
node {
  name: "gradients/ssd_losses/localization/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_losses/localization/mul_1_grad/Mul"
  input: "^gradients/ssd_losses/localization/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_losses/localization/mul_1_grad/Mul_1"
  input: "^gradients/ssd_losses/localization/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000&\000\000\000&\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/Reshape_grad/Reshape"
  input: "gradients/ssd_300_vgg/block4_box/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\023\000\000\000\023\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/Reshape_5_grad/Reshape"
  input: "gradients/ssd_300_vgg/block7_box/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\n\000\000\000\n\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/Reshape_10_grad/Reshape"
  input: "gradients/ssd_300_vgg/block8_box/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\005\000\000\000\005\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/Reshape_15_grad/Reshape"
  input: "gradients/ssd_300_vgg/block9_box/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\003\000\000\000\003\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/Reshape_20_grad/Reshape"
  input: "gradients/ssd_300_vgg/block10_box/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000\001\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/Reshape_25_grad/Reshape"
  input: "gradients/ssd_300_vgg/block11_box/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/sub_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\340\020\001\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/ssd_losses/localization/sub_1_grad/Shape"
  input: "gradients/ssd_losses/localization/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/ssd_losses/localization/mul_1_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/localization/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/localization/sub_1_grad/Sum"
  input: "gradients/ssd_losses/localization/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/ssd_losses/localization/mul_1_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/localization/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/ssd_losses/localization/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/ssd_losses/localization/sub_1_grad/Neg"
  input: "gradients/ssd_losses/localization/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_losses/localization/sub_1_grad/Reshape"
  input: "^gradients/ssd_losses/localization/sub_1_grad/Reshape_1"
}
node {
  name: "gradients/ssd_losses/localization/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_losses/localization/sub_1_grad/Reshape"
  input: "^gradients/ssd_losses/localization/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/sub_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_losses/localization/sub_1_grad/Reshape_1"
  input: "^gradients/ssd_losses/localization/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/sub_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\340\020\001\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\340\020\001\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/ssd_losses/localization/Minimum_grad/Shape_2"
  input: "gradients/ssd_losses/localization/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "ssd_losses/localization/Abs"
  input: "ssd_losses/localization/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/ssd_losses/localization/Minimum_grad/Shape"
  input: "gradients/ssd_losses/localization/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/Select"
  op: "Select"
  input: "gradients/ssd_losses/localization/Minimum_grad/LessEqual"
  input: "gradients/ssd_losses/localization/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/ssd_losses/localization/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/ssd_losses/localization/Minimum_grad/LessEqual"
  input: "gradients/ssd_losses/localization/Minimum_grad/zeros"
  input: "gradients/ssd_losses/localization/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/ssd_losses/localization/Minimum_grad/Select"
  input: "gradients/ssd_losses/localization/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/localization/Minimum_grad/Sum"
  input: "gradients/ssd_losses/localization/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/ssd_losses/localization/Minimum_grad/Select_1"
  input: "gradients/ssd_losses/localization/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/ssd_losses/localization/Minimum_grad/Sum_1"
  input: "gradients/ssd_losses/localization/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_losses/localization/Minimum_grad/Reshape"
  input: "^gradients/ssd_losses/localization/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_losses/localization/Minimum_grad/Reshape"
  input: "^gradients/ssd_losses/localization/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/Minimum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_losses/localization/Minimum_grad/Reshape_1"
  input: "^gradients/ssd_losses/localization/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/Minimum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/channel_to_last_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "ssd_300_vgg/block4_box/channel_to_last_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/channel_to_last_1/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/ssd_300_vgg/block4_box/Reshape_1_grad/Reshape"
  input: "gradients/ssd_300_vgg/block4_box/channel_to_last_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/channel_to_last_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "ssd_300_vgg/block7_box/channel_to_last_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/channel_to_last_1/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/ssd_300_vgg/block7_box/Reshape_1_grad/Reshape"
  input: "gradients/ssd_300_vgg/block7_box/channel_to_last_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 12
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/channel_to_last_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "ssd_300_vgg/block8_box/channel_to_last_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/channel_to_last_1/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/ssd_300_vgg/block8_box/Reshape_1_grad/Reshape"
  input: "gradients/ssd_300_vgg/block8_box/channel_to_last_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 12
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/channel_to_last_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "ssd_300_vgg/block9_box/channel_to_last_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/channel_to_last_1/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/ssd_300_vgg/block9_box/Reshape_1_grad/Reshape"
  input: "gradients/ssd_300_vgg/block9_box/channel_to_last_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 12
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/channel_to_last_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "ssd_300_vgg/block10_box/channel_to_last_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/channel_to_last_1/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/ssd_300_vgg/block10_box/Reshape_1_grad/Reshape"
  input: "gradients/ssd_300_vgg/block10_box/channel_to_last_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/channel_to_last_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "ssd_300_vgg/block11_box/channel_to_last_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/channel_to_last_1/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/ssd_300_vgg/block11_box/Reshape_1_grad/Reshape"
  input: "gradients/ssd_300_vgg/block11_box/channel_to_last_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/ssd_losses/localization/add_grad/tuple/control_dependency_1"
  input: "gradients/ssd_losses/localization/sub_1_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/localization/Minimum_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Abs_grad/Sign"
  op: "Sign"
  input: "ssd_losses/localization/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/Abs_grad/mul"
  op: "Mul"
  input: "gradients/AddN_1"
  input: "gradients/ssd_losses/localization/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block4_box/channel_to_last_1/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block4_box/channel_to_last_1/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block4_box/conv_cls/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/channel_to_last_1/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block4_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/channel_to_last_1/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/conv_cls/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block4_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/conv_cls/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block7_box/channel_to_last_1/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block7_box/channel_to_last_1/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block7_box/conv_cls/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block7_box/channel_to_last_1/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block7_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block7_box/channel_to_last_1/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 12
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block7_box/conv_cls/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block7_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block7_box/conv_cls/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block8_box/channel_to_last_1/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block8_box/channel_to_last_1/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block8_box/conv_cls/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8_box/channel_to_last_1/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block8_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8_box/channel_to_last_1/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 12
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8_box/conv_cls/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block8_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8_box/conv_cls/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block9_box/channel_to_last_1/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block9_box/channel_to_last_1/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block9_box/conv_cls/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9_box/channel_to_last_1/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block9_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9_box/channel_to_last_1/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 12
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9_box/conv_cls/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block9_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9_box/conv_cls/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block10_box/channel_to_last_1/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block10_box/channel_to_last_1/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block10_box/conv_cls/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10_box/channel_to_last_1/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block10_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10_box/channel_to_last_1/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10_box/conv_cls/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block10_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10_box/conv_cls/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block11_box/channel_to_last_1/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block11_box/channel_to_last_1/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block11_box/conv_cls/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11_box/channel_to_last_1/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block11_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11_box/channel_to_last_1/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11_box/conv_cls/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block11_box/conv_cls/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11_box/conv_cls/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/sub_grad/Neg"
  op: "Neg"
  input: "gradients/ssd_losses/localization/Abs_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_losses/localization/Abs_grad/mul"
  input: "^gradients/ssd_losses/localization/sub_grad/Neg"
}
node {
  name: "gradients/ssd_losses/localization/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_losses/localization/Abs_grad/mul"
  input: "^gradients/ssd_losses/localization/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/Abs_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/localization/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_losses/localization/sub_grad/Neg"
  input: "^gradients/ssd_losses/localization/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/localization/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 69856
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block4_box/L2Normalization/Mul"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/read"
  input: "gradients/ssd_300_vgg/block4_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block4_box/L2Normalization/Mul"
  input: "gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block4_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/conv7/Relu"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/read"
  input: "gradients/ssd_300_vgg/block7_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/conv7/Relu"
  input: "gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block7_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block8/conv3x3/Relu"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/read"
  input: "gradients/ssd_300_vgg/block8_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block8/conv3x3/Relu"
  input: "gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block8_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block9/conv3x3/Relu"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/read"
  input: "gradients/ssd_300_vgg/block9_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block9/conv3x3/Relu"
  input: "gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block9_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block10/conv3x3/Relu"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/read"
  input: "gradients/ssd_300_vgg/block10_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block10/conv3x3/Relu"
  input: "gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block10_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block11/conv3x3/Relu"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/read"
  input: "gradients/ssd_300_vgg/block11_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block11/conv3x3/Relu"
  input: "gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block11_box/conv_cls/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/mod"
  op: "FloorMod"
  input: "ssd_losses/concat_3/axis"
  input: "gradients/ssd_losses/concat_3_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\264\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\260C\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\300\022\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\260\004\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/Shape_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \001\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/Shape_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/ssd_losses/concat_3_grad/mod"
  input: "gradients/ssd_losses/concat_3_grad/Shape"
  input: "gradients/ssd_losses/concat_3_grad/Shape_1"
  input: "gradients/ssd_losses/concat_3_grad/Shape_2"
  input: "gradients/ssd_losses/concat_3_grad/Shape_3"
  input: "gradients/ssd_losses/concat_3_grad/Shape_4"
  input: "gradients/ssd_losses/concat_3_grad/Shape_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/Slice"
  op: "Slice"
  input: "gradients/ssd_losses/localization/sub_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/concat_3_grad/ConcatOffset"
  input: "gradients/ssd_losses/concat_3_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/Slice_1"
  op: "Slice"
  input: "gradients/ssd_losses/localization/sub_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/concat_3_grad/ConcatOffset:1"
  input: "gradients/ssd_losses/concat_3_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17328
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/Slice_2"
  op: "Slice"
  input: "gradients/ssd_losses/localization/sub_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/concat_3_grad/ConcatOffset:2"
  input: "gradients/ssd_losses/concat_3_grad/Shape_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4800
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/Slice_3"
  op: "Slice"
  input: "gradients/ssd_losses/localization/sub_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/concat_3_grad/ConcatOffset:3"
  input: "gradients/ssd_losses/concat_3_grad/Shape_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/Slice_4"
  op: "Slice"
  input: "gradients/ssd_losses/localization/sub_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/concat_3_grad/ConcatOffset:4"
  input: "gradients/ssd_losses/concat_3_grad/Shape_4"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/Slice_5"
  op: "Slice"
  input: "gradients/ssd_losses/localization/sub_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/concat_3_grad/ConcatOffset:5"
  input: "gradients/ssd_losses/concat_3_grad/Shape_5"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_losses/concat_3_grad/Slice"
  input: "^gradients/ssd_losses/concat_3_grad/Slice_1"
  input: "^gradients/ssd_losses/concat_3_grad/Slice_2"
  input: "^gradients/ssd_losses/concat_3_grad/Slice_3"
  input: "^gradients/ssd_losses/concat_3_grad/Slice_4"
  input: "^gradients/ssd_losses/concat_3_grad/Slice_5"
}
node {
  name: "gradients/ssd_losses/concat_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_losses/concat_3_grad/Slice"
  input: "^gradients/ssd_losses/concat_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/concat_3_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_losses/concat_3_grad/Slice_1"
  input: "^gradients/ssd_losses/concat_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/concat_3_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17328
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/ssd_losses/concat_3_grad/Slice_2"
  input: "^gradients/ssd_losses/concat_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/concat_3_grad/Slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4800
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/ssd_losses/concat_3_grad/Slice_3"
  input: "^gradients/ssd_losses/concat_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/concat_3_grad/Slice_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1200
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/ssd_losses/concat_3_grad/Slice_4"
  input: "^gradients/ssd_losses/concat_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/concat_3_grad/Slice_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/concat_3_grad/tuple/control_dependency_5"
  op: "Identity"
  input: "gradients/ssd_losses/concat_3_grad/Slice_5"
  input: "^gradients/ssd_losses/concat_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_losses/concat_3_grad/Slice_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block7_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11_box/conv_cls/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000&\000\000\000&\000\000\000\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/concat_3_grad/tuple/control_dependency"
  input: "gradients/ssd_losses/Reshape_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_8_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\023\000\000\000\023\000\000\000\006\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/concat_3_grad/tuple/control_dependency_1"
  input: "gradients/ssd_losses/Reshape_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_13_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\n\000\000\000\n\000\000\000\006\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_13_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/concat_3_grad/tuple/control_dependency_2"
  input: "gradients/ssd_losses/Reshape_13_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_18_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\005\000\000\000\005\000\000\000\006\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_18_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/concat_3_grad/tuple/control_dependency_3"
  input: "gradients/ssd_losses/Reshape_18_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_23_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\003\000\000\000\003\000\000\000\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_23_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/concat_3_grad/tuple/control_dependency_4"
  input: "gradients/ssd_losses/Reshape_23_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_28_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000\001\000\000\000\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_losses/Reshape_28_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/concat_3_grad/tuple/control_dependency_5"
  input: "gradients/ssd_losses/Reshape_28_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000&\000\000\000&\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/Reshape_3_grad/Reshape"
  input: "gradients/ssd_300_vgg/block4_box/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\023\000\000\000\023\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/Reshape_8_grad/Reshape"
  input: "gradients/ssd_300_vgg/block7_box/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\n\000\000\000\n\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/Reshape_13_grad/Reshape"
  input: "gradients/ssd_300_vgg/block8_box/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\005\000\000\000\005\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/Reshape_18_grad/Reshape"
  input: "gradients/ssd_300_vgg/block9_box/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\003\000\000\000\003\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/Reshape_23_grad/Reshape"
  input: "gradients/ssd_300_vgg/block10_box/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_losses/Reshape_28_grad/Reshape"
  input: "gradients/ssd_300_vgg/block11_box/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/channel_to_last/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "ssd_300_vgg/block4_box/channel_to_last/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/channel_to_last/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/ssd_300_vgg/block4_box/Reshape_grad/Reshape"
  input: "gradients/ssd_300_vgg/block4_box/channel_to_last/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/channel_to_last/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "ssd_300_vgg/block7_box/channel_to_last/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/channel_to_last/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/ssd_300_vgg/block7_box/Reshape_grad/Reshape"
  input: "gradients/ssd_300_vgg/block7_box/channel_to_last/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 24
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/channel_to_last/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "ssd_300_vgg/block8_box/channel_to_last/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/channel_to_last/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/ssd_300_vgg/block8_box/Reshape_grad/Reshape"
  input: "gradients/ssd_300_vgg/block8_box/channel_to_last/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 24
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/channel_to_last/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "ssd_300_vgg/block9_box/channel_to_last/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/channel_to_last/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/ssd_300_vgg/block9_box/Reshape_grad/Reshape"
  input: "gradients/ssd_300_vgg/block9_box/channel_to_last/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 24
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/channel_to_last/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "ssd_300_vgg/block10_box/channel_to_last/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/channel_to_last/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/ssd_300_vgg/block10_box/Reshape_grad/Reshape"
  input: "gradients/ssd_300_vgg/block10_box/channel_to_last/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/channel_to_last/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "ssd_300_vgg/block11_box/channel_to_last/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/channel_to_last/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/ssd_300_vgg/block11_box/Reshape_grad/Reshape"
  input: "gradients/ssd_300_vgg/block11_box/channel_to_last/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block4_box/channel_to_last/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block4_box/channel_to_last/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block4_box/conv_loc/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/channel_to_last/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block4_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/channel_to_last/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/conv_loc/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block4_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/conv_loc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block7_box/channel_to_last/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block7_box/channel_to_last/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block7_box/conv_loc/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block7_box/channel_to_last/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block7_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block7_box/channel_to_last/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 24
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block7_box/conv_loc/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block7_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block7_box/conv_loc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block8_box/channel_to_last/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block8_box/channel_to_last/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block8_box/conv_loc/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8_box/channel_to_last/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block8_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8_box/channel_to_last/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 24
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8_box/conv_loc/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block8_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8_box/conv_loc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block9_box/channel_to_last/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block9_box/channel_to_last/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block9_box/conv_loc/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9_box/channel_to_last/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block9_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9_box/channel_to_last/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 24
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9_box/conv_loc/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block9_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9_box/conv_loc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block10_box/channel_to_last/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block10_box/channel_to_last/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block10_box/conv_loc/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10_box/channel_to_last/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block10_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10_box/channel_to_last/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10_box/conv_loc/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block10_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10_box/conv_loc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block11_box/channel_to_last/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block11_box/channel_to_last/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block11_box/conv_loc/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11_box/channel_to_last/transpose_grad/transpose"
  input: "^gradients/ssd_300_vgg/block11_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11_box/channel_to_last/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11_box/conv_loc/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block11_box/conv_loc/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11_box/conv_loc/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block4_box/L2Normalization/Mul"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/read"
  input: "gradients/ssd_300_vgg/block4_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block4_box/L2Normalization/Mul"
  input: "gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block4_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/conv7/Relu"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/read"
  input: "gradients/ssd_300_vgg/block7_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/conv7/Relu"
  input: "gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block7_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block8/conv3x3/Relu"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/read"
  input: "gradients/ssd_300_vgg/block8_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block8/conv3x3/Relu"
  input: "gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block8_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block9/conv3x3/Relu"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/read"
  input: "gradients/ssd_300_vgg/block9_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block9/conv3x3/Relu"
  input: "gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block9_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block10/conv3x3/Relu"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/read"
  input: "gradients/ssd_300_vgg/block10_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block10/conv3x3/Relu"
  input: "gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block10_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block11/conv3x3/Relu"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/read"
  input: "gradients/ssd_300_vgg/block11_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block11/conv3x3/Relu"
  input: "gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block11_box/conv_loc/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\000\002\000\000&\000\000\000&\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\002\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Shape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_8"
  input: "ssd_300_vgg/block4_box/L2Normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Mul"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Sum"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Mul_1"
  op: "Mul"
  input: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Mul_1"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Sum_1"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Reshape"
  input: "^gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Reshape_1"
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Reshape"
  input: "^gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Reshape_1"
  input: "^gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block4_box/conv_loc/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block7_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_14"
  input: "ssd_300_vgg/block11/conv3x3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block11_box/conv_loc/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11_box/conv_loc/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\000\002\000\000&\000\000\000&\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000&\000\000\000&\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Shape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Mul"
  op: "Mul"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/tuple/control_dependency"
  input: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Sum"
  op: "Sum"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Mul"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Sum"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Mul_1"
  op: "Mul"
  input: "ssd_300_vgg/conv4/conv4_3/Relu"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Sum_1"
  op: "Sum"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Mul_1"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Sum_1"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Reshape"
  input: "^gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Reshape_1"
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Reshape"
  input: "^gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Reshape_1"
  input: "^gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/Mul_grad/tuple/control_dependency_1"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block11/conv3x3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block11/conv3x3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block11/conv3x3/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11/conv3x3/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/block11/conv3x3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11/conv3x3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11/conv3x3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block11/conv3x3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11/conv3x3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Rsqrt"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/ExpandDims_1_grad/Reshape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block11/conv1x1/Relu"
  input: "ssd_300_vgg/block11/conv3x3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block11/conv3x3/weights/read"
  input: "gradients/ssd_300_vgg/block11/conv3x3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block11/conv1x1/Relu"
  input: "gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block11/conv3x3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000&\000\000\000&\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000&\000\000\000&\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Shape_2"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum"
  input: "ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Shape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Select"
  op: "Select"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Rsqrt_grad/RsqrtGrad"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/zeros"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Select"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Sum"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Select_1"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Sum_1"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Reshape"
  input: "^gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Reshape_1"
  input: "^gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/tuple/control_dependency"
  input: "ssd_300_vgg/block11/conv1x1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block11/conv3x3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\000\002\000\000&\000\000\000&\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/add"
  op: "Add"
  input: "ssd_300_vgg/block4_box/L2Normalization/range"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/add"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/range"
  op: "Range"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/range/start"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Size"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape_1"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/range"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/mod"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/DynamicStitch"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Maximum_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Reshape"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block11/conv1x1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block11/conv1x1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block11/conv1x1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11/conv1x1/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/block11/conv1x1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11/conv1x1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11/conv1x1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block11/conv1x1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11/conv1x1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Square_grad/Const"
  op: "Const"
  input: "^gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Square_grad/Mul"
  op: "Mul"
  input: "ssd_300_vgg/conv4/conv4_3/Relu"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Square_grad/Mul_1"
  op: "Mul"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Sum_grad/Tile"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block10/conv3x3/Relu"
  input: "ssd_300_vgg/block11/conv1x1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block11/conv1x1/weights/read"
  input: "gradients/ssd_300_vgg/block11/conv1x1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block10/conv3x3/Relu"
  input: "gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block11/conv1x1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/block10_box/conv_loc/Conv2D_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_17"
  input: "ssd_300_vgg/block10/conv3x3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block11/conv1x1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block11/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block10/conv3x3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block10/conv3x3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block10/conv3x3/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10/conv3x3/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/block10/conv3x3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10/conv3x3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10/conv3x3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block10/conv3x3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10/conv3x3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block10/conv1x1/Relu"
  input: "ssd_300_vgg/block10/conv3x3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block10/conv3x3/weights/read"
  input: "gradients/ssd_300_vgg/block10/conv3x3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block10/conv1x1/Relu"
  input: "gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block10/conv3x3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/tuple/control_dependency"
  input: "ssd_300_vgg/block10/conv1x1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block10/conv3x3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block10/conv1x1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block10/conv1x1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block10/conv1x1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10/conv1x1/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/block10/conv1x1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10/conv1x1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10/conv1x1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block10/conv1x1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10/conv1x1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block9/conv3x3/Relu"
  input: "ssd_300_vgg/block10/conv1x1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block10/conv1x1/weights/read"
  input: "gradients/ssd_300_vgg/block10/conv1x1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block9/conv3x3/Relu"
  input: "gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block10/conv1x1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/block9_box/conv_loc/Conv2D_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_20"
  input: "ssd_300_vgg/block9/conv3x3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block10/conv1x1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block10/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block9/conv3x3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block9/conv3x3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block9/conv3x3/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9/conv3x3/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/block9/conv3x3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9/conv3x3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9/conv3x3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block9/conv3x3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9/conv3x3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block9/pad2d/Pad"
  input: "ssd_300_vgg/block9/conv3x3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block9/conv3x3/weights/read"
  input: "gradients/ssd_300_vgg/block9/conv3x3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block9/pad2d/Pad"
  input: "gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block9/conv3x3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 12
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/stack"
  op: "Pack"
  input: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/Rank"
  input: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/Slice"
  op: "Slice"
  input: "ssd_300_vgg/block9/pad2d/Pad/paddings"
  input: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/Slice/begin"
  input: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/Slice"
  input: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\200\000\000\000\n\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/Reshape"
  input: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block9/conv3x3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/block9/pad2d/Pad_grad/Slice_1"
  input: "ssd_300_vgg/block9/conv1x1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block9/conv1x1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block9/conv1x1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block9/conv1x1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9/conv1x1/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/block9/conv1x1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9/conv1x1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9/conv1x1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block9/conv1x1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9/conv1x1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block8/conv3x3/Relu"
  input: "ssd_300_vgg/block9/conv1x1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block9/conv1x1/weights/read"
  input: "gradients/ssd_300_vgg/block9/conv1x1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block8/conv3x3/Relu"
  input: "gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block9/conv1x1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/block8_box/conv_loc/Conv2D_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_23"
  input: "ssd_300_vgg/block8/conv3x3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block9/conv1x1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block9/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block8/conv3x3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block8/conv3x3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block8/conv3x3/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8/conv3x3/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/block8/conv3x3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8/conv3x3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8/conv3x3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block8/conv3x3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8/conv3x3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/block8/pad2d/Pad"
  input: "ssd_300_vgg/block8/conv3x3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block8/conv3x3/weights/read"
  input: "gradients/ssd_300_vgg/block8/conv3x3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 21
          }
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/block8/pad2d/Pad"
  input: "gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block8/conv3x3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 21
          }
          dim {
            size: 21
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/stack"
  op: "Pack"
  input: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/Rank"
  input: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/Slice"
  op: "Slice"
  input: "ssd_300_vgg/block8/pad2d/Pad/paddings"
  input: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/Slice/begin"
  input: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/Slice"
  input: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\000\001\000\000\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/Reshape"
  input: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block8/conv3x3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8/conv3x3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/block8/pad2d/Pad_grad/Slice_1"
  input: "ssd_300_vgg/block8/conv1x1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/block8/conv1x1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block8/conv1x1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block8/conv1x1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8/conv1x1/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/block8/conv1x1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8/conv1x1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8/conv1x1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/block8/conv1x1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8/conv1x1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/dropout_1/dropout/mul"
  input: "ssd_300_vgg/block8/conv1x1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/block8/conv1x1/weights/read"
  input: "gradients/ssd_300_vgg/block8/conv1x1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/dropout_1/dropout/mul"
  input: "gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/block8/conv1x1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/tuple/control_dependency"
  input: "ssd_300_vgg/dropout_1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/tuple/control_dependency"
  input: "ssd_300_vgg/dropout_1/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/dropout_1/dropout/mul_grad/Mul"
  input: "^gradients/ssd_300_vgg/dropout_1/dropout/mul_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/mul_grad/Mul"
  input: "^gradients/ssd_300_vgg/dropout_1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/dropout_1/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/mul_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/dropout_1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/dropout_1/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/block8/conv1x1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block8/conv1x1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\000\004\000\000\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Shape"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/mul_grad/tuple/control_dependency"
  input: "ssd_300_vgg/dropout_1/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Sum"
  op: "Sum"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/RealDiv"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Sum"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Neg"
  op: "Neg"
  input: "ssd_300_vgg/conv7/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Neg"
  input: "ssd_300_vgg/dropout_1/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/RealDiv_1"
  input: "ssd_300_vgg/dropout_1/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/mul"
  op: "Mul"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/mul_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Sum_1"
  op: "Sum"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/mul"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Sum_1"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Reshape"
  input: "^gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Reshape_1"
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Reshape"
  input: "^gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Reshape_1"
  input: "^gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/block7_box/conv_loc/Conv2D_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/dropout_1/dropout/truediv_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block7_box/conv_cls/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv7/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_27"
  input: "ssd_300_vgg/conv7/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/conv7/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv7/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv7/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv7/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/conv7/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv7/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/conv7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv7/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv7/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv7/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv7/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/dropout/dropout/mul"
  input: "ssd_300_vgg/conv7/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv7/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/conv7/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/conv7/weights/read"
  input: "gradients/ssd_300_vgg/conv7/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv7/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/dropout/dropout/mul"
  input: "gradients/ssd_300_vgg/conv7/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/conv7/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv7/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv7/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/conv7/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv7/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/conv7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv7/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv7/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/mul_grad/Mul"
  op: "Mul"
  input: "gradients/ssd_300_vgg/conv7/Conv2D_grad/tuple/control_dependency"
  input: "ssd_300_vgg/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/ssd_300_vgg/conv7/Conv2D_grad/tuple/control_dependency"
  input: "ssd_300_vgg/dropout/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/dropout/dropout/mul_grad/Mul"
  input: "^gradients/ssd_300_vgg/dropout/dropout/mul_grad/Mul_1"
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/dropout/dropout/mul_grad/Mul"
  input: "^gradients/ssd_300_vgg/dropout/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/dropout/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/dropout/dropout/mul_grad/Mul_1"
  input: "^gradients/ssd_300_vgg/dropout/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/dropout/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_28"
  op: "AddN"
  input: "gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/conv7/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv7/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\000\004\000\000\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Shape"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/ssd_300_vgg/dropout/dropout/mul_grad/tuple/control_dependency"
  input: "ssd_300_vgg/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Sum"
  op: "Sum"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/RealDiv"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Reshape"
  op: "Reshape"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Sum"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Neg"
  op: "Neg"
  input: "ssd_300_vgg/conv6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Neg"
  input: "ssd_300_vgg/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/RealDiv_1"
  input: "ssd_300_vgg/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/mul"
  op: "Mul"
  input: "gradients/ssd_300_vgg/dropout/dropout/mul_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Sum_1"
  op: "Sum"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/mul"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Sum_1"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Reshape"
  input: "^gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Reshape_1"
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Reshape"
  input: "^gradients/ssd_300_vgg/dropout/dropout/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Reshape_1"
  input: "^gradients/ssd_300_vgg/dropout/dropout/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/dropout/dropout/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/dropout/dropout/truediv_grad/tuple/control_dependency"
  input: "ssd_300_vgg/conv6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/conv6/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv6/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv6/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/conv6/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv6/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/conv6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv6/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1024
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv6/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/ssd_300_vgg/conv6/BiasAdd_grad/tuple/control_dependency"
  input: "ssd_300_vgg/conv6/BatchToSpaceND/block_shape"
  input: "ssd_300_vgg/conv6/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
          dim {
            size: 1024
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/conv6/SpaceToBatchND"
  input: "ssd_300_vgg/conv6/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/conv6/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/conv6/weights/read"
  input: "gradients/ssd_300_vgg/conv6/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
          dim {
            size: 512
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/conv6/SpaceToBatchND"
  input: "gradients/ssd_300_vgg/conv6/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/conv6/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv6/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/conv6/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv6/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/conv6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv6/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 288
          }
          dim {
            size: 512
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv6/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv6/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/ssd_300_vgg/conv6/Conv2D_grad/tuple/control_dependency"
  input: "ssd_300_vgg/conv6/SpaceToBatchND/block_shape"
  input: "ssd_300_vgg/conv6/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_29"
  op: "AddN"
  input: "gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/conv6/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv6/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/pool5/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "ssd_300_vgg/conv5/conv5_3/Relu"
  input: "ssd_300_vgg/pool5/MaxPool"
  input: "gradients/ssd_300_vgg/conv6/SpaceToBatchND_grad/BatchToSpaceND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 3
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/pool5/MaxPool_grad/MaxPoolGrad"
  input: "ssd_300_vgg/conv5/conv5_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv5/conv5_3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv5/conv5_3/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/conv5/conv5_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv5/conv5_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/conv5/conv5_2/Relu"
  input: "ssd_300_vgg/conv5/conv5_3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/conv5/conv5_3/weights/read"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/conv5/conv5_2/Relu"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/tuple/control_dependency"
  input: "ssd_300_vgg/conv5/conv5_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_30"
  op: "AddN"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv5/conv5_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv5/conv5_2/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/conv5/conv5_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv5/conv5_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/conv5/conv5_1/Relu"
  input: "ssd_300_vgg/conv5/conv5_2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/conv5/conv5_2/weights/read"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/conv5/conv5_1/Relu"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/tuple/control_dependency"
  input: "ssd_300_vgg/conv5/conv5_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_31"
  op: "AddN"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv5/conv5_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv5/conv5_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/conv5/conv5_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv5/conv5_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/pool4/MaxPool"
  input: "ssd_300_vgg/conv5/conv5_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/conv5/conv5_1/weights/read"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/pool4/MaxPool"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/pool4/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "ssd_300_vgg/conv4/conv4_3/Relu"
  input: "ssd_300_vgg/pool4/MaxPool"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "gradients/AddN_32"
  op: "AddN"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv5/conv5_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_33"
  op: "AddN"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/tuple/control_dependency"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize/Square_grad/Mul_1"
  input: "gradients/ssd_300_vgg/pool4/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/block4_box/L2Normalization/l2_normalize_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_33"
  input: "ssd_300_vgg/conv4/conv4_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv4/conv4_3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv4/conv4_3/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/conv4/conv4_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv4/conv4_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/conv4/conv4_2/Relu"
  input: "ssd_300_vgg/conv4/conv4_3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/conv4/conv4_3/weights/read"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/conv4/conv4_2/Relu"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/tuple/control_dependency"
  input: "ssd_300_vgg/conv4/conv4_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_34"
  op: "AddN"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv4/conv4_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv4/conv4_2/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/conv4/conv4_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv4/conv4_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/conv4/conv4_1/Relu"
  input: "ssd_300_vgg/conv4/conv4_2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/conv4/conv4_2/weights/read"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/conv4/conv4_1/Relu"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/tuple/control_dependency"
  input: "ssd_300_vgg/conv4/conv4_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_35"
  op: "AddN"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv4/conv4_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv4/conv4_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/conv4/conv4_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 512
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv4/conv4_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/pool3/MaxPool"
  input: "ssd_300_vgg/conv4/conv4_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/conv4/conv4_1/weights/read"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/pool3/MaxPool"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/pool3/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "ssd_300_vgg/conv3/conv3_3/Relu"
  input: "ssd_300_vgg/pool3/MaxPool"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "gradients/AddN_36"
  op: "AddN"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv4/conv4_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/pool3/MaxPool_grad/MaxPoolGrad"
  input: "ssd_300_vgg/conv3/conv3_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv3/conv3_3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv3/conv3_3/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/conv3/conv3_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv3/conv3_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/conv3/conv3_2/Relu"
  input: "ssd_300_vgg/conv3/conv3_3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/conv3/conv3_3/weights/read"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/conv3/conv3_2/Relu"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/tuple/control_dependency"
  input: "ssd_300_vgg/conv3/conv3_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_37"
  op: "AddN"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv3/conv3_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv3/conv3_2/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/conv3/conv3_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv3/conv3_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/conv3/conv3_1/Relu"
  input: "ssd_300_vgg/conv3/conv3_2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/conv3/conv3_2/weights/read"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/conv3/conv3_1/Relu"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/tuple/control_dependency"
  input: "ssd_300_vgg/conv3/conv3_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_38"
  op: "AddN"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv3/conv3_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv3/conv3_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/conv3/conv3_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 256
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv3/conv3_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/pool2/MaxPool"
  input: "ssd_300_vgg/conv3/conv3_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/conv3/conv3_1/weights/read"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/pool2/MaxPool"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/pool2/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "ssd_300_vgg/conv2/conv2_2/Relu"
  input: "ssd_300_vgg/pool2/MaxPool"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "gradients/AddN_39"
  op: "AddN"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv3/conv3_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/pool2/MaxPool_grad/MaxPoolGrad"
  input: "ssd_300_vgg/conv2/conv2_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv2/conv2_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv2/conv2_2/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/conv2/conv2_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv2/conv2_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv2/conv2_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv2/conv2_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/conv2/conv2_1/Relu"
  input: "ssd_300_vgg/conv2/conv2_2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/conv2/conv2_2/weights/read"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/conv2/conv2_1/Relu"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/tuple/control_dependency"
  input: "ssd_300_vgg/conv2/conv2_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_40"
  op: "AddN"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv2/conv2_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv2/conv2_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv2/conv2_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/conv2/conv2_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv2/conv2_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 128
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv2/conv2_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv2/conv2_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/pool1/MaxPool"
  input: "ssd_300_vgg/conv2/conv2_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/conv2/conv2_1/weights/read"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/pool1/MaxPool"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/pool1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "ssd_300_vgg/conv1/conv1_2/Relu"
  input: "ssd_300_vgg/pool1/MaxPool"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "gradients/AddN_41"
  op: "AddN"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv2/conv2_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/pool1/MaxPool_grad/MaxPoolGrad"
  input: "ssd_300_vgg/conv1/conv1_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv1/conv1_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv1/conv1_2/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/conv1/conv1_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv1/conv1_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv1/conv1_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv1/conv1_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ssd_300_vgg/conv1/conv1_1/Relu"
  input: "ssd_300_vgg/conv1/conv1_2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/conv1/conv1_2/weights/read"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ssd_300_vgg/conv1/conv1_1/Relu"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/tuple/control_dependency"
  input: "ssd_300_vgg/conv1/conv1_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_42"
  op: "AddN"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv1/conv1_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/ssd_300_vgg/conv1/conv1_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv1/conv1_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv1/conv1_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv1/conv1_1/Relu_grad/ReluGrad"
  input: "^gradients/ssd_300_vgg/conv1/conv1_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv1/conv1_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 64
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv1/conv1_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/ssd_300_vgg/conv1/conv1_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv1/conv1_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "fifo_queue_Dequeue"
  input: "ssd_300_vgg/conv1/conv1_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/ShapeN"
  input: "ssd_300_vgg/conv1/conv1_1/weights/read"
  input: "gradients/ssd_300_vgg/conv1/conv1_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fifo_queue_Dequeue"
  input: "gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/ShapeN:1"
  input: "gradients/ssd_300_vgg/conv1/conv1_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 3
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_43"
  op: "AddN"
  input: "gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/ssd_300_vgg/conv1/conv1_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/ssd_300_vgg/conv1/conv1_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "total_loss"
  op: "Identity"
  input: "AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "total_loss_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "total_loss_1"
      }
    }
  }
}
node {
  name: "total_loss_1"
  op: "ScalarSummary"
  input: "total_loss_1/tags"
  input: "total_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.89999998
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.99900001
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_1/biases/Adam"
  input: "ssd_300_vgg/conv1/conv1_1/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv1/conv1_1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_1/biases/Adam_1"
  input: "ssd_300_vgg/conv1/conv1_1/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_1/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv1/conv1_1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_2/biases/Adam"
  input: "ssd_300_vgg/conv1/conv1_2/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv1/conv1_2/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_2/biases/Adam_1"
  input: "ssd_300_vgg/conv1/conv1_2/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv1/conv1_2/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv1/conv1_2/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_1/biases/Adam"
  input: "ssd_300_vgg/conv2/conv2_1/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv2/conv2_1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_1/biases/Adam_1"
  input: "ssd_300_vgg/conv2/conv2_1/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_1/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv2/conv2_1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_2/biases/Adam"
  input: "ssd_300_vgg/conv2/conv2_2/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv2/conv2_2/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_2/biases/Adam_1"
  input: "ssd_300_vgg/conv2/conv2_2/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv2/conv2_2/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv2/conv2_2/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_1/biases/Adam"
  input: "ssd_300_vgg/conv3/conv3_1/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_1/biases/Adam_1"
  input: "ssd_300_vgg/conv3/conv3_1/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_1/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_2/biases/Adam"
  input: "ssd_300_vgg/conv3/conv3_2/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_2/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_2/biases/Adam_1"
  input: "ssd_300_vgg/conv3/conv3_2/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_2/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_2/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_3/biases/Adam"
  input: "ssd_300_vgg/conv3/conv3_3/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_3/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_3/biases/Adam_1"
  input: "ssd_300_vgg/conv3/conv3_3/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv3/conv3_3/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv3/conv3_3/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_1/biases/Adam"
  input: "ssd_300_vgg/conv4/conv4_1/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_1/biases/Adam_1"
  input: "ssd_300_vgg/conv4/conv4_1/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_1/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_2/biases/Adam"
  input: "ssd_300_vgg/conv4/conv4_2/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_2/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_2/biases/Adam_1"
  input: "ssd_300_vgg/conv4/conv4_2/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_2/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_2/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_3/biases/Adam"
  input: "ssd_300_vgg/conv4/conv4_3/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_3/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_3/biases/Adam_1"
  input: "ssd_300_vgg/conv4/conv4_3/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv4/conv4_3/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv4/conv4_3/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_1/biases/Adam"
  input: "ssd_300_vgg/conv5/conv5_1/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_1/biases/Adam_1"
  input: "ssd_300_vgg/conv5/conv5_1/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_1/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_2/biases/Adam"
  input: "ssd_300_vgg/conv5/conv5_2/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_2/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_2/biases/Adam_1"
  input: "ssd_300_vgg/conv5/conv5_2/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_2/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_2/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_3/biases/Adam"
  input: "ssd_300_vgg/conv5/conv5_3/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_3/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_3/biases/Adam_1"
  input: "ssd_300_vgg/conv5/conv5_3/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv5/conv5_3/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv5/conv5_3/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv6/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv6/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv6/weights/Adam"
  input: "ssd_300_vgg/conv6/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv6/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv6/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv6/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv6/weights/Adam_1"
  input: "ssd_300_vgg/conv6/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv6/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv6/biases/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv6/biases/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv6/biases/Adam"
  input: "ssd_300_vgg/conv6/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv6/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv6/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv6/biases/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv6/biases/Adam_1"
  input: "ssd_300_vgg/conv6/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv6/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv6/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv7/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv7/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv7/weights/Adam"
  input: "ssd_300_vgg/conv7/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv7/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv7/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv7/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv7/weights/Adam_1"
  input: "ssd_300_vgg/conv7/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv7/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv7/biases/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv7/biases/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv7/biases/Adam"
  input: "ssd_300_vgg/conv7/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/conv7/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/conv7/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/conv7/biases/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv7/biases/Adam_1"
  input: "ssd_300_vgg/conv7/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/conv7/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/conv7/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam_1"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv1x1/biases/Adam"
  input: "ssd_300_vgg/block8/conv1x1/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block8/conv1x1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv1x1/biases/Adam_1"
  input: "ssd_300_vgg/block8/conv1x1/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv1x1/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block8/conv1x1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam_1"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv3x3/biases/Adam"
  input: "ssd_300_vgg/block8/conv3x3/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block8/conv3x3/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv3x3/biases/Adam_1"
  input: "ssd_300_vgg/block8/conv3x3/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8/conv3x3/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block8/conv3x3/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam_1"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv1x1/biases/Adam"
  input: "ssd_300_vgg/block9/conv1x1/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block9/conv1x1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv1x1/biases/Adam_1"
  input: "ssd_300_vgg/block9/conv1x1/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv1x1/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block9/conv1x1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam_1"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv3x3/biases/Adam"
  input: "ssd_300_vgg/block9/conv3x3/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block9/conv3x3/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv3x3/biases/Adam_1"
  input: "ssd_300_vgg/block9/conv3x3/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9/conv3x3/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block9/conv3x3/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam_1"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv1x1/biases/Adam"
  input: "ssd_300_vgg/block10/conv1x1/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block10/conv1x1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv1x1/biases/Adam_1"
  input: "ssd_300_vgg/block10/conv1x1/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv1x1/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block10/conv1x1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam_1"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv3x3/biases/Adam"
  input: "ssd_300_vgg/block10/conv3x3/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block10/conv3x3/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv3x3/biases/Adam_1"
  input: "ssd_300_vgg/block10/conv3x3/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10/conv3x3/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block10/conv3x3/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam_1"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv1x1/biases/Adam"
  input: "ssd_300_vgg/block11/conv1x1/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block11/conv1x1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv1x1/biases/Adam_1"
  input: "ssd_300_vgg/block11/conv1x1/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv1x1/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block11/conv1x1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam_1"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv3x3/biases/Adam"
  input: "ssd_300_vgg/block11/conv3x3/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block11/conv3x3/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv3x3/biases/Adam_1"
  input: "ssd_300_vgg/block11/conv3x3/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11/conv3x3/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block11/conv3x3/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam_1"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/Adam_1"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_loc/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/Adam_1"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block4_box/conv_cls/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/Adam_1"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_loc/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/Adam_1"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block7_box/conv_cls/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/Adam_1"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_loc/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/Adam_1"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block8_box/conv_cls/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/Adam_1"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_loc/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/Adam_1"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block9_box/conv_cls/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/Adam_1"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_loc/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/Adam_1"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block10_box/conv_cls/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/Adam_1"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_loc/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/biases/Adam/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/biases/Adam/read"
  op: "Identity"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/biases/Adam_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/Adam_1"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_300_vgg/block11_box/conv_cls/biases/Adam_1/read"
  op: "Identity"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.89999998
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.99900001
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv1/conv1_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv1/conv1_1/weights"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_43"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv1/conv1_1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv1/conv1_1/biases"
  input: "ssd_300_vgg/conv1/conv1_1/biases/Adam"
  input: "ssd_300_vgg/conv1/conv1_1/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/conv1/conv1_1/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv1/conv1_2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv1/conv1_2/weights"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_42"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv1/conv1_2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv1/conv1_2/biases"
  input: "ssd_300_vgg/conv1/conv1_2/biases/Adam"
  input: "ssd_300_vgg/conv1/conv1_2/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/conv1/conv1_2/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv2/conv2_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv2/conv2_1/weights"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_41"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv2/conv2_1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv2/conv2_1/biases"
  input: "ssd_300_vgg/conv2/conv2_1/biases/Adam"
  input: "ssd_300_vgg/conv2/conv2_1/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/conv2/conv2_1/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv2/conv2_2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv2/conv2_2/weights"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_40"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv2/conv2_2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv2/conv2_2/biases"
  input: "ssd_300_vgg/conv2/conv2_2/biases/Adam"
  input: "ssd_300_vgg/conv2/conv2_2/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/conv2/conv2_2/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv3/conv3_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv3/conv3_1/weights"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_39"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv3/conv3_1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv3/conv3_1/biases"
  input: "ssd_300_vgg/conv3/conv3_1/biases/Adam"
  input: "ssd_300_vgg/conv3/conv3_1/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/conv3/conv3_1/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv3/conv3_2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv3/conv3_2/weights"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_38"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv3/conv3_2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv3/conv3_2/biases"
  input: "ssd_300_vgg/conv3/conv3_2/biases/Adam"
  input: "ssd_300_vgg/conv3/conv3_2/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/conv3/conv3_2/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv3/conv3_3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv3/conv3_3/weights"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_37"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv3/conv3_3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv3/conv3_3/biases"
  input: "ssd_300_vgg/conv3/conv3_3/biases/Adam"
  input: "ssd_300_vgg/conv3/conv3_3/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/conv3/conv3_3/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv4/conv4_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv4/conv4_1/weights"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_36"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv4/conv4_1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv4/conv4_1/biases"
  input: "ssd_300_vgg/conv4/conv4_1/biases/Adam"
  input: "ssd_300_vgg/conv4/conv4_1/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/conv4/conv4_1/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv4/conv4_2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv4/conv4_2/weights"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_35"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv4/conv4_2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv4/conv4_2/biases"
  input: "ssd_300_vgg/conv4/conv4_2/biases/Adam"
  input: "ssd_300_vgg/conv4/conv4_2/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/conv4/conv4_2/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv4/conv4_3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv4/conv4_3/weights"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_34"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv4/conv4_3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv4/conv4_3/biases"
  input: "ssd_300_vgg/conv4/conv4_3/biases/Adam"
  input: "ssd_300_vgg/conv4/conv4_3/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/conv4/conv4_3/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv5/conv5_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv5/conv5_1/weights"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_32"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv5/conv5_1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv5/conv5_1/biases"
  input: "ssd_300_vgg/conv5/conv5_1/biases/Adam"
  input: "ssd_300_vgg/conv5/conv5_1/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/conv5/conv5_1/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv5/conv5_2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv5/conv5_2/weights"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_31"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv5/conv5_2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv5/conv5_2/biases"
  input: "ssd_300_vgg/conv5/conv5_2/biases/Adam"
  input: "ssd_300_vgg/conv5/conv5_2/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/conv5/conv5_2/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv5/conv5_3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv5/conv5_3/weights"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_30"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv5/conv5_3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv5/conv5_3/biases"
  input: "ssd_300_vgg/conv5/conv5_3/biases/Adam"
  input: "ssd_300_vgg/conv5/conv5_3/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/conv5/conv5_3/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv6/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv6/weights"
  input: "ssd_300_vgg/conv6/weights/Adam"
  input: "ssd_300_vgg/conv6/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_29"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv6/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv6/biases"
  input: "ssd_300_vgg/conv6/biases/Adam"
  input: "ssd_300_vgg/conv6/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/conv6/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv7/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv7/weights"
  input: "ssd_300_vgg/conv7/weights/Adam"
  input: "ssd_300_vgg/conv7/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_28"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/conv7/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/conv7/biases"
  input: "ssd_300_vgg/conv7/biases/Adam"
  input: "ssd_300_vgg/conv7/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/conv7/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block8/conv1x1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block8/conv1x1/weights"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_26"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block8/conv1x1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block8/conv1x1/biases"
  input: "ssd_300_vgg/block8/conv1x1/biases/Adam"
  input: "ssd_300_vgg/block8/conv1x1/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block8/conv1x1/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block8/conv3x3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block8/conv3x3/weights"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_25"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block8/conv3x3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block8/conv3x3/biases"
  input: "ssd_300_vgg/block8/conv3x3/biases/Adam"
  input: "ssd_300_vgg/block8/conv3x3/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block8/conv3x3/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block9/conv1x1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block9/conv1x1/weights"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_24"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block9/conv1x1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block9/conv1x1/biases"
  input: "ssd_300_vgg/block9/conv1x1/biases/Adam"
  input: "ssd_300_vgg/block9/conv1x1/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block9/conv1x1/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block9/conv3x3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block9/conv3x3/weights"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_22"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block9/conv3x3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block9/conv3x3/biases"
  input: "ssd_300_vgg/block9/conv3x3/biases/Adam"
  input: "ssd_300_vgg/block9/conv3x3/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block9/conv3x3/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block10/conv1x1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block10/conv1x1/weights"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_21"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block10/conv1x1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block10/conv1x1/biases"
  input: "ssd_300_vgg/block10/conv1x1/biases/Adam"
  input: "ssd_300_vgg/block10/conv1x1/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block10/conv1x1/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block10/conv3x3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block10/conv3x3/weights"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_19"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block10/conv3x3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block10/conv3x3/biases"
  input: "ssd_300_vgg/block10/conv3x3/biases/Adam"
  input: "ssd_300_vgg/block10/conv3x3/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block10/conv3x3/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block11/conv1x1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block11/conv1x1/weights"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_18"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block11/conv1x1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block11/conv1x1/biases"
  input: "ssd_300_vgg/block11/conv1x1/biases/Adam"
  input: "ssd_300_vgg/block11/conv1x1/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block11/conv1x1/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block11/conv3x3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block11/conv3x3/weights"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_16"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block11/conv3x3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block11/conv3x3/biases"
  input: "ssd_300_vgg/block11/conv3x3/biases/Adam"
  input: "ssd_300_vgg/block11/conv3x3/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block11/conv3x3/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block4_box/L2Normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block4_box/L2Normalization/ExpandDims_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block4_box/conv_loc/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block4_box/conv_loc/weights"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block4_box/conv_loc/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block4_box/conv_loc/biases"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block4_box/conv_loc/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block4_box/conv_cls/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block4_box/conv_cls/weights"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block4_box/conv_cls/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block4_box/conv_cls/biases"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block4_box/conv_cls/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block7_box/conv_loc/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block7_box/conv_loc/weights"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block7_box/conv_loc/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block7_box/conv_loc/biases"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block7_box/conv_loc/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block7_box/conv_cls/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block7_box/conv_cls/weights"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block7_box/conv_cls/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block7_box/conv_cls/biases"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block7_box/conv_cls/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block8_box/conv_loc/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block8_box/conv_loc/weights"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block8_box/conv_loc/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block8_box/conv_loc/biases"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block8_box/conv_loc/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block8_box/conv_cls/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block8_box/conv_cls/weights"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block8_box/conv_cls/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block8_box/conv_cls/biases"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block8_box/conv_cls/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block9_box/conv_loc/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block9_box/conv_loc/weights"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block9_box/conv_loc/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block9_box/conv_loc/biases"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block9_box/conv_loc/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block9_box/conv_cls/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block9_box/conv_cls/weights"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block9_box/conv_cls/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block9_box/conv_cls/biases"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block9_box/conv_cls/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block10_box/conv_loc/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block10_box/conv_loc/weights"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block10_box/conv_loc/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block10_box/conv_loc/biases"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block10_box/conv_loc/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block10_box/conv_cls/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block10_box/conv_cls/weights"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block10_box/conv_cls/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block10_box/conv_cls/biases"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block10_box/conv_cls/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block11_box/conv_loc/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block11_box/conv_loc/weights"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_15"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block11_box/conv_loc/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block11_box/conv_loc/biases"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block11_box/conv_loc/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block11_box/conv_cls/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block11_box/conv_cls/weights"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_ssd_300_vgg/block11_box/conv_cls/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "ssd_300_vgg/block11_box/conv_cls/biases"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "exponential_decay_learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/ssd_300_vgg/block11_box/conv_cls/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_ssd_300_vgg/block10/conv1x1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10/conv1x1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10/conv3x3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10/conv3x3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11/conv1x1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11/conv1x1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11/conv3x3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11/conv3x3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block4_box/L2Normalization/gamma/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block4_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block4_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block4_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block4_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block7_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block7_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block7_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block7_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8/conv1x1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8/conv1x1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8/conv3x3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8/conv3x3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9/conv1x1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9/conv1x1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9/conv3x3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9/conv3x3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv1/conv1_1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv1/conv1_1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv1/conv1_2/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv1/conv1_2/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv2/conv2_1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv2/conv2_1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv2/conv2_2/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv2/conv2_2/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_2/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_2/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_2/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_2/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_2/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_2/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv6/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv6/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv7/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv7/weights/ApplyAdam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_ssd_300_vgg/block10/conv1x1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10/conv1x1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10/conv3x3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10/conv3x3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11/conv1x1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11/conv1x1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11/conv3x3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11/conv3x3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block4_box/L2Normalization/gamma/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block4_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block4_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block4_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block4_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block7_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block7_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block7_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block7_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8/conv1x1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8/conv1x1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8/conv3x3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8/conv3x3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9/conv1x1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9/conv1x1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9/conv3x3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9/conv3x3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv1/conv1_1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv1/conv1_1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv1/conv1_2/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv1/conv1_2/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv2/conv2_1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv2/conv2_1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv2/conv2_2/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv2/conv2_2/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_2/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_2/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_2/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_2/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_2/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_2/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv6/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv6/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv7/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv7/weights/ApplyAdam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
  input: "^Adam/update_ssd_300_vgg/block10/conv1x1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10/conv1x1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10/conv3x3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10/conv3x3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block10_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11/conv1x1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11/conv1x1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11/conv3x3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11/conv3x3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block11_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block4_box/L2Normalization/gamma/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block4_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block4_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block4_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block4_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block7_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block7_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block7_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block7_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8/conv1x1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8/conv1x1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8/conv3x3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8/conv3x3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block8_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9/conv1x1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9/conv1x1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9/conv3x3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9/conv3x3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9_box/conv_cls/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9_box/conv_cls/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9_box/conv_loc/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/block9_box/conv_loc/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv1/conv1_1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv1/conv1_1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv1/conv1_2/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv1/conv1_2/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv2/conv2_1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv2/conv2_1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv2/conv2_2/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv2/conv2_2/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_2/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_2/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv3/conv3_3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_2/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_2/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv4/conv4_3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_1/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_1/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_2/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_2/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_3/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv5/conv5_3/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv6/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv6/weights/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv7/biases/ApplyAdam"
  input: "^Adam/update_ssd_300_vgg/conv7/weights/ApplyAdam"
  device: "/device:CPU:0"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^Adam"
  device: "/device:CPU:0"
}
node {
  name: "train_op"
  op: "Identity"
  input: "total_loss"
  input: "^group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "summary_op/summary_op"
  op: "MergeSummary"
  input: "ssd_300_vgg/conv3/conv3_3/weights_1"
  input: "sparsity/block6"
  input: "activations/block8"
  input: "ssd_300_vgg/conv5/conv5_1/biases_1"
  input: "ssd_300_vgg/block11_box/conv_cls/biases_1"
  input: "ssd_losses/cross_entropy_pos/value_1"
  input: "ssd_300_vgg/conv2/conv2_2/biases_1"
  input: "sparsity/block5"
  input: "ssd_300_vgg/conv4/conv4_2/weights_1"
  input: "sparsity/block3"
  input: "activations/block11"
  input: "ssd_300_vgg/conv5/conv5_3/biases_1"
  input: "ssd_300_vgg/block9/conv1x1/weights_1"
  input: "batch/fraction_of_40_full"
  input: "ssd_300_vgg/block11/conv1x1/biases_1"
  input: "ssd_300_vgg/block7_box/conv_loc/biases_1"
  input: "ssd_300_vgg/conv7/biases_1"
  input: "ssd_300_vgg/block9_box/conv_cls/weights_1"
  input: "ssd_300_vgg/block10/conv1x1/weights_1"
  input: "ssd_300_vgg/block4_box/conv_loc/weights_1"
  input: "ssd_300_vgg/block8_box/conv_loc/biases_1"
  input: "clone_loss_1"
  input: "ssd_preprocessing_train/image_color_distorted"
  input: "ssd_300_vgg/block10_box/conv_cls/weights_1"
  input: "ssd_300_vgg/conv1/conv1_2/weights_1"
  input: "ssd_300_vgg/conv3/conv3_2/biases_1"
  input: "sparsity/block2"
  input: "activations/block7"
  input: "ssd_300_vgg/conv5/conv5_1/weights_1"
  input: "ssd_300_vgg/block9_box/conv_loc/biases_1"
  input: "ssd_300_vgg/block11_box/conv_cls/weights_1"
  input: "ssd_300_vgg/conv2/conv2_2/weights_1"
  input: "sparsity/block4"
  input: "ssd_300_vgg/conv4/conv4_1/biases_1"
  input: "sparsity/block10"
  input: "activations/block6"
  input: "ssd_300_vgg/conv5/conv5_3/weights_1"
  input: "ssd_preprocessing_train/image_shape_distorted"
  input: "ssd_300_vgg/block8/conv3x3/biases_1"
  input: "ssd_300_vgg/block11/conv1x1/weights_1"
  input: "sparsity/block1"
  input: "activations/block5"
  input: "ssd_300_vgg/conv4/conv4_3/biases_1"
  input: "ssd_300_vgg/block7_box/conv_loc/weights_1"
  input: "ssd_300_vgg/conv7/weights_1"
  input: "ssd_300_vgg/block9/conv3x3/biases_1"
  input: "learning_rate"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma_1"
  input: "ssd_300_vgg/block8_box/conv_loc/weights_1"
  input: "ssd_300_vgg/block10_box/conv_loc/biases_1"
  input: "ssd_300_vgg/conv1/conv1_1/biases_1"
  input: "ssd_preprocessing_train/image_with_bboxes"
  input: "ssd_300_vgg/conv3/conv3_2/weights_1"
  input: "ssd_300_vgg/block4_box/conv_cls/biases_1"
  input: "ssd_300_vgg/block9_box/conv_loc/weights_1"
  input: "ssd_300_vgg/block11_box/conv_loc/biases_1"
  input: "ssd_300_vgg/conv2/conv2_1/biases_1"
  input: "ssd_300_vgg/conv4/conv4_1/weights_1"
  input: "sparsity/block9"
  input: "activations/block2"
  input: "pascalvoc_2007_data_provider/parallel_read/fraction_of_160_full"
  input: "ssd_300_vgg/conv5/conv5_2/biases_1"
  input: "ssd_300_vgg/block8/conv3x3/weights_1"
  input: "pascalvoc_2007_data_provider/parallel_read/filenames/fraction_of_32_full"
  input: "ssd_300_vgg/conv3/conv3_1/biases_1"
  input: "ssd_300_vgg/block10/conv3x3/biases_1"
  input: "sparsity/block8"
  input: "activations/block4"
  input: "ssd_300_vgg/conv4/conv4_3/weights_1"
  input: "prefetch_queue/fraction_of_2_full"
  input: "activations/block10"
  input: "ssd_300_vgg/conv6/biases_1"
  input: "total_loss_1"
  input: "activations/block3"
  input: "ssd_300_vgg/block9/conv3x3/weights_1"
  input: "ssd_300_vgg/block11/conv3x3/biases_1"
  input: "ssd_300_vgg/block7_box/conv_cls/biases_1"
  input: "ssd_300_vgg/block10_box/conv_loc/weights_1"
  input: "ssd_300_vgg/conv1/conv1_1/weights_1"
  input: "ssd_300_vgg/block10/conv3x3/weights_1"
  input: "ssd_300_vgg/block4_box/conv_cls/weights_1"
  input: "ssd_300_vgg/block8_box/conv_cls/biases_1"
  input: "ssd_300_vgg/block11_box/conv_loc/weights_1"
  input: "ssd_300_vgg/conv2/conv2_1/weights_1"
  input: "ssd_300_vgg/conv3/conv3_3/biases_1"
  input: "sparsity/block11"
  input: "activations/block1"
  input: "ssd_300_vgg/conv5/conv5_2/weights_1"
  input: "ssd_300_vgg/block8/conv1x1/biases_1"
  input: "ssd_losses/localization/value_1"
  input: "ssd_300_vgg/conv3/conv3_1/weights_1"
  input: "sparsity/block7"
  input: "ssd_300_vgg/conv4/conv4_2/biases_1"
  input: "activations/block9"
  input: "ssd_300_vgg/conv6/weights_1"
  input: "ssd_300_vgg/block9/conv1x1/biases_1"
  input: "ssd_300_vgg/block11/conv3x3/weights_1"
  input: "ssd_300_vgg/block7_box/conv_cls/weights_1"
  input: "ssd_300_vgg/block8/conv1x1/weights_1"
  input: "ssd_300_vgg/block9_box/conv_cls/biases_1"
  input: "ssd_losses/cross_entropy_neg/value_1"
  input: "ssd_300_vgg/block10/conv1x1/biases_1"
  input: "ssd_300_vgg/block4_box/conv_loc/biases_1"
  input: "ssd_300_vgg/block8_box/conv_cls/weights_1"
  input: "regularization_loss_1"
  input: "ssd_300_vgg/block10_box/conv_cls/biases_1"
  input: "ssd_300_vgg/conv1/conv1_2/biases_1"
  attr {
    key: "N"
    value {
      i: 107
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 216
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 216
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "global_step"
        string_val: "ssd_300_vgg/block10/conv1x1/biases"
        string_val: "ssd_300_vgg/block10/conv1x1/biases/Adam"
        string_val: "ssd_300_vgg/block10/conv1x1/biases/Adam_1"
        string_val: "ssd_300_vgg/block10/conv1x1/weights"
        string_val: "ssd_300_vgg/block10/conv1x1/weights/Adam"
        string_val: "ssd_300_vgg/block10/conv1x1/weights/Adam_1"
        string_val: "ssd_300_vgg/block10/conv3x3/biases"
        string_val: "ssd_300_vgg/block10/conv3x3/biases/Adam"
        string_val: "ssd_300_vgg/block10/conv3x3/biases/Adam_1"
        string_val: "ssd_300_vgg/block10/conv3x3/weights"
        string_val: "ssd_300_vgg/block10/conv3x3/weights/Adam"
        string_val: "ssd_300_vgg/block10/conv3x3/weights/Adam_1"
        string_val: "ssd_300_vgg/block10_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block10_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block10_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block10_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block10_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block10_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block10_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block10_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block10_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block10_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block11/conv1x1/biases"
        string_val: "ssd_300_vgg/block11/conv1x1/biases/Adam"
        string_val: "ssd_300_vgg/block11/conv1x1/biases/Adam_1"
        string_val: "ssd_300_vgg/block11/conv1x1/weights"
        string_val: "ssd_300_vgg/block11/conv1x1/weights/Adam"
        string_val: "ssd_300_vgg/block11/conv1x1/weights/Adam_1"
        string_val: "ssd_300_vgg/block11/conv3x3/biases"
        string_val: "ssd_300_vgg/block11/conv3x3/biases/Adam"
        string_val: "ssd_300_vgg/block11/conv3x3/biases/Adam_1"
        string_val: "ssd_300_vgg/block11/conv3x3/weights"
        string_val: "ssd_300_vgg/block11/conv3x3/weights/Adam"
        string_val: "ssd_300_vgg/block11/conv3x3/weights/Adam_1"
        string_val: "ssd_300_vgg/block11_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block11_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block11_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block11_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block11_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block11_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block11_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block11_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block11_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block11_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block4_box/L2Normalization/gamma"
        string_val: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam"
        string_val: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam_1"
        string_val: "ssd_300_vgg/block4_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block4_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block4_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block4_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block4_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block4_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block4_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block4_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block4_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block4_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block7_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block7_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block7_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block7_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block7_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block7_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block7_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block7_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block7_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block7_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block8/conv1x1/biases"
        string_val: "ssd_300_vgg/block8/conv1x1/biases/Adam"
        string_val: "ssd_300_vgg/block8/conv1x1/biases/Adam_1"
        string_val: "ssd_300_vgg/block8/conv1x1/weights"
        string_val: "ssd_300_vgg/block8/conv1x1/weights/Adam"
        string_val: "ssd_300_vgg/block8/conv1x1/weights/Adam_1"
        string_val: "ssd_300_vgg/block8/conv3x3/biases"
        string_val: "ssd_300_vgg/block8/conv3x3/biases/Adam"
        string_val: "ssd_300_vgg/block8/conv3x3/biases/Adam_1"
        string_val: "ssd_300_vgg/block8/conv3x3/weights"
        string_val: "ssd_300_vgg/block8/conv3x3/weights/Adam"
        string_val: "ssd_300_vgg/block8/conv3x3/weights/Adam_1"
        string_val: "ssd_300_vgg/block8_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block8_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block8_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block8_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block8_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block8_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block8_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block8_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block8_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block8_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block9/conv1x1/biases"
        string_val: "ssd_300_vgg/block9/conv1x1/biases/Adam"
        string_val: "ssd_300_vgg/block9/conv1x1/biases/Adam_1"
        string_val: "ssd_300_vgg/block9/conv1x1/weights"
        string_val: "ssd_300_vgg/block9/conv1x1/weights/Adam"
        string_val: "ssd_300_vgg/block9/conv1x1/weights/Adam_1"
        string_val: "ssd_300_vgg/block9/conv3x3/biases"
        string_val: "ssd_300_vgg/block9/conv3x3/biases/Adam"
        string_val: "ssd_300_vgg/block9/conv3x3/biases/Adam_1"
        string_val: "ssd_300_vgg/block9/conv3x3/weights"
        string_val: "ssd_300_vgg/block9/conv3x3/weights/Adam"
        string_val: "ssd_300_vgg/block9/conv3x3/weights/Adam_1"
        string_val: "ssd_300_vgg/block9_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block9_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block9_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block9_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block9_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block9_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block9_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block9_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block9_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block9_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/conv1/conv1_1/biases"
        string_val: "ssd_300_vgg/conv1/conv1_1/biases/Adam"
        string_val: "ssd_300_vgg/conv1/conv1_1/biases/Adam_1"
        string_val: "ssd_300_vgg/conv1/conv1_1/weights"
        string_val: "ssd_300_vgg/conv1/conv1_1/weights/Adam"
        string_val: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1"
        string_val: "ssd_300_vgg/conv1/conv1_2/biases"
        string_val: "ssd_300_vgg/conv1/conv1_2/biases/Adam"
        string_val: "ssd_300_vgg/conv1/conv1_2/biases/Adam_1"
        string_val: "ssd_300_vgg/conv1/conv1_2/weights"
        string_val: "ssd_300_vgg/conv1/conv1_2/weights/Adam"
        string_val: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1"
        string_val: "ssd_300_vgg/conv2/conv2_1/biases"
        string_val: "ssd_300_vgg/conv2/conv2_1/biases/Adam"
        string_val: "ssd_300_vgg/conv2/conv2_1/biases/Adam_1"
        string_val: "ssd_300_vgg/conv2/conv2_1/weights"
        string_val: "ssd_300_vgg/conv2/conv2_1/weights/Adam"
        string_val: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1"
        string_val: "ssd_300_vgg/conv2/conv2_2/biases"
        string_val: "ssd_300_vgg/conv2/conv2_2/biases/Adam"
        string_val: "ssd_300_vgg/conv2/conv2_2/biases/Adam_1"
        string_val: "ssd_300_vgg/conv2/conv2_2/weights"
        string_val: "ssd_300_vgg/conv2/conv2_2/weights/Adam"
        string_val: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_1/biases"
        string_val: "ssd_300_vgg/conv3/conv3_1/biases/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_1/biases/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_1/weights"
        string_val: "ssd_300_vgg/conv3/conv3_1/weights/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_2/biases"
        string_val: "ssd_300_vgg/conv3/conv3_2/biases/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_2/biases/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_2/weights"
        string_val: "ssd_300_vgg/conv3/conv3_2/weights/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_3/biases"
        string_val: "ssd_300_vgg/conv3/conv3_3/biases/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_3/biases/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_3/weights"
        string_val: "ssd_300_vgg/conv3/conv3_3/weights/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_1/biases"
        string_val: "ssd_300_vgg/conv4/conv4_1/biases/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_1/biases/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_1/weights"
        string_val: "ssd_300_vgg/conv4/conv4_1/weights/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_2/biases"
        string_val: "ssd_300_vgg/conv4/conv4_2/biases/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_2/biases/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_2/weights"
        string_val: "ssd_300_vgg/conv4/conv4_2/weights/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_3/biases"
        string_val: "ssd_300_vgg/conv4/conv4_3/biases/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_3/biases/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_3/weights"
        string_val: "ssd_300_vgg/conv4/conv4_3/weights/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_1/biases"
        string_val: "ssd_300_vgg/conv5/conv5_1/biases/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_1/biases/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_1/weights"
        string_val: "ssd_300_vgg/conv5/conv5_1/weights/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_2/biases"
        string_val: "ssd_300_vgg/conv5/conv5_2/biases/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_2/biases/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_2/weights"
        string_val: "ssd_300_vgg/conv5/conv5_2/weights/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_3/biases"
        string_val: "ssd_300_vgg/conv5/conv5_3/biases/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_3/biases/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_3/weights"
        string_val: "ssd_300_vgg/conv5/conv5_3/weights/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1"
        string_val: "ssd_300_vgg/conv6/biases"
        string_val: "ssd_300_vgg/conv6/biases/Adam"
        string_val: "ssd_300_vgg/conv6/biases/Adam_1"
        string_val: "ssd_300_vgg/conv6/weights"
        string_val: "ssd_300_vgg/conv6/weights/Adam"
        string_val: "ssd_300_vgg/conv6/weights/Adam_1"
        string_val: "ssd_300_vgg/conv7/biases"
        string_val: "ssd_300_vgg/conv7/biases/Adam"
        string_val: "ssd_300_vgg/conv7/biases/Adam_1"
        string_val: "ssd_300_vgg/conv7/weights"
        string_val: "ssd_300_vgg/conv7/weights/Adam"
        string_val: "ssd_300_vgg/conv7/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 216
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 216
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "global_step"
  input: "ssd_300_vgg/block10/conv1x1/biases"
  input: "ssd_300_vgg/block10/conv1x1/biases/Adam"
  input: "ssd_300_vgg/block10/conv1x1/biases/Adam_1"
  input: "ssd_300_vgg/block10/conv1x1/weights"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam_1"
  input: "ssd_300_vgg/block10/conv3x3/biases"
  input: "ssd_300_vgg/block10/conv3x3/biases/Adam"
  input: "ssd_300_vgg/block10/conv3x3/biases/Adam_1"
  input: "ssd_300_vgg/block10/conv3x3/weights"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam_1"
  input: "ssd_300_vgg/block10_box/conv_cls/biases"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/Adam_1"
  input: "ssd_300_vgg/block10_box/conv_cls/weights"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1"
  input: "ssd_300_vgg/block10_box/conv_loc/biases"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/Adam_1"
  input: "ssd_300_vgg/block10_box/conv_loc/weights"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1"
  input: "ssd_300_vgg/block11/conv1x1/biases"
  input: "ssd_300_vgg/block11/conv1x1/biases/Adam"
  input: "ssd_300_vgg/block11/conv1x1/biases/Adam_1"
  input: "ssd_300_vgg/block11/conv1x1/weights"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam_1"
  input: "ssd_300_vgg/block11/conv3x3/biases"
  input: "ssd_300_vgg/block11/conv3x3/biases/Adam"
  input: "ssd_300_vgg/block11/conv3x3/biases/Adam_1"
  input: "ssd_300_vgg/block11/conv3x3/weights"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam_1"
  input: "ssd_300_vgg/block11_box/conv_cls/biases"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/Adam_1"
  input: "ssd_300_vgg/block11_box/conv_cls/weights"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1"
  input: "ssd_300_vgg/block11_box/conv_loc/biases"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/Adam_1"
  input: "ssd_300_vgg/block11_box/conv_loc/weights"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam_1"
  input: "ssd_300_vgg/block4_box/conv_cls/biases"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/Adam_1"
  input: "ssd_300_vgg/block4_box/conv_cls/weights"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1"
  input: "ssd_300_vgg/block4_box/conv_loc/biases"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/Adam_1"
  input: "ssd_300_vgg/block4_box/conv_loc/weights"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1"
  input: "ssd_300_vgg/block7_box/conv_cls/biases"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/Adam_1"
  input: "ssd_300_vgg/block7_box/conv_cls/weights"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1"
  input: "ssd_300_vgg/block7_box/conv_loc/biases"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/Adam_1"
  input: "ssd_300_vgg/block7_box/conv_loc/weights"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1"
  input: "ssd_300_vgg/block8/conv1x1/biases"
  input: "ssd_300_vgg/block8/conv1x1/biases/Adam"
  input: "ssd_300_vgg/block8/conv1x1/biases/Adam_1"
  input: "ssd_300_vgg/block8/conv1x1/weights"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam_1"
  input: "ssd_300_vgg/block8/conv3x3/biases"
  input: "ssd_300_vgg/block8/conv3x3/biases/Adam"
  input: "ssd_300_vgg/block8/conv3x3/biases/Adam_1"
  input: "ssd_300_vgg/block8/conv3x3/weights"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam_1"
  input: "ssd_300_vgg/block8_box/conv_cls/biases"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/Adam_1"
  input: "ssd_300_vgg/block8_box/conv_cls/weights"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1"
  input: "ssd_300_vgg/block8_box/conv_loc/biases"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/Adam_1"
  input: "ssd_300_vgg/block8_box/conv_loc/weights"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1"
  input: "ssd_300_vgg/block9/conv1x1/biases"
  input: "ssd_300_vgg/block9/conv1x1/biases/Adam"
  input: "ssd_300_vgg/block9/conv1x1/biases/Adam_1"
  input: "ssd_300_vgg/block9/conv1x1/weights"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam_1"
  input: "ssd_300_vgg/block9/conv3x3/biases"
  input: "ssd_300_vgg/block9/conv3x3/biases/Adam"
  input: "ssd_300_vgg/block9/conv3x3/biases/Adam_1"
  input: "ssd_300_vgg/block9/conv3x3/weights"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam_1"
  input: "ssd_300_vgg/block9_box/conv_cls/biases"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/Adam"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/Adam_1"
  input: "ssd_300_vgg/block9_box/conv_cls/weights"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1"
  input: "ssd_300_vgg/block9_box/conv_loc/biases"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/Adam"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/Adam_1"
  input: "ssd_300_vgg/block9_box/conv_loc/weights"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1"
  input: "ssd_300_vgg/conv1/conv1_1/biases"
  input: "ssd_300_vgg/conv1/conv1_1/biases/Adam"
  input: "ssd_300_vgg/conv1/conv1_1/biases/Adam_1"
  input: "ssd_300_vgg/conv1/conv1_1/weights"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1"
  input: "ssd_300_vgg/conv1/conv1_2/biases"
  input: "ssd_300_vgg/conv1/conv1_2/biases/Adam"
  input: "ssd_300_vgg/conv1/conv1_2/biases/Adam_1"
  input: "ssd_300_vgg/conv1/conv1_2/weights"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1"
  input: "ssd_300_vgg/conv2/conv2_1/biases"
  input: "ssd_300_vgg/conv2/conv2_1/biases/Adam"
  input: "ssd_300_vgg/conv2/conv2_1/biases/Adam_1"
  input: "ssd_300_vgg/conv2/conv2_1/weights"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1"
  input: "ssd_300_vgg/conv2/conv2_2/biases"
  input: "ssd_300_vgg/conv2/conv2_2/biases/Adam"
  input: "ssd_300_vgg/conv2/conv2_2/biases/Adam_1"
  input: "ssd_300_vgg/conv2/conv2_2/weights"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1"
  input: "ssd_300_vgg/conv3/conv3_1/biases"
  input: "ssd_300_vgg/conv3/conv3_1/biases/Adam"
  input: "ssd_300_vgg/conv3/conv3_1/biases/Adam_1"
  input: "ssd_300_vgg/conv3/conv3_1/weights"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1"
  input: "ssd_300_vgg/conv3/conv3_2/biases"
  input: "ssd_300_vgg/conv3/conv3_2/biases/Adam"
  input: "ssd_300_vgg/conv3/conv3_2/biases/Adam_1"
  input: "ssd_300_vgg/conv3/conv3_2/weights"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1"
  input: "ssd_300_vgg/conv3/conv3_3/biases"
  input: "ssd_300_vgg/conv3/conv3_3/biases/Adam"
  input: "ssd_300_vgg/conv3/conv3_3/biases/Adam_1"
  input: "ssd_300_vgg/conv3/conv3_3/weights"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1"
  input: "ssd_300_vgg/conv4/conv4_1/biases"
  input: "ssd_300_vgg/conv4/conv4_1/biases/Adam"
  input: "ssd_300_vgg/conv4/conv4_1/biases/Adam_1"
  input: "ssd_300_vgg/conv4/conv4_1/weights"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1"
  input: "ssd_300_vgg/conv4/conv4_2/biases"
  input: "ssd_300_vgg/conv4/conv4_2/biases/Adam"
  input: "ssd_300_vgg/conv4/conv4_2/biases/Adam_1"
  input: "ssd_300_vgg/conv4/conv4_2/weights"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1"
  input: "ssd_300_vgg/conv4/conv4_3/biases"
  input: "ssd_300_vgg/conv4/conv4_3/biases/Adam"
  input: "ssd_300_vgg/conv4/conv4_3/biases/Adam_1"
  input: "ssd_300_vgg/conv4/conv4_3/weights"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1"
  input: "ssd_300_vgg/conv5/conv5_1/biases"
  input: "ssd_300_vgg/conv5/conv5_1/biases/Adam"
  input: "ssd_300_vgg/conv5/conv5_1/biases/Adam_1"
  input: "ssd_300_vgg/conv5/conv5_1/weights"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1"
  input: "ssd_300_vgg/conv5/conv5_2/biases"
  input: "ssd_300_vgg/conv5/conv5_2/biases/Adam"
  input: "ssd_300_vgg/conv5/conv5_2/biases/Adam_1"
  input: "ssd_300_vgg/conv5/conv5_2/weights"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1"
  input: "ssd_300_vgg/conv5/conv5_3/biases"
  input: "ssd_300_vgg/conv5/conv5_3/biases/Adam"
  input: "ssd_300_vgg/conv5/conv5_3/biases/Adam_1"
  input: "ssd_300_vgg/conv5/conv5_3/weights"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1"
  input: "ssd_300_vgg/conv6/biases"
  input: "ssd_300_vgg/conv6/biases/Adam"
  input: "ssd_300_vgg/conv6/biases/Adam_1"
  input: "ssd_300_vgg/conv6/weights"
  input: "ssd_300_vgg/conv6/weights/Adam"
  input: "ssd_300_vgg/conv6/weights/Adam_1"
  input: "ssd_300_vgg/conv7/biases"
  input: "ssd_300_vgg/conv7/biases/Adam"
  input: "ssd_300_vgg/conv7/biases/Adam_1"
  input: "ssd_300_vgg/conv7/weights"
  input: "ssd_300_vgg/conv7/weights/Adam"
  input: "ssd_300_vgg/conv7/weights/Adam_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 216
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 216
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "global_step"
        string_val: "ssd_300_vgg/block10/conv1x1/biases"
        string_val: "ssd_300_vgg/block10/conv1x1/biases/Adam"
        string_val: "ssd_300_vgg/block10/conv1x1/biases/Adam_1"
        string_val: "ssd_300_vgg/block10/conv1x1/weights"
        string_val: "ssd_300_vgg/block10/conv1x1/weights/Adam"
        string_val: "ssd_300_vgg/block10/conv1x1/weights/Adam_1"
        string_val: "ssd_300_vgg/block10/conv3x3/biases"
        string_val: "ssd_300_vgg/block10/conv3x3/biases/Adam"
        string_val: "ssd_300_vgg/block10/conv3x3/biases/Adam_1"
        string_val: "ssd_300_vgg/block10/conv3x3/weights"
        string_val: "ssd_300_vgg/block10/conv3x3/weights/Adam"
        string_val: "ssd_300_vgg/block10/conv3x3/weights/Adam_1"
        string_val: "ssd_300_vgg/block10_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block10_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block10_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block10_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block10_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block10_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block10_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block10_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block10_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block10_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block11/conv1x1/biases"
        string_val: "ssd_300_vgg/block11/conv1x1/biases/Adam"
        string_val: "ssd_300_vgg/block11/conv1x1/biases/Adam_1"
        string_val: "ssd_300_vgg/block11/conv1x1/weights"
        string_val: "ssd_300_vgg/block11/conv1x1/weights/Adam"
        string_val: "ssd_300_vgg/block11/conv1x1/weights/Adam_1"
        string_val: "ssd_300_vgg/block11/conv3x3/biases"
        string_val: "ssd_300_vgg/block11/conv3x3/biases/Adam"
        string_val: "ssd_300_vgg/block11/conv3x3/biases/Adam_1"
        string_val: "ssd_300_vgg/block11/conv3x3/weights"
        string_val: "ssd_300_vgg/block11/conv3x3/weights/Adam"
        string_val: "ssd_300_vgg/block11/conv3x3/weights/Adam_1"
        string_val: "ssd_300_vgg/block11_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block11_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block11_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block11_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block11_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block11_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block11_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block11_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block11_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block11_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block4_box/L2Normalization/gamma"
        string_val: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam"
        string_val: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam_1"
        string_val: "ssd_300_vgg/block4_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block4_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block4_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block4_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block4_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block4_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block4_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block4_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block4_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block4_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block7_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block7_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block7_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block7_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block7_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block7_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block7_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block7_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block7_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block7_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block8/conv1x1/biases"
        string_val: "ssd_300_vgg/block8/conv1x1/biases/Adam"
        string_val: "ssd_300_vgg/block8/conv1x1/biases/Adam_1"
        string_val: "ssd_300_vgg/block8/conv1x1/weights"
        string_val: "ssd_300_vgg/block8/conv1x1/weights/Adam"
        string_val: "ssd_300_vgg/block8/conv1x1/weights/Adam_1"
        string_val: "ssd_300_vgg/block8/conv3x3/biases"
        string_val: "ssd_300_vgg/block8/conv3x3/biases/Adam"
        string_val: "ssd_300_vgg/block8/conv3x3/biases/Adam_1"
        string_val: "ssd_300_vgg/block8/conv3x3/weights"
        string_val: "ssd_300_vgg/block8/conv3x3/weights/Adam"
        string_val: "ssd_300_vgg/block8/conv3x3/weights/Adam_1"
        string_val: "ssd_300_vgg/block8_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block8_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block8_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block8_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block8_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block8_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block8_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block8_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block8_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block8_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block9/conv1x1/biases"
        string_val: "ssd_300_vgg/block9/conv1x1/biases/Adam"
        string_val: "ssd_300_vgg/block9/conv1x1/biases/Adam_1"
        string_val: "ssd_300_vgg/block9/conv1x1/weights"
        string_val: "ssd_300_vgg/block9/conv1x1/weights/Adam"
        string_val: "ssd_300_vgg/block9/conv1x1/weights/Adam_1"
        string_val: "ssd_300_vgg/block9/conv3x3/biases"
        string_val: "ssd_300_vgg/block9/conv3x3/biases/Adam"
        string_val: "ssd_300_vgg/block9/conv3x3/biases/Adam_1"
        string_val: "ssd_300_vgg/block9/conv3x3/weights"
        string_val: "ssd_300_vgg/block9/conv3x3/weights/Adam"
        string_val: "ssd_300_vgg/block9/conv3x3/weights/Adam_1"
        string_val: "ssd_300_vgg/block9_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block9_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block9_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block9_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block9_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block9_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block9_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block9_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block9_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block9_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/conv1/conv1_1/biases"
        string_val: "ssd_300_vgg/conv1/conv1_1/biases/Adam"
        string_val: "ssd_300_vgg/conv1/conv1_1/biases/Adam_1"
        string_val: "ssd_300_vgg/conv1/conv1_1/weights"
        string_val: "ssd_300_vgg/conv1/conv1_1/weights/Adam"
        string_val: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1"
        string_val: "ssd_300_vgg/conv1/conv1_2/biases"
        string_val: "ssd_300_vgg/conv1/conv1_2/biases/Adam"
        string_val: "ssd_300_vgg/conv1/conv1_2/biases/Adam_1"
        string_val: "ssd_300_vgg/conv1/conv1_2/weights"
        string_val: "ssd_300_vgg/conv1/conv1_2/weights/Adam"
        string_val: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1"
        string_val: "ssd_300_vgg/conv2/conv2_1/biases"
        string_val: "ssd_300_vgg/conv2/conv2_1/biases/Adam"
        string_val: "ssd_300_vgg/conv2/conv2_1/biases/Adam_1"
        string_val: "ssd_300_vgg/conv2/conv2_1/weights"
        string_val: "ssd_300_vgg/conv2/conv2_1/weights/Adam"
        string_val: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1"
        string_val: "ssd_300_vgg/conv2/conv2_2/biases"
        string_val: "ssd_300_vgg/conv2/conv2_2/biases/Adam"
        string_val: "ssd_300_vgg/conv2/conv2_2/biases/Adam_1"
        string_val: "ssd_300_vgg/conv2/conv2_2/weights"
        string_val: "ssd_300_vgg/conv2/conv2_2/weights/Adam"
        string_val: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_1/biases"
        string_val: "ssd_300_vgg/conv3/conv3_1/biases/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_1/biases/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_1/weights"
        string_val: "ssd_300_vgg/conv3/conv3_1/weights/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_2/biases"
        string_val: "ssd_300_vgg/conv3/conv3_2/biases/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_2/biases/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_2/weights"
        string_val: "ssd_300_vgg/conv3/conv3_2/weights/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_3/biases"
        string_val: "ssd_300_vgg/conv3/conv3_3/biases/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_3/biases/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_3/weights"
        string_val: "ssd_300_vgg/conv3/conv3_3/weights/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_1/biases"
        string_val: "ssd_300_vgg/conv4/conv4_1/biases/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_1/biases/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_1/weights"
        string_val: "ssd_300_vgg/conv4/conv4_1/weights/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_2/biases"
        string_val: "ssd_300_vgg/conv4/conv4_2/biases/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_2/biases/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_2/weights"
        string_val: "ssd_300_vgg/conv4/conv4_2/weights/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_3/biases"
        string_val: "ssd_300_vgg/conv4/conv4_3/biases/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_3/biases/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_3/weights"
        string_val: "ssd_300_vgg/conv4/conv4_3/weights/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_1/biases"
        string_val: "ssd_300_vgg/conv5/conv5_1/biases/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_1/biases/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_1/weights"
        string_val: "ssd_300_vgg/conv5/conv5_1/weights/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_2/biases"
        string_val: "ssd_300_vgg/conv5/conv5_2/biases/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_2/biases/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_2/weights"
        string_val: "ssd_300_vgg/conv5/conv5_2/weights/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_3/biases"
        string_val: "ssd_300_vgg/conv5/conv5_3/biases/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_3/biases/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_3/weights"
        string_val: "ssd_300_vgg/conv5/conv5_3/weights/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1"
        string_val: "ssd_300_vgg/conv6/biases"
        string_val: "ssd_300_vgg/conv6/biases/Adam"
        string_val: "ssd_300_vgg/conv6/biases/Adam_1"
        string_val: "ssd_300_vgg/conv6/weights"
        string_val: "ssd_300_vgg/conv6/weights/Adam"
        string_val: "ssd_300_vgg/conv6/weights/Adam_1"
        string_val: "ssd_300_vgg/conv7/biases"
        string_val: "ssd_300_vgg/conv7/biases/Adam"
        string_val: "ssd_300_vgg/conv7/biases/Adam_1"
        string_val: "ssd_300_vgg/conv7/weights"
        string_val: "ssd_300_vgg/conv7/weights/Adam"
        string_val: "ssd_300_vgg/conv7/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 216
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 216
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv1x1/biases"
  input: "save/RestoreV2:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv1x1/biases/Adam"
  input: "save/RestoreV2:4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv1x1/biases/Adam_1"
  input: "save/RestoreV2:5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv1x1/weights"
  input: "save/RestoreV2:6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam"
  input: "save/RestoreV2:7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam_1"
  input: "save/RestoreV2:8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv3x3/biases"
  input: "save/RestoreV2:9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv3x3/biases/Adam"
  input: "save/RestoreV2:10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv3x3/biases/Adam_1"
  input: "save/RestoreV2:11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv3x3/weights"
  input: "save/RestoreV2:12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam"
  input: "save/RestoreV2:13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam_1"
  input: "save/RestoreV2:14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_cls/biases"
  input: "save/RestoreV2:15"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/Adam"
  input: "save/RestoreV2:16"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/Adam_1"
  input: "save/RestoreV2:17"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_cls/weights"
  input: "save/RestoreV2:18"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam"
  input: "save/RestoreV2:19"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1"
  input: "save/RestoreV2:20"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_loc/biases"
  input: "save/RestoreV2:21"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/Adam"
  input: "save/RestoreV2:22"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/Adam_1"
  input: "save/RestoreV2:23"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_loc/weights"
  input: "save/RestoreV2:24"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam"
  input: "save/RestoreV2:25"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1"
  input: "save/RestoreV2:26"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv1x1/biases"
  input: "save/RestoreV2:27"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv1x1/biases/Adam"
  input: "save/RestoreV2:28"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv1x1/biases/Adam_1"
  input: "save/RestoreV2:29"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv1x1/weights"
  input: "save/RestoreV2:30"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam"
  input: "save/RestoreV2:31"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam_1"
  input: "save/RestoreV2:32"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv3x3/biases"
  input: "save/RestoreV2:33"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv3x3/biases/Adam"
  input: "save/RestoreV2:34"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv3x3/biases/Adam_1"
  input: "save/RestoreV2:35"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv3x3/weights"
  input: "save/RestoreV2:36"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam"
  input: "save/RestoreV2:37"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam_1"
  input: "save/RestoreV2:38"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_cls/biases"
  input: "save/RestoreV2:39"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/Adam"
  input: "save/RestoreV2:40"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/Adam_1"
  input: "save/RestoreV2:41"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_cls/weights"
  input: "save/RestoreV2:42"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam"
  input: "save/RestoreV2:43"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1"
  input: "save/RestoreV2:44"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_loc/biases"
  input: "save/RestoreV2:45"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/Adam"
  input: "save/RestoreV2:46"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/Adam_1"
  input: "save/RestoreV2:47"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_loc/weights"
  input: "save/RestoreV2:48"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam"
  input: "save/RestoreV2:49"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1"
  input: "save/RestoreV2:50"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma"
  input: "save/RestoreV2:51"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam"
  input: "save/RestoreV2:52"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam_1"
  input: "save/RestoreV2:53"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_cls/biases"
  input: "save/RestoreV2:54"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/Adam"
  input: "save/RestoreV2:55"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/Adam_1"
  input: "save/RestoreV2:56"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_cls/weights"
  input: "save/RestoreV2:57"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam"
  input: "save/RestoreV2:58"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1"
  input: "save/RestoreV2:59"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_loc/biases"
  input: "save/RestoreV2:60"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/Adam"
  input: "save/RestoreV2:61"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/Adam_1"
  input: "save/RestoreV2:62"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_loc/weights"
  input: "save/RestoreV2:63"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam"
  input: "save/RestoreV2:64"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1"
  input: "save/RestoreV2:65"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_cls/biases"
  input: "save/RestoreV2:66"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/Adam"
  input: "save/RestoreV2:67"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/Adam_1"
  input: "save/RestoreV2:68"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_cls/weights"
  input: "save/RestoreV2:69"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam"
  input: "save/RestoreV2:70"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1"
  input: "save/RestoreV2:71"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_loc/biases"
  input: "save/RestoreV2:72"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/Adam"
  input: "save/RestoreV2:73"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/Adam_1"
  input: "save/RestoreV2:74"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_loc/weights"
  input: "save/RestoreV2:75"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam"
  input: "save/RestoreV2:76"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1"
  input: "save/RestoreV2:77"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv1x1/biases"
  input: "save/RestoreV2:78"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv1x1/biases/Adam"
  input: "save/RestoreV2:79"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv1x1/biases/Adam_1"
  input: "save/RestoreV2:80"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv1x1/weights"
  input: "save/RestoreV2:81"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam"
  input: "save/RestoreV2:82"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam_1"
  input: "save/RestoreV2:83"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv3x3/biases"
  input: "save/RestoreV2:84"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv3x3/biases/Adam"
  input: "save/RestoreV2:85"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv3x3/biases/Adam_1"
  input: "save/RestoreV2:86"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv3x3/weights"
  input: "save/RestoreV2:87"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam"
  input: "save/RestoreV2:88"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam_1"
  input: "save/RestoreV2:89"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_cls/biases"
  input: "save/RestoreV2:90"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/Adam"
  input: "save/RestoreV2:91"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/Adam_1"
  input: "save/RestoreV2:92"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_cls/weights"
  input: "save/RestoreV2:93"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam"
  input: "save/RestoreV2:94"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1"
  input: "save/RestoreV2:95"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_loc/biases"
  input: "save/RestoreV2:96"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/Adam"
  input: "save/RestoreV2:97"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/Adam_1"
  input: "save/RestoreV2:98"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_loc/weights"
  input: "save/RestoreV2:99"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam"
  input: "save/RestoreV2:100"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1"
  input: "save/RestoreV2:101"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv1x1/biases"
  input: "save/RestoreV2:102"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv1x1/biases/Adam"
  input: "save/RestoreV2:103"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv1x1/biases/Adam_1"
  input: "save/RestoreV2:104"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv1x1/weights"
  input: "save/RestoreV2:105"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam"
  input: "save/RestoreV2:106"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam_1"
  input: "save/RestoreV2:107"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv3x3/biases"
  input: "save/RestoreV2:108"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv3x3/biases/Adam"
  input: "save/RestoreV2:109"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv3x3/biases/Adam_1"
  input: "save/RestoreV2:110"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv3x3/weights"
  input: "save/RestoreV2:111"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam"
  input: "save/RestoreV2:112"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam_1"
  input: "save/RestoreV2:113"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_cls/biases"
  input: "save/RestoreV2:114"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/Adam"
  input: "save/RestoreV2:115"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/Adam_1"
  input: "save/RestoreV2:116"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_cls/weights"
  input: "save/RestoreV2:117"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam"
  input: "save/RestoreV2:118"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1"
  input: "save/RestoreV2:119"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_loc/biases"
  input: "save/RestoreV2:120"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/Adam"
  input: "save/RestoreV2:121"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/Adam_1"
  input: "save/RestoreV2:122"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_loc/weights"
  input: "save/RestoreV2:123"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam"
  input: "save/RestoreV2:124"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1"
  input: "save/RestoreV2:125"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_1/biases"
  input: "save/RestoreV2:126"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_1/biases/Adam"
  input: "save/RestoreV2:127"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_1/biases/Adam_1"
  input: "save/RestoreV2:128"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_1/weights"
  input: "save/RestoreV2:129"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam"
  input: "save/RestoreV2:130"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1"
  input: "save/RestoreV2:131"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_2/biases"
  input: "save/RestoreV2:132"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_2/biases/Adam"
  input: "save/RestoreV2:133"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_2/biases/Adam_1"
  input: "save/RestoreV2:134"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_2/weights"
  input: "save/RestoreV2:135"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam"
  input: "save/RestoreV2:136"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1"
  input: "save/RestoreV2:137"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_1/biases"
  input: "save/RestoreV2:138"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_1/biases/Adam"
  input: "save/RestoreV2:139"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_1/biases/Adam_1"
  input: "save/RestoreV2:140"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_1/weights"
  input: "save/RestoreV2:141"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam"
  input: "save/RestoreV2:142"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1"
  input: "save/RestoreV2:143"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_2/biases"
  input: "save/RestoreV2:144"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_2/biases/Adam"
  input: "save/RestoreV2:145"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_2/biases/Adam_1"
  input: "save/RestoreV2:146"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_2/weights"
  input: "save/RestoreV2:147"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam"
  input: "save/RestoreV2:148"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1"
  input: "save/RestoreV2:149"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_1/biases"
  input: "save/RestoreV2:150"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_1/biases/Adam"
  input: "save/RestoreV2:151"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_1/biases/Adam_1"
  input: "save/RestoreV2:152"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_1/weights"
  input: "save/RestoreV2:153"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam"
  input: "save/RestoreV2:154"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1"
  input: "save/RestoreV2:155"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_2/biases"
  input: "save/RestoreV2:156"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_2/biases/Adam"
  input: "save/RestoreV2:157"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_2/biases/Adam_1"
  input: "save/RestoreV2:158"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_2/weights"
  input: "save/RestoreV2:159"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam"
  input: "save/RestoreV2:160"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1"
  input: "save/RestoreV2:161"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_3/biases"
  input: "save/RestoreV2:162"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_3/biases/Adam"
  input: "save/RestoreV2:163"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_3/biases/Adam_1"
  input: "save/RestoreV2:164"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_3/weights"
  input: "save/RestoreV2:165"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam"
  input: "save/RestoreV2:166"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1"
  input: "save/RestoreV2:167"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_1/biases"
  input: "save/RestoreV2:168"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_1/biases/Adam"
  input: "save/RestoreV2:169"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_1/biases/Adam_1"
  input: "save/RestoreV2:170"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_1/weights"
  input: "save/RestoreV2:171"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam"
  input: "save/RestoreV2:172"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1"
  input: "save/RestoreV2:173"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_2/biases"
  input: "save/RestoreV2:174"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_2/biases/Adam"
  input: "save/RestoreV2:175"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_2/biases/Adam_1"
  input: "save/RestoreV2:176"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_2/weights"
  input: "save/RestoreV2:177"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam"
  input: "save/RestoreV2:178"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1"
  input: "save/RestoreV2:179"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_3/biases"
  input: "save/RestoreV2:180"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_3/biases/Adam"
  input: "save/RestoreV2:181"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_3/biases/Adam_1"
  input: "save/RestoreV2:182"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_3/weights"
  input: "save/RestoreV2:183"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam"
  input: "save/RestoreV2:184"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1"
  input: "save/RestoreV2:185"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_1/biases"
  input: "save/RestoreV2:186"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_1/biases/Adam"
  input: "save/RestoreV2:187"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_1/biases/Adam_1"
  input: "save/RestoreV2:188"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_1/weights"
  input: "save/RestoreV2:189"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam"
  input: "save/RestoreV2:190"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1"
  input: "save/RestoreV2:191"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_2/biases"
  input: "save/RestoreV2:192"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_2/biases/Adam"
  input: "save/RestoreV2:193"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_2/biases/Adam_1"
  input: "save/RestoreV2:194"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_2/weights"
  input: "save/RestoreV2:195"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam"
  input: "save/RestoreV2:196"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1"
  input: "save/RestoreV2:197"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_3/biases"
  input: "save/RestoreV2:198"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_3/biases/Adam"
  input: "save/RestoreV2:199"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_3/biases/Adam_1"
  input: "save/RestoreV2:200"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_3/weights"
  input: "save/RestoreV2:201"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam"
  input: "save/RestoreV2:202"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1"
  input: "save/RestoreV2:203"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "ssd_300_vgg/conv6/biases"
  input: "save/RestoreV2:204"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "ssd_300_vgg/conv6/biases/Adam"
  input: "save/RestoreV2:205"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "ssd_300_vgg/conv6/biases/Adam_1"
  input: "save/RestoreV2:206"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "ssd_300_vgg/conv6/weights"
  input: "save/RestoreV2:207"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "ssd_300_vgg/conv6/weights/Adam"
  input: "save/RestoreV2:208"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "ssd_300_vgg/conv6/weights/Adam_1"
  input: "save/RestoreV2:209"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "ssd_300_vgg/conv7/biases"
  input: "save/RestoreV2:210"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "ssd_300_vgg/conv7/biases/Adam"
  input: "save/RestoreV2:211"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "ssd_300_vgg/conv7/biases/Adam_1"
  input: "save/RestoreV2:212"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "ssd_300_vgg/conv7/weights"
  input: "save/RestoreV2:213"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "ssd_300_vgg/conv7/weights/Adam"
  input: "save/RestoreV2:214"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_215"
  op: "Assign"
  input: "ssd_300_vgg/conv7/weights/Adam_1"
  input: "save/RestoreV2:215"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_11"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_12"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_13"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_14"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_15"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_16"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_17"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_18"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_19"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_21"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
  input: "^save/Assign_215"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  device: "/device:CPU:0"
}
node {
  name: "save_1/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_1/filename"
  op: "PlaceholderWithDefault"
  input: "save_1/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_1/Const"
  op: "PlaceholderWithDefault"
  input: "save_1/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_1/save/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 28
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 28
          }
        }
        string_val: "ssd_300_vgg/conv1/conv1_1/biases"
        string_val: "ssd_300_vgg/conv1/conv1_1/weights"
        string_val: "ssd_300_vgg/conv1/conv1_2/biases"
        string_val: "ssd_300_vgg/conv1/conv1_2/weights"
        string_val: "ssd_300_vgg/conv2/conv2_1/biases"
        string_val: "ssd_300_vgg/conv2/conv2_1/weights"
        string_val: "ssd_300_vgg/conv2/conv2_2/biases"
        string_val: "ssd_300_vgg/conv2/conv2_2/weights"
        string_val: "ssd_300_vgg/conv3/conv3_1/biases"
        string_val: "ssd_300_vgg/conv3/conv3_1/weights"
        string_val: "ssd_300_vgg/conv3/conv3_2/biases"
        string_val: "ssd_300_vgg/conv3/conv3_2/weights"
        string_val: "ssd_300_vgg/conv3/conv3_3/biases"
        string_val: "ssd_300_vgg/conv3/conv3_3/weights"
        string_val: "ssd_300_vgg/conv4/conv4_1/biases"
        string_val: "ssd_300_vgg/conv4/conv4_1/weights"
        string_val: "ssd_300_vgg/conv4/conv4_2/biases"
        string_val: "ssd_300_vgg/conv4/conv4_2/weights"
        string_val: "ssd_300_vgg/conv4/conv4_3/biases"
        string_val: "ssd_300_vgg/conv4/conv4_3/weights"
        string_val: "ssd_300_vgg/conv5/conv5_1/biases"
        string_val: "ssd_300_vgg/conv5/conv5_1/weights"
        string_val: "ssd_300_vgg/conv5/conv5_2/biases"
        string_val: "ssd_300_vgg/conv5/conv5_2/weights"
        string_val: "ssd_300_vgg/conv5/conv5_3/biases"
        string_val: "ssd_300_vgg/conv5/conv5_3/weights"
        string_val: "ssd_300_vgg/conv6/biases"
        string_val: "ssd_300_vgg/conv6/weights"
      }
    }
  }
}
node {
  name: "save_1/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 28
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 28
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/save"
  op: "SaveSlices"
  input: "save_1/Const"
  input: "save_1/save/tensor_names"
  input: "save_1/save/shapes_and_slices"
  input: "ssd_300_vgg/conv1/conv1_1/biases"
  input: "ssd_300_vgg/conv1/conv1_1/weights"
  input: "ssd_300_vgg/conv1/conv1_2/biases"
  input: "ssd_300_vgg/conv1/conv1_2/weights"
  input: "ssd_300_vgg/conv2/conv2_1/biases"
  input: "ssd_300_vgg/conv2/conv2_1/weights"
  input: "ssd_300_vgg/conv2/conv2_2/biases"
  input: "ssd_300_vgg/conv2/conv2_2/weights"
  input: "ssd_300_vgg/conv3/conv3_1/biases"
  input: "ssd_300_vgg/conv3/conv3_1/weights"
  input: "ssd_300_vgg/conv3/conv3_2/biases"
  input: "ssd_300_vgg/conv3/conv3_2/weights"
  input: "ssd_300_vgg/conv3/conv3_3/biases"
  input: "ssd_300_vgg/conv3/conv3_3/weights"
  input: "ssd_300_vgg/conv4/conv4_1/biases"
  input: "ssd_300_vgg/conv4/conv4_1/weights"
  input: "ssd_300_vgg/conv4/conv4_2/biases"
  input: "ssd_300_vgg/conv4/conv4_2/weights"
  input: "ssd_300_vgg/conv4/conv4_3/biases"
  input: "ssd_300_vgg/conv4/conv4_3/weights"
  input: "ssd_300_vgg/conv5/conv5_1/biases"
  input: "ssd_300_vgg/conv5/conv5_1/weights"
  input: "ssd_300_vgg/conv5/conv5_2/biases"
  input: "ssd_300_vgg/conv5/conv5_2/weights"
  input: "ssd_300_vgg/conv5/conv5_3/biases"
  input: "ssd_300_vgg/conv5/conv5_3/weights"
  input: "ssd_300_vgg/conv6/biases"
  input: "ssd_300_vgg/conv6/weights"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/control_dependency"
  op: "Identity"
  input: "save_1/Const"
  input: "^save_1/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_1/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 28
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 28
          }
        }
        string_val: "ssd_300_vgg/conv1/conv1_1/biases"
        string_val: "ssd_300_vgg/conv1/conv1_1/weights"
        string_val: "ssd_300_vgg/conv1/conv1_2/biases"
        string_val: "ssd_300_vgg/conv1/conv1_2/weights"
        string_val: "ssd_300_vgg/conv2/conv2_1/biases"
        string_val: "ssd_300_vgg/conv2/conv2_1/weights"
        string_val: "ssd_300_vgg/conv2/conv2_2/biases"
        string_val: "ssd_300_vgg/conv2/conv2_2/weights"
        string_val: "ssd_300_vgg/conv3/conv3_1/biases"
        string_val: "ssd_300_vgg/conv3/conv3_1/weights"
        string_val: "ssd_300_vgg/conv3/conv3_2/biases"
        string_val: "ssd_300_vgg/conv3/conv3_2/weights"
        string_val: "ssd_300_vgg/conv3/conv3_3/biases"
        string_val: "ssd_300_vgg/conv3/conv3_3/weights"
        string_val: "ssd_300_vgg/conv4/conv4_1/biases"
        string_val: "ssd_300_vgg/conv4/conv4_1/weights"
        string_val: "ssd_300_vgg/conv4/conv4_2/biases"
        string_val: "ssd_300_vgg/conv4/conv4_2/weights"
        string_val: "ssd_300_vgg/conv4/conv4_3/biases"
        string_val: "ssd_300_vgg/conv4/conv4_3/weights"
        string_val: "ssd_300_vgg/conv5/conv5_1/biases"
        string_val: "ssd_300_vgg/conv5/conv5_1/weights"
        string_val: "ssd_300_vgg/conv5/conv5_2/biases"
        string_val: "ssd_300_vgg/conv5/conv5_2/weights"
        string_val: "ssd_300_vgg/conv5/conv5_3/biases"
        string_val: "ssd_300_vgg/conv5/conv5_3/weights"
        string_val: "ssd_300_vgg/conv6/biases"
        string_val: "ssd_300_vgg/conv6/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 28
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 28
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2/tensor_names"
  input: "save_1/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_1/biases"
  input: "save_1/RestoreV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_1"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_1/weights"
  input: "save_1/RestoreV2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_2"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_2/biases"
  input: "save_1/RestoreV2:2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_3"
  op: "Assign"
  input: "ssd_300_vgg/conv1/conv1_2/weights"
  input: "save_1/RestoreV2:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_4"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_1/biases"
  input: "save_1/RestoreV2:4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_5"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_1/weights"
  input: "save_1/RestoreV2:5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_6"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_2/biases"
  input: "save_1/RestoreV2:6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_7"
  op: "Assign"
  input: "ssd_300_vgg/conv2/conv2_2/weights"
  input: "save_1/RestoreV2:7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_8"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_1/biases"
  input: "save_1/RestoreV2:8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_9"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_1/weights"
  input: "save_1/RestoreV2:9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_10"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_2/biases"
  input: "save_1/RestoreV2:10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_11"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_2/weights"
  input: "save_1/RestoreV2:11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_12"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_3/biases"
  input: "save_1/RestoreV2:12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_13"
  op: "Assign"
  input: "ssd_300_vgg/conv3/conv3_3/weights"
  input: "save_1/RestoreV2:13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_14"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_1/biases"
  input: "save_1/RestoreV2:14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_15"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_1/weights"
  input: "save_1/RestoreV2:15"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_16"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_2/biases"
  input: "save_1/RestoreV2:16"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_17"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_2/weights"
  input: "save_1/RestoreV2:17"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_18"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_3/biases"
  input: "save_1/RestoreV2:18"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_19"
  op: "Assign"
  input: "ssd_300_vgg/conv4/conv4_3/weights"
  input: "save_1/RestoreV2:19"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_20"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_1/biases"
  input: "save_1/RestoreV2:20"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_21"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_1/weights"
  input: "save_1/RestoreV2:21"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_22"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_2/biases"
  input: "save_1/RestoreV2:22"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_23"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_2/weights"
  input: "save_1/RestoreV2:23"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_24"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_3/biases"
  input: "save_1/RestoreV2:24"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_25"
  op: "Assign"
  input: "ssd_300_vgg/conv5/conv5_3/weights"
  input: "save_1/RestoreV2:25"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_26"
  op: "Assign"
  input: "ssd_300_vgg/conv6/biases"
  input: "save_1/RestoreV2:26"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_27"
  op: "Assign"
  input: "ssd_300_vgg/conv6/weights"
  input: "save_1/RestoreV2:27"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/restore_all"
  op: "NoOp"
  input: "^save_1/Assign"
  input: "^save_1/Assign_1"
  input: "^save_1/Assign_10"
  input: "^save_1/Assign_11"
  input: "^save_1/Assign_12"
  input: "^save_1/Assign_13"
  input: "^save_1/Assign_14"
  input: "^save_1/Assign_15"
  input: "^save_1/Assign_16"
  input: "^save_1/Assign_17"
  input: "^save_1/Assign_18"
  input: "^save_1/Assign_19"
  input: "^save_1/Assign_2"
  input: "^save_1/Assign_20"
  input: "^save_1/Assign_21"
  input: "^save_1/Assign_22"
  input: "^save_1/Assign_23"
  input: "^save_1/Assign_24"
  input: "^save_1/Assign_25"
  input: "^save_1/Assign_26"
  input: "^save_1/Assign_27"
  input: "^save_1/Assign_3"
  input: "^save_1/Assign_4"
  input: "^save_1/Assign_5"
  input: "^save_1/Assign_6"
  input: "^save_1/Assign_7"
  input: "^save_1/Assign_8"
  input: "^save_1/Assign_9"
  device: "/device:CPU:0"
}
node {
  name: "init_ops/init"
  op: "NoOp"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^global_step/Assign"
  input: "^ssd_300_vgg/block10/conv1x1/biases/Adam/Assign"
  input: "^ssd_300_vgg/block10/conv1x1/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block10/conv1x1/biases/Assign"
  input: "^ssd_300_vgg/block10/conv1x1/weights/Adam/Assign"
  input: "^ssd_300_vgg/block10/conv1x1/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block10/conv1x1/weights/Assign"
  input: "^ssd_300_vgg/block10/conv3x3/biases/Adam/Assign"
  input: "^ssd_300_vgg/block10/conv3x3/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block10/conv3x3/biases/Assign"
  input: "^ssd_300_vgg/block10/conv3x3/weights/Adam/Assign"
  input: "^ssd_300_vgg/block10/conv3x3/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block10/conv3x3/weights/Assign"
  input: "^ssd_300_vgg/block10_box/conv_cls/biases/Adam/Assign"
  input: "^ssd_300_vgg/block10_box/conv_cls/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block10_box/conv_cls/biases/Assign"
  input: "^ssd_300_vgg/block10_box/conv_cls/weights/Adam/Assign"
  input: "^ssd_300_vgg/block10_box/conv_cls/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block10_box/conv_cls/weights/Assign"
  input: "^ssd_300_vgg/block10_box/conv_loc/biases/Adam/Assign"
  input: "^ssd_300_vgg/block10_box/conv_loc/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block10_box/conv_loc/biases/Assign"
  input: "^ssd_300_vgg/block10_box/conv_loc/weights/Adam/Assign"
  input: "^ssd_300_vgg/block10_box/conv_loc/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block10_box/conv_loc/weights/Assign"
  input: "^ssd_300_vgg/block11/conv1x1/biases/Adam/Assign"
  input: "^ssd_300_vgg/block11/conv1x1/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block11/conv1x1/biases/Assign"
  input: "^ssd_300_vgg/block11/conv1x1/weights/Adam/Assign"
  input: "^ssd_300_vgg/block11/conv1x1/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block11/conv1x1/weights/Assign"
  input: "^ssd_300_vgg/block11/conv3x3/biases/Adam/Assign"
  input: "^ssd_300_vgg/block11/conv3x3/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block11/conv3x3/biases/Assign"
  input: "^ssd_300_vgg/block11/conv3x3/weights/Adam/Assign"
  input: "^ssd_300_vgg/block11/conv3x3/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block11/conv3x3/weights/Assign"
  input: "^ssd_300_vgg/block11_box/conv_cls/biases/Adam/Assign"
  input: "^ssd_300_vgg/block11_box/conv_cls/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block11_box/conv_cls/biases/Assign"
  input: "^ssd_300_vgg/block11_box/conv_cls/weights/Adam/Assign"
  input: "^ssd_300_vgg/block11_box/conv_cls/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block11_box/conv_cls/weights/Assign"
  input: "^ssd_300_vgg/block11_box/conv_loc/biases/Adam/Assign"
  input: "^ssd_300_vgg/block11_box/conv_loc/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block11_box/conv_loc/biases/Assign"
  input: "^ssd_300_vgg/block11_box/conv_loc/weights/Adam/Assign"
  input: "^ssd_300_vgg/block11_box/conv_loc/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block11_box/conv_loc/weights/Assign"
  input: "^ssd_300_vgg/block4_box/L2Normalization/gamma/Adam/Assign"
  input: "^ssd_300_vgg/block4_box/L2Normalization/gamma/Adam_1/Assign"
  input: "^ssd_300_vgg/block4_box/L2Normalization/gamma/Assign"
  input: "^ssd_300_vgg/block4_box/conv_cls/biases/Adam/Assign"
  input: "^ssd_300_vgg/block4_box/conv_cls/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block4_box/conv_cls/biases/Assign"
  input: "^ssd_300_vgg/block4_box/conv_cls/weights/Adam/Assign"
  input: "^ssd_300_vgg/block4_box/conv_cls/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block4_box/conv_cls/weights/Assign"
  input: "^ssd_300_vgg/block4_box/conv_loc/biases/Adam/Assign"
  input: "^ssd_300_vgg/block4_box/conv_loc/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block4_box/conv_loc/biases/Assign"
  input: "^ssd_300_vgg/block4_box/conv_loc/weights/Adam/Assign"
  input: "^ssd_300_vgg/block4_box/conv_loc/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block4_box/conv_loc/weights/Assign"
  input: "^ssd_300_vgg/block7_box/conv_cls/biases/Adam/Assign"
  input: "^ssd_300_vgg/block7_box/conv_cls/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block7_box/conv_cls/biases/Assign"
  input: "^ssd_300_vgg/block7_box/conv_cls/weights/Adam/Assign"
  input: "^ssd_300_vgg/block7_box/conv_cls/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block7_box/conv_cls/weights/Assign"
  input: "^ssd_300_vgg/block7_box/conv_loc/biases/Adam/Assign"
  input: "^ssd_300_vgg/block7_box/conv_loc/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block7_box/conv_loc/biases/Assign"
  input: "^ssd_300_vgg/block7_box/conv_loc/weights/Adam/Assign"
  input: "^ssd_300_vgg/block7_box/conv_loc/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block7_box/conv_loc/weights/Assign"
  input: "^ssd_300_vgg/block8/conv1x1/biases/Adam/Assign"
  input: "^ssd_300_vgg/block8/conv1x1/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block8/conv1x1/biases/Assign"
  input: "^ssd_300_vgg/block8/conv1x1/weights/Adam/Assign"
  input: "^ssd_300_vgg/block8/conv1x1/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block8/conv1x1/weights/Assign"
  input: "^ssd_300_vgg/block8/conv3x3/biases/Adam/Assign"
  input: "^ssd_300_vgg/block8/conv3x3/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block8/conv3x3/biases/Assign"
  input: "^ssd_300_vgg/block8/conv3x3/weights/Adam/Assign"
  input: "^ssd_300_vgg/block8/conv3x3/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block8/conv3x3/weights/Assign"
  input: "^ssd_300_vgg/block8_box/conv_cls/biases/Adam/Assign"
  input: "^ssd_300_vgg/block8_box/conv_cls/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block8_box/conv_cls/biases/Assign"
  input: "^ssd_300_vgg/block8_box/conv_cls/weights/Adam/Assign"
  input: "^ssd_300_vgg/block8_box/conv_cls/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block8_box/conv_cls/weights/Assign"
  input: "^ssd_300_vgg/block8_box/conv_loc/biases/Adam/Assign"
  input: "^ssd_300_vgg/block8_box/conv_loc/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block8_box/conv_loc/biases/Assign"
  input: "^ssd_300_vgg/block8_box/conv_loc/weights/Adam/Assign"
  input: "^ssd_300_vgg/block8_box/conv_loc/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block8_box/conv_loc/weights/Assign"
  input: "^ssd_300_vgg/block9/conv1x1/biases/Adam/Assign"
  input: "^ssd_300_vgg/block9/conv1x1/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block9/conv1x1/biases/Assign"
  input: "^ssd_300_vgg/block9/conv1x1/weights/Adam/Assign"
  input: "^ssd_300_vgg/block9/conv1x1/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block9/conv1x1/weights/Assign"
  input: "^ssd_300_vgg/block9/conv3x3/biases/Adam/Assign"
  input: "^ssd_300_vgg/block9/conv3x3/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block9/conv3x3/biases/Assign"
  input: "^ssd_300_vgg/block9/conv3x3/weights/Adam/Assign"
  input: "^ssd_300_vgg/block9/conv3x3/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block9/conv3x3/weights/Assign"
  input: "^ssd_300_vgg/block9_box/conv_cls/biases/Adam/Assign"
  input: "^ssd_300_vgg/block9_box/conv_cls/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block9_box/conv_cls/biases/Assign"
  input: "^ssd_300_vgg/block9_box/conv_cls/weights/Adam/Assign"
  input: "^ssd_300_vgg/block9_box/conv_cls/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block9_box/conv_cls/weights/Assign"
  input: "^ssd_300_vgg/block9_box/conv_loc/biases/Adam/Assign"
  input: "^ssd_300_vgg/block9_box/conv_loc/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/block9_box/conv_loc/biases/Assign"
  input: "^ssd_300_vgg/block9_box/conv_loc/weights/Adam/Assign"
  input: "^ssd_300_vgg/block9_box/conv_loc/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/block9_box/conv_loc/weights/Assign"
  input: "^ssd_300_vgg/conv1/conv1_1/biases/Adam/Assign"
  input: "^ssd_300_vgg/conv1/conv1_1/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/conv1/conv1_1/biases/Assign"
  input: "^ssd_300_vgg/conv1/conv1_1/weights/Adam/Assign"
  input: "^ssd_300_vgg/conv1/conv1_1/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/conv1/conv1_1/weights/Assign"
  input: "^ssd_300_vgg/conv1/conv1_2/biases/Adam/Assign"
  input: "^ssd_300_vgg/conv1/conv1_2/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/conv1/conv1_2/biases/Assign"
  input: "^ssd_300_vgg/conv1/conv1_2/weights/Adam/Assign"
  input: "^ssd_300_vgg/conv1/conv1_2/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/conv1/conv1_2/weights/Assign"
  input: "^ssd_300_vgg/conv2/conv2_1/biases/Adam/Assign"
  input: "^ssd_300_vgg/conv2/conv2_1/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/conv2/conv2_1/biases/Assign"
  input: "^ssd_300_vgg/conv2/conv2_1/weights/Adam/Assign"
  input: "^ssd_300_vgg/conv2/conv2_1/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/conv2/conv2_1/weights/Assign"
  input: "^ssd_300_vgg/conv2/conv2_2/biases/Adam/Assign"
  input: "^ssd_300_vgg/conv2/conv2_2/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/conv2/conv2_2/biases/Assign"
  input: "^ssd_300_vgg/conv2/conv2_2/weights/Adam/Assign"
  input: "^ssd_300_vgg/conv2/conv2_2/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/conv2/conv2_2/weights/Assign"
  input: "^ssd_300_vgg/conv3/conv3_1/biases/Adam/Assign"
  input: "^ssd_300_vgg/conv3/conv3_1/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/conv3/conv3_1/biases/Assign"
  input: "^ssd_300_vgg/conv3/conv3_1/weights/Adam/Assign"
  input: "^ssd_300_vgg/conv3/conv3_1/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/conv3/conv3_1/weights/Assign"
  input: "^ssd_300_vgg/conv3/conv3_2/biases/Adam/Assign"
  input: "^ssd_300_vgg/conv3/conv3_2/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/conv3/conv3_2/biases/Assign"
  input: "^ssd_300_vgg/conv3/conv3_2/weights/Adam/Assign"
  input: "^ssd_300_vgg/conv3/conv3_2/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/conv3/conv3_2/weights/Assign"
  input: "^ssd_300_vgg/conv3/conv3_3/biases/Adam/Assign"
  input: "^ssd_300_vgg/conv3/conv3_3/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/conv3/conv3_3/biases/Assign"
  input: "^ssd_300_vgg/conv3/conv3_3/weights/Adam/Assign"
  input: "^ssd_300_vgg/conv3/conv3_3/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/conv3/conv3_3/weights/Assign"
  input: "^ssd_300_vgg/conv4/conv4_1/biases/Adam/Assign"
  input: "^ssd_300_vgg/conv4/conv4_1/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/conv4/conv4_1/biases/Assign"
  input: "^ssd_300_vgg/conv4/conv4_1/weights/Adam/Assign"
  input: "^ssd_300_vgg/conv4/conv4_1/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/conv4/conv4_1/weights/Assign"
  input: "^ssd_300_vgg/conv4/conv4_2/biases/Adam/Assign"
  input: "^ssd_300_vgg/conv4/conv4_2/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/conv4/conv4_2/biases/Assign"
  input: "^ssd_300_vgg/conv4/conv4_2/weights/Adam/Assign"
  input: "^ssd_300_vgg/conv4/conv4_2/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/conv4/conv4_2/weights/Assign"
  input: "^ssd_300_vgg/conv4/conv4_3/biases/Adam/Assign"
  input: "^ssd_300_vgg/conv4/conv4_3/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/conv4/conv4_3/biases/Assign"
  input: "^ssd_300_vgg/conv4/conv4_3/weights/Adam/Assign"
  input: "^ssd_300_vgg/conv4/conv4_3/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/conv4/conv4_3/weights/Assign"
  input: "^ssd_300_vgg/conv5/conv5_1/biases/Adam/Assign"
  input: "^ssd_300_vgg/conv5/conv5_1/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/conv5/conv5_1/biases/Assign"
  input: "^ssd_300_vgg/conv5/conv5_1/weights/Adam/Assign"
  input: "^ssd_300_vgg/conv5/conv5_1/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/conv5/conv5_1/weights/Assign"
  input: "^ssd_300_vgg/conv5/conv5_2/biases/Adam/Assign"
  input: "^ssd_300_vgg/conv5/conv5_2/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/conv5/conv5_2/biases/Assign"
  input: "^ssd_300_vgg/conv5/conv5_2/weights/Adam/Assign"
  input: "^ssd_300_vgg/conv5/conv5_2/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/conv5/conv5_2/weights/Assign"
  input: "^ssd_300_vgg/conv5/conv5_3/biases/Adam/Assign"
  input: "^ssd_300_vgg/conv5/conv5_3/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/conv5/conv5_3/biases/Assign"
  input: "^ssd_300_vgg/conv5/conv5_3/weights/Adam/Assign"
  input: "^ssd_300_vgg/conv5/conv5_3/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/conv5/conv5_3/weights/Assign"
  input: "^ssd_300_vgg/conv6/biases/Adam/Assign"
  input: "^ssd_300_vgg/conv6/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/conv6/biases/Assign"
  input: "^ssd_300_vgg/conv6/weights/Adam/Assign"
  input: "^ssd_300_vgg/conv6/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/conv6/weights/Assign"
  input: "^ssd_300_vgg/conv7/biases/Adam/Assign"
  input: "^ssd_300_vgg/conv7/biases/Adam_1/Assign"
  input: "^ssd_300_vgg/conv7/biases/Assign"
  input: "^ssd_300_vgg/conv7/weights/Adam/Assign"
  input: "^ssd_300_vgg/conv7/weights/Adam_1/Assign"
  input: "^ssd_300_vgg/conv7/weights/Assign"
  device: "/device:CPU:0"
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv1/conv1_1/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv1/conv1_1/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv1/conv1_2/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv1/conv1_2/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv2/conv2_1/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv2/conv2_1/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv2/conv2_2/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv2/conv2_2/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_1/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_1/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_2/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_2/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_3/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_3/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_1/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_1/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_2/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_2/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_3/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_3/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_1/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_1/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_2/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_2/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_3/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_3/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv6/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv6/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv7/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv7/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8/conv1x1/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8/conv1x1/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8/conv3x3/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8/conv3x3/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9/conv1x1/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9/conv1x1/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9/conv3x3/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9/conv3x3/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10/conv1x1/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10/conv1x1/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10/conv3x3/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10/conv3x3/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11/conv1x1/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11/conv1x1/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11/conv3x3/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11/conv3x3/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block4_box/conv_loc/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block4_box/conv_loc/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block4_box/conv_cls/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block4_box/conv_cls/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block7_box/conv_loc/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block7_box/conv_loc/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block7_box/conv_cls/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block7_box/conv_cls/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8_box/conv_loc/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8_box/conv_loc/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8_box/conv_cls/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8_box/conv_cls/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9_box/conv_loc/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9_box/conv_loc/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9_box/conv_cls/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9_box/conv_cls/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10_box/conv_loc/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10_box/conv_loc/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10_box/conv_cls/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10_box/conv_cls/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11_box/conv_loc/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11_box/conv_loc/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11_box/conv_cls/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11_box/conv_cls/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "beta1_power"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "beta2_power"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv1/conv1_1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv1/conv1_1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv1/conv1_2/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv1/conv1_2/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv2/conv2_1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv2/conv2_1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv2/conv2_2/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv2/conv2_2/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_2/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_2/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_3/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv3/conv3_3/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_2/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_2/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_3/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv4/conv4_3/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_2/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_2/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_3/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv5/conv5_3/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv6/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv6/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv6/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv6/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv7/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv7/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv7/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/conv7/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/conv7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8/conv1x1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8/conv1x1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8/conv1x1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_138"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_139"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8/conv3x3/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_140"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8/conv3x3/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_141"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8/conv3x3/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_142"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_143"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9/conv1x1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_144"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9/conv1x1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_145"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9/conv1x1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_146"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_147"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9/conv3x3/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_148"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9/conv3x3/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_149"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9/conv3x3/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_150"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_151"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10/conv1x1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_152"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10/conv1x1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_153"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10/conv1x1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_154"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_155"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10/conv3x3/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_156"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10/conv3x3/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_157"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10/conv3x3/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_158"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_159"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11/conv1x1/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_160"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11/conv1x1/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_161"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11/conv1x1/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv1x1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_162"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_163"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11/conv3x3/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_164"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11/conv3x3/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_165"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11/conv3x3/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11/conv3x3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_166"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_167"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/L2Normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_168"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_169"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_170"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_171"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block4_box/conv_loc/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_172"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_173"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_174"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_175"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block4_box/conv_cls/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block4_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_176"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_177"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_178"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_179"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block7_box/conv_loc/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_180"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_181"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_182"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_183"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block7_box/conv_cls/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block7_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_184"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_185"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_186"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_187"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8_box/conv_loc/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_188"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_189"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_190"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_191"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block8_box/conv_cls/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block8_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_192"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_193"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_194"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_195"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9_box/conv_loc/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_196"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_197"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_198"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_199"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block9_box/conv_cls/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block9_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_200"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_201"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_202"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_203"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10_box/conv_loc/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_204"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_205"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_206"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_207"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block10_box/conv_cls/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block10_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_208"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_209"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_210"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_211"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11_box/conv_loc/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_loc/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_212"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_213"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_214"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_215"
  op: "IsVariableInitialized"
  input: "ssd_300_vgg/block11_box/conv_cls/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_300_vgg/block11_box/conv_cls/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/stack"
  op: "Pack"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_1"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_2"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_3"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_4"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_5"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_6"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_7"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_8"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_9"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_10"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_11"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_12"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_13"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_14"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_15"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_16"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_17"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_18"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_19"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_20"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_21"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_22"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_23"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_24"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_25"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_26"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_27"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_28"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_29"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_30"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_31"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_32"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_33"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_34"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_35"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_36"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_37"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_38"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_39"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_40"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_41"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_42"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_43"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_44"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_45"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_46"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_47"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_48"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_49"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_50"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_51"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_52"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_53"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_54"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_55"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_56"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_57"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_58"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_59"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_60"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_61"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_62"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_63"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_64"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_65"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_66"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_67"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_68"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_69"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_70"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_71"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_72"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_73"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_74"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_75"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_76"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_77"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_78"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_79"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_80"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_81"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_82"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_83"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_84"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_85"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_86"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_87"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_88"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_89"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_90"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_91"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_92"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_93"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_94"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_95"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_96"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_97"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_98"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_99"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_100"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_101"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_102"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_103"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_104"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_105"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_106"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_107"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_108"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_109"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_110"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_111"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_112"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_113"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_114"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_115"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_116"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_117"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_118"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_119"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_120"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_121"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_122"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_123"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_124"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_125"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_126"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_127"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_128"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_129"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_130"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_131"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_132"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_133"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_134"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_135"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_136"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_137"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_138"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_139"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_140"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_141"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_142"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_143"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_144"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_145"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_146"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_147"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_148"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_149"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_150"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_151"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_152"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_153"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_154"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_155"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_156"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_157"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_158"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_159"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_160"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_161"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_162"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_163"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_164"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_165"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_166"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_167"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_168"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_169"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_170"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_171"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_172"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_173"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_174"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_175"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_176"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_177"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_178"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_179"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_180"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_181"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_182"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_183"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_184"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_185"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_186"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_187"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_188"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_189"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_190"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_191"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_192"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_193"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_194"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_195"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_196"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_197"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_198"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_199"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_200"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_201"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_202"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_203"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_204"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_205"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_206"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_207"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_208"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_209"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_210"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_211"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_212"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_213"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_214"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_215"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 216
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 216
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "init_ops/report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 216
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 216
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 216
          }
        }
        string_val: "global_step"
        string_val: "ssd_300_vgg/conv1/conv1_1/weights"
        string_val: "ssd_300_vgg/conv1/conv1_1/biases"
        string_val: "ssd_300_vgg/conv1/conv1_2/weights"
        string_val: "ssd_300_vgg/conv1/conv1_2/biases"
        string_val: "ssd_300_vgg/conv2/conv2_1/weights"
        string_val: "ssd_300_vgg/conv2/conv2_1/biases"
        string_val: "ssd_300_vgg/conv2/conv2_2/weights"
        string_val: "ssd_300_vgg/conv2/conv2_2/biases"
        string_val: "ssd_300_vgg/conv3/conv3_1/weights"
        string_val: "ssd_300_vgg/conv3/conv3_1/biases"
        string_val: "ssd_300_vgg/conv3/conv3_2/weights"
        string_val: "ssd_300_vgg/conv3/conv3_2/biases"
        string_val: "ssd_300_vgg/conv3/conv3_3/weights"
        string_val: "ssd_300_vgg/conv3/conv3_3/biases"
        string_val: "ssd_300_vgg/conv4/conv4_1/weights"
        string_val: "ssd_300_vgg/conv4/conv4_1/biases"
        string_val: "ssd_300_vgg/conv4/conv4_2/weights"
        string_val: "ssd_300_vgg/conv4/conv4_2/biases"
        string_val: "ssd_300_vgg/conv4/conv4_3/weights"
        string_val: "ssd_300_vgg/conv4/conv4_3/biases"
        string_val: "ssd_300_vgg/conv5/conv5_1/weights"
        string_val: "ssd_300_vgg/conv5/conv5_1/biases"
        string_val: "ssd_300_vgg/conv5/conv5_2/weights"
        string_val: "ssd_300_vgg/conv5/conv5_2/biases"
        string_val: "ssd_300_vgg/conv5/conv5_3/weights"
        string_val: "ssd_300_vgg/conv5/conv5_3/biases"
        string_val: "ssd_300_vgg/conv6/weights"
        string_val: "ssd_300_vgg/conv6/biases"
        string_val: "ssd_300_vgg/conv7/weights"
        string_val: "ssd_300_vgg/conv7/biases"
        string_val: "ssd_300_vgg/block8/conv1x1/weights"
        string_val: "ssd_300_vgg/block8/conv1x1/biases"
        string_val: "ssd_300_vgg/block8/conv3x3/weights"
        string_val: "ssd_300_vgg/block8/conv3x3/biases"
        string_val: "ssd_300_vgg/block9/conv1x1/weights"
        string_val: "ssd_300_vgg/block9/conv1x1/biases"
        string_val: "ssd_300_vgg/block9/conv3x3/weights"
        string_val: "ssd_300_vgg/block9/conv3x3/biases"
        string_val: "ssd_300_vgg/block10/conv1x1/weights"
        string_val: "ssd_300_vgg/block10/conv1x1/biases"
        string_val: "ssd_300_vgg/block10/conv3x3/weights"
        string_val: "ssd_300_vgg/block10/conv3x3/biases"
        string_val: "ssd_300_vgg/block11/conv1x1/weights"
        string_val: "ssd_300_vgg/block11/conv1x1/biases"
        string_val: "ssd_300_vgg/block11/conv3x3/weights"
        string_val: "ssd_300_vgg/block11/conv3x3/biases"
        string_val: "ssd_300_vgg/block4_box/L2Normalization/gamma"
        string_val: "ssd_300_vgg/block4_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block4_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block4_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block4_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block7_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block7_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block7_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block7_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block8_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block8_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block8_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block8_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block9_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block9_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block9_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block9_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block10_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block10_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block10_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block10_box/conv_cls/biases"
        string_val: "ssd_300_vgg/block11_box/conv_loc/weights"
        string_val: "ssd_300_vgg/block11_box/conv_loc/biases"
        string_val: "ssd_300_vgg/block11_box/conv_cls/weights"
        string_val: "ssd_300_vgg/block11_box/conv_cls/biases"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "ssd_300_vgg/conv1/conv1_1/weights/Adam"
        string_val: "ssd_300_vgg/conv1/conv1_1/weights/Adam_1"
        string_val: "ssd_300_vgg/conv1/conv1_1/biases/Adam"
        string_val: "ssd_300_vgg/conv1/conv1_1/biases/Adam_1"
        string_val: "ssd_300_vgg/conv1/conv1_2/weights/Adam"
        string_val: "ssd_300_vgg/conv1/conv1_2/weights/Adam_1"
        string_val: "ssd_300_vgg/conv1/conv1_2/biases/Adam"
        string_val: "ssd_300_vgg/conv1/conv1_2/biases/Adam_1"
        string_val: "ssd_300_vgg/conv2/conv2_1/weights/Adam"
        string_val: "ssd_300_vgg/conv2/conv2_1/weights/Adam_1"
        string_val: "ssd_300_vgg/conv2/conv2_1/biases/Adam"
        string_val: "ssd_300_vgg/conv2/conv2_1/biases/Adam_1"
        string_val: "ssd_300_vgg/conv2/conv2_2/weights/Adam"
        string_val: "ssd_300_vgg/conv2/conv2_2/weights/Adam_1"
        string_val: "ssd_300_vgg/conv2/conv2_2/biases/Adam"
        string_val: "ssd_300_vgg/conv2/conv2_2/biases/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_1/weights/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_1/weights/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_1/biases/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_1/biases/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_2/weights/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_2/weights/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_2/biases/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_2/biases/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_3/weights/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_3/weights/Adam_1"
        string_val: "ssd_300_vgg/conv3/conv3_3/biases/Adam"
        string_val: "ssd_300_vgg/conv3/conv3_3/biases/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_1/weights/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_1/weights/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_1/biases/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_1/biases/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_2/weights/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_2/weights/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_2/biases/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_2/biases/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_3/weights/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_3/weights/Adam_1"
        string_val: "ssd_300_vgg/conv4/conv4_3/biases/Adam"
        string_val: "ssd_300_vgg/conv4/conv4_3/biases/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_1/weights/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_1/weights/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_1/biases/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_1/biases/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_2/weights/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_2/weights/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_2/biases/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_2/biases/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_3/weights/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_3/weights/Adam_1"
        string_val: "ssd_300_vgg/conv5/conv5_3/biases/Adam"
        string_val: "ssd_300_vgg/conv5/conv5_3/biases/Adam_1"
        string_val: "ssd_300_vgg/conv6/weights/Adam"
        string_val: "ssd_300_vgg/conv6/weights/Adam_1"
        string_val: "ssd_300_vgg/conv6/biases/Adam"
        string_val: "ssd_300_vgg/conv6/biases/Adam_1"
        string_val: "ssd_300_vgg/conv7/weights/Adam"
        string_val: "ssd_300_vgg/conv7/weights/Adam_1"
        string_val: "ssd_300_vgg/conv7/biases/Adam"
        string_val: "ssd_300_vgg/conv7/biases/Adam_1"
        string_val: "ssd_300_vgg/block8/conv1x1/weights/Adam"
        string_val: "ssd_300_vgg/block8/conv1x1/weights/Adam_1"
        string_val: "ssd_300_vgg/block8/conv1x1/biases/Adam"
        string_val: "ssd_300_vgg/block8/conv1x1/biases/Adam_1"
        string_val: "ssd_300_vgg/block8/conv3x3/weights/Adam"
        string_val: "ssd_300_vgg/block8/conv3x3/weights/Adam_1"
        string_val: "ssd_300_vgg/block8/conv3x3/biases/Adam"
        string_val: "ssd_300_vgg/block8/conv3x3/biases/Adam_1"
        string_val: "ssd_300_vgg/block9/conv1x1/weights/Adam"
        string_val: "ssd_300_vgg/block9/conv1x1/weights/Adam_1"
        string_val: "ssd_300_vgg/block9/conv1x1/biases/Adam"
        string_val: "ssd_300_vgg/block9/conv1x1/biases/Adam_1"
        string_val: "ssd_300_vgg/block9/conv3x3/weights/Adam"
        string_val: "ssd_300_vgg/block9/conv3x3/weights/Adam_1"
        string_val: "ssd_300_vgg/block9/conv3x3/biases/Adam"
        string_val: "ssd_300_vgg/block9/conv3x3/biases/Adam_1"
        string_val: "ssd_300_vgg/block10/conv1x1/weights/Adam"
        string_val: "ssd_300_vgg/block10/conv1x1/weights/Adam_1"
        string_val: "ssd_300_vgg/block10/conv1x1/biases/Adam"
        string_val: "ssd_300_vgg/block10/conv1x1/biases/Adam_1"
        string_val: "ssd_300_vgg/block10/conv3x3/weights/Adam"
        string_val: "ssd_300_vgg/block10/conv3x3/weights/Adam_1"
        string_val: "ssd_300_vgg/block10/conv3x3/biases/Adam"
        string_val: "ssd_300_vgg/block10/conv3x3/biases/Adam_1"
        string_val: "ssd_300_vgg/block11/conv1x1/weights/Adam"
        string_val: "ssd_300_vgg/block11/conv1x1/weights/Adam_1"
        string_val: "ssd_300_vgg/block11/conv1x1/biases/Adam"
        string_val: "ssd_300_vgg/block11/conv1x1/biases/Adam_1"
        string_val: "ssd_300_vgg/block11/conv3x3/weights/Adam"
        string_val: "ssd_300_vgg/block11/conv3x3/weights/Adam_1"
        string_val: "ssd_300_vgg/block11/conv3x3/biases/Adam"
        string_val: "ssd_300_vgg/block11/conv3x3/biases/Adam_1"
        string_val: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam"
        string_val: "ssd_300_vgg/block4_box/L2Normalization/gamma/Adam_1"
        string_val: "ssd_300_vgg/block4_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block4_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block4_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block4_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block4_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block4_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block4_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block4_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block7_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block7_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block7_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block7_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block7_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block7_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block7_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block7_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block8_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block8_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block8_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block8_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block8_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block8_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block8_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block8_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block9_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block9_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block9_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block9_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block9_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block9_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block9_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block9_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block10_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block10_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block10_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block10_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block10_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block10_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block10_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block10_box/conv_cls/biases/Adam_1"
        string_val: "ssd_300_vgg/block11_box/conv_loc/weights/Adam"
        string_val: "ssd_300_vgg/block11_box/conv_loc/weights/Adam_1"
        string_val: "ssd_300_vgg/block11_box/conv_loc/biases/Adam"
        string_val: "ssd_300_vgg/block11_box/conv_loc/biases/Adam_1"
        string_val: "ssd_300_vgg/block11_box/conv_cls/weights/Adam"
        string_val: "ssd_300_vgg/block11_box/conv_cls/weights/Adam_1"
        string_val: "ssd_300_vgg/block11_box/conv_cls/biases/Adam"
        string_val: "ssd_300_vgg/block11_box/conv_cls/biases/Adam_1"
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 216
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Shape"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 216
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Shape_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 216
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Shape_2"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "init_ops/report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "init_ops/report_uninitialized_variables/Const"
  input: "init_ops/report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 216
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "init_ops/report_uninitialized_variables/LogicalNot"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 216
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Reshape"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Squeeze"
  input: "init_ops/report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/init_1"
  op: "NoOp"
}
node {
  name: "init_ops/init_all_tables"
  op: "NoOp"
}
node {
  name: "init_ops/group_deps"
  op: "NoOp"
  input: "^init_ops/init_1"
  input: "^init_ops/init_all_tables"
}
node {
  name: "train_step/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 40000
      }
    }
  }
}
node {
  name: "train_step/GreaterEqual"
  op: "GreaterEqual"
  input: "global_step/read"
  input: "train_step/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_step/FloorMod/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10
      }
    }
  }
}
node {
  name: "train_step/FloorMod"
  op: "FloorMod"
  input: "global_step/read"
  input: "train_step/FloorMod/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_step/Equal/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "train_step/Equal"
  op: "Equal"
  input: "train_step/FloorMod"
  input: "train_step/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
versions {
  producer: 27
}
